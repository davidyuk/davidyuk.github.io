{"version":3,"file":"js/sdk.0bb7c688.js","mappings":"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","sources":["webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Calldata.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/DataFactory/BaseDataFactory.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/DataFactory/CompositeDataFactory.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/DataFactory/EventDataFactory.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/DataFactory/ListDataFactory.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/DataFactory/MapDataFactory.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/DataFactory/PrimitiveDataFactory.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/DataFactory/RecordDataFactory.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/DataFactory/TupleDataFactory.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/DataFactory/VariantDataFactory.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Encoder.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Errors/EncoderError.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Errors/FatePrefixError.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Errors/FateTypeError.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Errors/FormatError.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Errors/InternalError.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Errors/SerializerError.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Errors/TypeResolveError.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/ExternalDataFactory.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/FateComparator.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/FateTag.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/FateTypes.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Mapper/CanonicalMapper.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Mapper/InternalMapper.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Serializer.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Serializers/AddressSerializer.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Serializers/BaseSerializer.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Serializers/BitsSerializer.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Serializers/BoolSerializer.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Serializers/ByteArraySerializer.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Serializers/BytesSerializer.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Serializers/ChannelSerializer.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Serializers/ContractSerializer.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Serializers/IntSerializer.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Serializers/ListSerializer.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Serializers/MapSerializer.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Serializers/OracleQuerySerializer.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Serializers/OracleSerializer.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Serializers/StringSerializer.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Serializers/TupleSerializer.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Serializers/VariantSerializer.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/Serializers/VoidSerializer.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/TypeFactory.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/TypeResolver.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/main.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/types/FateAccountAddress.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/types/FateAddress.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/types/FateBits.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/types/FateBool.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/types/FateByteArray.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/types/FateBytes.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/types/FateChannelAddress.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/types/FateContractAddress.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/types/FateData.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/types/FateHash.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/types/FateInt.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/types/FateList.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/types/FateMap.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/types/FateOracleAddress.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/types/FateOracleQueryAddress.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/types/FateSignature.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/types/FateString.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/types/FateTuple.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/types/FateVariant.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/types/FateVoid.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/utils/HexStringToByteArray.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/utils/Int2ByteArray.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/utils/RLPInt.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/utils/abs.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/utils/assert.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/utils/base58check.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/utils/base64check.js","webpack://aepp-base/./node_modules/@aeternity/aepp-calldata/src/utils/hash.js","webpack://aepp-base/./node_modules/@aeternity/argon2-browser/dist/argon2-bundled.min.js","webpack://aepp-base/./node_modules/es5-ext/global.js","webpack://aepp-base/./node_modules/websocket/lib/browser.js","webpack://aepp-base/./node_modules/websocket/lib/version.js","webpack://aepp-base/./node_modules/@aeternity/aepp-sdk/es/account/memory.mjs","webpack://aepp-base/./node_modules/@aeternity/aepp-sdk/es/account/multiple.mjs","webpack://aepp-base/./node_modules/@aeternity/aepp-sdk/es/utils/keystore.mjs","webpack://aepp-base/./node_modules/@aeternity/aepp-sdk/es/utils/hd-wallet.mjs","webpack://aepp-base/./node_modules/@aeternity/aepp-sdk/es/ae/aens.mjs","webpack://aepp-base/./node_modules/@aeternity/aepp-sdk/es/contract/compiler.mjs","webpack://aepp-base/./node_modules/@aeternity/aepp-sdk/es/contract/aci.mjs","webpack://aepp-base/./node_modules/@aeternity/aepp-sdk/es/ae/contract.mjs","webpack://aepp-base/./node_modules/@aeternity/aepp-sdk/es/contract/ga/helpers.mjs","webpack://aepp-base/./node_modules/@aeternity/aepp-sdk/es/contract/ga/index.mjs","webpack://aepp-base/./node_modules/@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/aepp-rpc.mjs","webpack://aepp-base/./node_modules/@aeternity/aepp-sdk/es/ae/oracle.mjs","webpack://aepp-base/./node_modules/@aeternity/aepp-sdk/es/ae/aepp.mjs","webpack://aepp-base/./node_modules/@aeternity/aepp-sdk/es/ae/wallet.mjs","webpack://aepp-base/./node_modules/@aeternity/aepp-sdk/es/channel/internal.mjs","webpack://aepp-base/./node_modules/@aeternity/aepp-sdk/es/channel/handlers.mjs","webpack://aepp-base/./node_modules/@aeternity/aepp-sdk/es/channel/index.mjs","webpack://aepp-base/./node_modules/@aeternity/aepp-sdk/es/ae/universal.mjs","webpack://aepp-base/./node_modules/@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/content-script-bridge.mjs","webpack://aepp-base/./node_modules/@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/wallet-detector.mjs","webpack://aepp-base/./node_modules/@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/connection/browser-runtime.mjs","webpack://aepp-base/./node_modules/@aeternity/aepp-sdk/es/index.mjs","webpack://aepp-base/./node_modules/@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/rpc-client.mjs","webpack://aepp-base/./node_modules/@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/wallet-rpc.mjs"],"sourcesContent":["const FateByteArray = require('./types/FateByteArray')\nconst FateTuple = require('./types/FateTuple')\nconst {symbolIdentifier} = require('./utils/hash')\n\nconst Calldata = (funName, argTypes, argsData) => {\n    const functionId = symbolIdentifier(funName)\n    const funcBytes = new FateByteArray(functionId)\n    const argsTuple = new FateTuple(argTypes, argsData)\n\n    return new FateTuple(\n        [funcBytes.type, argsTuple.type],\n        [funcBytes, argsTuple]\n    )\n}\n\nmodule.exports = Calldata\n","class BaseDataFactory {\n    constructor(valueFactory) {\n        this._valueFactory = valueFactory\n    }\n\n    get valueFactory() {\n        return this._valueFactory\n    }\n\n    supports({_name, _valueTypes}) {\n        return false\n    }\n\n    create(_type, _value) {\n        throw new Error('Not implemented.')\n    }\n}\n\nmodule.exports = BaseDataFactory\n","const assert = require('../utils/assert')\nconst PrimitiveDataFactory = require('./PrimitiveDataFactory')\nconst ListDataFactory = require('./ListDataFactory')\nconst MapDataFactory = require('./MapDataFactory')\nconst TupleDataFactory = require('./TupleDataFactory')\nconst RecordDataFactory = require('./RecordDataFactory')\nconst VariantDataFactory = require('./VariantDataFactory')\nconst EventDataFactory = require('./EventDataFactory')\n\nconst zip = (arr, ...arrs) => {\n    return arr.map((val, i) => arrs.reduce((a, curr) => [...a, curr[i]], [val]))\n}\n\nclass CompositeDataFactory {\n    constructor() {\n        const variantFactory = new VariantDataFactory(this)\n        this._factories = [\n            new PrimitiveDataFactory(this),\n            new ListDataFactory(this),\n            new MapDataFactory(this),\n            new TupleDataFactory(this),\n            new RecordDataFactory(this),\n            new EventDataFactory(this, variantFactory),\n            variantFactory,\n        ]\n    }\n\n    createMultiple(types, values) {\n        assert(\n            values.length === types.length,\n            `Number of types (${types.length}) and values (${values.length}) should match`\n        )\n\n        return zip(types, values).map(el => this.create(...el))\n    }\n\n    create(type, value) {\n        const factory = this._factories.find(f => f.supports(type))\n        assert(factory, `Unsupported type: ${JSON.stringify(type)}`)\n\n        return factory.create(type, value)\n    }\n}\n\nmodule.exports = CompositeDataFactory\n","const {hash} = require('../utils/hash')\nconst {ByteArray2Int} = require('../utils/Int2ByteArray')\nconst TypeResolveError = require('../Errors/TypeResolveError')\nconst BaseDataFactory = require('./BaseDataFactory')\n\nconst DATA_TYPES = [\n    'string',\n    'signature',\n    'bytes',\n]\n\nclass EventDataFactory extends BaseDataFactory {\n    constructor(valueFactory, variantFactory) {\n        super(valueFactory)\n\n        this._variantFactory = variantFactory\n    }\n\n    supports({ name, _valueTypes }) {\n        return 'event' === name\n    }\n\n    create({variantType}, {data, topics}) {\n        const [nameHash, ...args] = topics\n\n        if (typeof nameHash !== 'bigint') {\n            throw new TypeResolveError(`Event name hash (first topic) should be of type \"BigInt\", got \"${typeof nameHash}\" instead.`)\n        }\n\n        const idx = variantType.variants\n            .map(v => ByteArray2Int(hash(Object.keys(v)[0])))\n            .findIndex(v => v === nameHash)\n\n        if (idx === -1) {\n            throw new TypeResolveError('Event name hash does not match any event variant constructor')\n        }\n\n        const variant = variantType.variants[idx]\n        const variantName = Object.keys(variant)[0]\n        const [argTypes] = Object.values(variant)\n        const resolvedArgs = argTypes.map(t => {\n            if (this._isData(t)) {\n                return data\n            }\n\n            return args.shift()\n        })\n\n        return this._variantFactory.create(variantType, {[variantName]: resolvedArgs})\n    }\n\n    _isData(type) {\n        if (!DATA_TYPES.includes(type.name)) {\n            return false\n        }\n\n        if (type.name === 'bytes' && type.size <= 32) {\n            return false\n        }\n\n        return true\n    }\n}\n\nmodule.exports = EventDataFactory\n","const FateList = require('../types/FateList')\nconst FateTypeError = require('../Errors/FateTypeError')\nconst BaseDataFactory = require('./BaseDataFactory')\n\nclass ListDataFactory extends BaseDataFactory {\n    supports({name, _valueTypes}) {\n        return 'list' === name\n    }\n\n    create(type, value) {\n        if (!Array.isArray(value)) {\n            throw new FateTypeError(\n                type.name,\n                `Fate list must be an Array, got ${value} instead`\n            )\n        }\n\n        const resolvedValues = value.map(v => this.valueFactory.create(type.valuesType, v))\n\n        return new FateList(type.valuesType, resolvedValues)\n    }\n}\n\nmodule.exports = ListDataFactory\n","const FateMap = require('../types/FateMap')\nconst BaseDataFactory = require('./BaseDataFactory')\n\nclass MapDataFactory extends BaseDataFactory {\n    supports({ name, _valueTypes }) {\n        return 'map' === name\n    }\n\n    create(type, value) {\n        const resolvedValues = []\n        for (const item of value) {\n            resolvedValues.push([\n                this.valueFactory.create(type.keyType, item[0]),\n                this.valueFactory.create(type.valueType, item[1]),\n            ])\n        }\n\n        return new FateMap(type.keyType, type.valueType, resolvedValues)\n    }\n}\n\nmodule.exports = MapDataFactory\n","const FateInt = require('../types/FateInt')\nconst FateBool = require('../types/FateBool')\nconst FateString = require('../types/FateString')\nconst FateHash = require('../types/FateHash')\nconst FateSignature = require('../types/FateSignature')\nconst FateBytes = require('../types/FateBytes')\nconst FateBits = require('../types/FateBits')\nconst FateAccountAddress = require('../types/FateAccountAddress')\nconst FateContractAddress = require('../types/FateContractAddress')\nconst FateChannelAddress = require('../types/FateChannelAddress')\nconst FateOracleAddress = require('../types/FateOracleAddress')\nconst FateOracleQueryAddress = require('../types/FateOracleQueryAddress')\nconst BaseDataFactory = require('./BaseDataFactory')\n\nconst TYPES = [\n    'int',\n    'bool',\n    'string',\n    'bits',\n    'hash',\n    'bytes',\n    'signature',\n    'account_address',\n    'contract_address',\n    'channel_address',\n    'oracle_address',\n    'oracle_query_address'\n]\n\nclass PrimitiveDataFactory extends BaseDataFactory {\n    supports({ name, _valueTypes }) {\n        return TYPES.includes(name)\n    }\n\n    create(type, value) {\n        switch (type.name) {\n        case 'int':\n            return new FateInt(value)\n        case 'bool':\n            return new FateBool(value)\n        case 'string':\n            return new FateString(value)\n        case 'bits':\n            return new FateBits(value)\n        case 'hash':\n            return new FateHash(value)\n        case 'bytes':\n            return new FateBytes(value, type.valueTypes)\n        case 'signature':\n            return new FateSignature(value)\n        case 'account_address':\n            return new FateAccountAddress(value)\n        case 'contract_address':\n            return new FateContractAddress(value)\n        case 'channel_address':\n            return new FateChannelAddress(value)\n        case 'oracle_address':\n            return new FateOracleAddress(value)\n        case 'oracle_query_address':\n            return new FateOracleQueryAddress(value)\n        default:\n            throw new Error(`Unsupported type \"${type.name}\"`)\n        }\n    }\n}\n\nmodule.exports = PrimitiveDataFactory\n","const FateTuple = require('../types/FateTuple')\nconst BaseDataFactory = require('./BaseDataFactory')\n\nclass RecordDataFactory extends BaseDataFactory {\n    supports({ name, _valueTypes }) {\n        return 'record' === name\n    }\n\n    create(type, value) {\n        const resolvedValue = type.valueTypes.map((t, i) => {\n            const key = type.keys[i]\n            return this.valueFactory.create(t, value[key])\n        })\n\n        return new FateTuple(type.valueTypes, resolvedValue)\n    }\n}\n\nmodule.exports = RecordDataFactory\n","const FateTuple = require('../types/FateTuple')\nconst FateTypeError = require('../Errors/FateTypeError')\nconst BaseDataFactory = require('./BaseDataFactory')\n\nclass TupleDataFactory extends BaseDataFactory {\n    supports({ name, _valueTypes }) {\n        return 'tuple' === name\n    }\n\n    create(type, value) {\n        if (!Array.isArray(value)) {\n            throw new FateTypeError(\n                type.name,\n                `Fate tuple must be an Array, got ${value} instead`\n            )\n        }\n\n        const resolvedValue = type.valueTypes.map((t, i) => {\n            return this.valueFactory.create(t, value[i])\n        })\n\n        return new FateTuple(type.valueTypes, resolvedValue)\n    }\n}\n\nmodule.exports = TupleDataFactory\n","const FateVariant = require('../types/FateVariant')\nconst FateTypeError = require('../Errors/FateTypeError')\nconst BaseDataFactory = require('./BaseDataFactory')\n\nconst TYPES = [\n    'variant',\n    'Chain.ttl',\n    'AENS.pointee',\n    'AENS.name'\n]\n\nclass VariantDataFactory extends BaseDataFactory {\n    supports({ name, _valueTypes }) {\n        return TYPES.includes(name)\n    }\n\n    create(type, value) {\n        if (!this.isValid(value)) {\n            throw new FateTypeError(\n                type.name,\n                `Variant should be an object mapping constructor to array of values, got \"${value}\" instead`\n            )\n        }\n\n        const [variantCtor, variantArgs] = Object.entries(value)[0]\n\n        const arities = type.variants.map(e => {\n            const [[, args]] = Object.entries(e)\n            return args.length\n        })\n\n        const tag = type.variants.findIndex(e => {\n            const [[key, _]] = Object.entries(e)\n            return key === variantCtor\n        })\n\n        if (tag === -1) {\n            throw new FateTypeError(\n                type.name,\n                `Unknown variant constructor: ${variantCtor}`\n            )\n        }\n\n        const [[, variantTypes]] = Object.entries(type.variants[tag])\n\n        if (variantArgs.length !== variantTypes.length) {\n            throw new FateTypeError(\n                type.name,\n                `\"${variantCtor}\" variant constructor expects ${variantTypes.length} argument(s) but got ${variantArgs.length} instead`\n            )\n        }\n\n        const variantValue = this.valueFactory.createMultiple(variantTypes, variantArgs)\n\n        return new FateVariant(arities, tag, variantValue, variantTypes, type.variants)\n    }\n\n    isValid(value) {\n        return typeof value === 'object'\n            && value !== null\n            && Object.entries(value).length === 1\n            && Array.isArray(Object.values(value)[0])\n    }\n}\n\nmodule.exports = VariantDataFactory\n","const base64check = require('./utils/base64check')\nconst Serializer = require('./Serializer')\nconst TypeResolver = require('./TypeResolver')\nconst CompositeDataFactory = require('./DataFactory/CompositeDataFactory')\nconst ExternalDataFactory = require('./ExternalDataFactory')\nconst CanonicalMapper = require('./Mapper/CanonicalMapper')\nconst InternalMapper = require('./Mapper/InternalMapper')\nconst Calldata = require('./Calldata')\nconst {FateTypeString} = require('./FateTypes')\nconst EncoderError = require('./Errors/EncoderError')\nconst FormatError = require('./Errors/FormatError')\n\nclass Encoder {\n    /**\n     * Creates contract encoder\n     *\n     * @example\n     * const ACI = require('./Test.json')\n     * const encoder = new Encoder(ACI)\n     *\n     * @param {Object} aci - The contarct ACI in a cannonical form as POJO.\n    */\n    constructor(aci) {\n        /** @type {Object} */\n        this._aci = aci\n\n        /** @type {Serializer} */\n        this._serializer = new Serializer()\n\n        /** @type {CompositeDataFactory} */\n        this._dataFactory = new CompositeDataFactory()\n\n        /** @type {ExternalDataFactory} */\n        this._externalDataFactory = new ExternalDataFactory(new InternalMapper())\n\n        /** @type {TypeResolver} */\n        this._typeResolver = new TypeResolver(aci)\n\n        /** @type {InternalMapper} */\n        this._internalMapper = new InternalMapper()\n\n        /** @type {CanonicalMapper} */\n        this._canonicalMapper = new CanonicalMapper()\n    }\n\n    /**\n     * Creates contract calldata\n     *\n     * @example\n     * const encoded = encoder.encode('Test', 'test_string', [\"whoolymoly\"])\n     * console.log(`Encoded data: ${encoded}`)\n     * // Outputs:\n     * // Encoded data: cb_KxHwzCuVGyl3aG9vbHltb2x5zwMSnw==\n     *\n     * @param {string} contarct - The contarct name as defined in the ACI.\n     * @param {string} funName - The function name as defined in the ACI.\n     * @param {Array} args - An array of call arguments as Javascript data structures. See README.md\n     * @returns {string} Encoded calldata\n    */\n    encode(contract, funName, args) {\n        const {types, required} = this._typeResolver.getCallTypes(contract, funName)\n\n        if (args.length > types.length || args.length < required) {\n            throw new EncoderError(\n                'Non matching number of arguments. '\n                + `${funName} expects between ${required} and ${types.length} number of arguments but got ${args.length}`\n            )\n        }\n\n        // fill in the options arguments\n        while (args.length < types.length) {\n            args.push(undefined)\n        }\n\n        const argsData = this._externalDataFactory.createMultiple(types, args)\n        const calldata = Calldata(funName, types, argsData)\n        const serialized = this._serializer.serialize(calldata)\n        const data = new Uint8Array(serialized.flat(Infinity))\n\n        return 'cb_' + base64check.encode(data)\n    }\n\n    /**\n     * Decodes successful (type = ok) contract call return data\n     *\n     * @example\n     * const decoded = encoder.decode('Test', 'test_string', 'cb_KXdob29seW1vbHlGazSE')\n     * console.log(`Decoded data: ${decoded}`)\n     * // Outputs:\n     * // Decoded data: whoolymoly\n     *\n     * @param {string} contarct - The contarct name as defined in the ACI.\n     * @param {string} funName - The function name as defined in the ACI.\n     * @param {string} data - The call return value in a cannonical format.\n     * @returns {boolean|string|BigInt|Array|Map|Object}\n     *  Decoded value as Javascript data structures. See README.md\n    */\n    decode(contract, funName, data) {\n        const type = this._typeResolver.getReturnType(contract, funName)\n        const binData = this.decodeString(data)\n        const deserialized = this._serializer.deserialize(type, binData)\n\n        return deserialized.accept(this._canonicalMapper)\n    }\n\n    /* eslint-disable max-len */\n    /**\n     * Decodes a string\n     *\n     *\n     * @example\n     * const error = encoder.decodeString('cb_VHlwZSBlcnJvciBvbiBjYWxsOiBbe2J5dGVzLDw8MjQwLDIsLi4uPj59XSBpcyBub3Qgb2YgdHlwZSBbe2J5dGVzLDMyfV3EtJjU')\n     * console.log('Error: ' + error.toString())\n     * // Outputs:\n     * // Error: Type error on call: [{bytes,<<240,2,...>>}] is not of type [{bytes,32}]\n     *\n     * @param {string} data - The encoded string.\n     * @returns {Uint8Array} Decoded value as byte array.\n    */\n    decodeString(data) {\n        if (!data.startsWith('cb_')) {\n            throw new FormatError('Invalid data format (missing cb_ prefix)')\n        }\n\n        return base64check.decode(data.substring(3))\n    }\n    /* eslint-enable max-len */\n\n    /**\n     * Decodes a FATE string\n     *\n     * @example\n     * const revert = encoder.decodeFateString('cb_OXJlcXVpcmUgZmFpbGVkarP9mg==')\n     * console.log('Revert: ' + revert)\n     * // Outputs:\n     * // Revert: require failed\n     *\n     * @param {string} data - The FATE encoded string.\n     * @returns {string} Decoded string value.\n    */\n    decodeFateString(data) {\n        const binData = this.decodeString(data)\n        const deserialized = this._serializer.deserialize(FateTypeString(), binData)\n\n        return deserialized.accept(this._canonicalMapper)\n    }\n\n    /**\n     * Decodes contract event\n     *\n     * @example\n     * const data = encoder.decodeEvent('Test', 'cb_dHJpZ2dlcmVk1FYuYA==', [\n     *     34853523142692495808479485503424878684430196596020091237715106250497712463899n,\n     *     17\n     * ])\n     * console.log(data)\n     * // Outputs:\n     * // {EventTwo: [17n, 'triggered']}\n     *\n     * @param {string} contarct - The contarct name as defined in the ACI.\n     * @param {string} encodedData - Event encoded data\n     * @param {Array} topics - A list of event topics.\n     * First element should be the implicit topic that carry the event constructor name.\n     */\n    decodeEvent(contract, encodedData, topics) {\n        const data = this.decodeString(encodedData)\n        const type = this._typeResolver.getEventType(contract)\n        const event = {topics, data}\n        const variant = this._dataFactory.create(type, event)\n\n        return variant.accept(this._canonicalMapper)\n    }\n}\n\nmodule.exports = Encoder\n","class EncoderError extends Error {\n    constructor(message) {\n        super(message)\n        this.name = 'EncoderError'\n    }\n}\n\nmodule.exports = EncoderError\n","class FatePrefixError extends Error {\n    constructor(prefix) {\n        super('Invalid FATE prefix: 0b' + prefix.toString(2).padStart(8, '0'))\n\n        this.name = 'FatePrefixError'\n        this.prefix = prefix\n    }\n}\n\nmodule.exports = FatePrefixError\n","class FateTypeError extends Error {\n    constructor(type, message) {\n        super(message)\n        this.name = 'FateTypeError'\n        this.type = type\n    }\n}\n\nmodule.exports = FateTypeError\n","class FormatError extends Error {\n    constructor(message) {\n        super(message)\n        this.name = 'FormatError'\n    }\n}\n\nmodule.exports = FormatError\n","class InternalError extends Error {\n    constructor(message) {\n        super(message)\n        this.name = 'InternalError'\n    }\n}\n\nmodule.exports = InternalError\n","class SerializerError extends Error {\n    constructor(message) {\n        super(message)\n        this.name = 'SerializerError'\n    }\n}\n\nmodule.exports = SerializerError\n","class TypeResolveError extends Error {\n    constructor(message) {\n        super(message)\n        this.name = 'TypeResolveError'\n    }\n}\n\nmodule.exports = TypeResolveError\n","const CompositeDataFactory = require('./DataFactory/CompositeDataFactory')\n\nclass ExternalDataFactory extends CompositeDataFactory {\n    constructor(mapper) {\n        super()\n\n        this._mapper = mapper\n    }\n\n    create(type, value) {\n        const internalValue = this._mapper.toInternal(type, value)\n\n        return super.create(type, internalValue)\n    }\n}\n\nmodule.exports = ExternalDataFactory\n","const assert = require('./utils/assert')\nconst FateList = require('./types/FateList')\nconst FateTuple = require('./types/FateTuple')\nconst {FateTypeTuple, FateTypeInt} = require('./FateTypes')\n\n/* eslint-disable no-use-before-define */\n\n// TODO types comparator\nconst listComparator = (a, b) => {\n    if (a.length === 0) {\n        return -1\n    }\n\n    if (b.length === 0) {\n        return 1\n    }\n\n    const cmp = FateComparator(a.itemsType)\n    for (let i = 0; i < a.length; i++) {\n        // second list is shorter but matches as prefix of the first one\n        if (typeof b.items[i] === 'undefined') {\n            return 1\n        }\n\n        // element difference\n        const diff = cmp(a.items[i], b.items[i])\n        if (diff !== 0) {\n            return diff\n        }\n    }\n\n    // if there is no early return from the loop above\n    // then the first list match a prefix of the second\n\n    // equal lists\n    if (a.length === b.length) {\n        return 0\n    }\n\n    // first list is shorter, thus smaller\n    return -1\n}\n\nconst tupleComparator = (a, b) => {\n    if (a.size === 0) {\n        return -1\n    }\n\n    const sizeDiff = a.size - b.size\n    if (sizeDiff !== 0) {\n        return sizeDiff\n    }\n\n    // equal size - compare elements\n    for (let i = 0; i < a.size; i++) {\n        const valTypeA = a.valueTypes[i]\n\n        // TODO support different types ?\n\n        const diff = FateComparator(valTypeA)(a.items[i], b.items[i])\n        if (diff !== 0) {\n            return diff\n        }\n    }\n\n    // equal tuples\n    return 0\n}\n\nconst variantComparator = (a, b) => {\n    const aDiff = a.arities.length - b.arities.length\n    if (aDiff !== 0) {\n        return aDiff\n    }\n\n    const aList = new FateList(a.aritiesType, a.arities)\n    const bList = new FateList(b.aritiesType, b.arities)\n    const aComparator = FateComparator(aList)\n\n    const lDiff = aComparator(aList, bList)\n    if (lDiff !== 0) {\n        return lDiff\n    }\n\n    const tDiff = a.tag - b.tag\n    if (tDiff !== 0) {\n        return tDiff\n    }\n\n    // equal arities and tags - compare elements\n    const elementsComparator = FateComparator(FateTypeTuple())\n\n    return elementsComparator(\n        new FateTuple(a.valueTypes, a.value),\n        new FateTuple(b.valueTypes, b.value)\n    )\n}\n\nconst mapItemComparator = (type) => {\n    const keyComparator = FateComparator(type)\n    return (a, b) => keyComparator(a.key, b.key)\n}\n\nconst mapComparator = (a, b) => {\n    const aItems = [...a.items]\n    const bItems = [...b.items]\n\n    aItems.sort(mapItemComparator(a.keyType))\n    bItems.sort(mapItemComparator(b.keyType))\n\n    const keyComparator = FateComparator(a.keyType)\n    const valueComparator = FateComparator(a.valueType)\n\n    for (let i = 0; i < aItems.length; i++) {\n        // second map is smaller (less items)\n        if (typeof bItems[i] === 'undefined') {\n            return 1\n        }\n\n        const aItem = aItems[i]\n        const bItem = bItems[i]\n\n        const kDiff = keyComparator(aItem.key, bItem.key)\n        if (kDiff !== 0) {\n            return kDiff\n        }\n\n        const vDiff = valueComparator(aItem.value, bItem.value)\n        if (vDiff !== 0) {\n            return vDiff\n        }\n    }\n\n    // equal number of items\n    if (aItems.length === bItems.length) {\n        return 0\n    }\n\n    // first map item list is shorter, thus smaller\n    return -1\n}\n\nconst bytesComparator = (a, b) => {\n    const aList = new FateList(FateTypeInt(), a.valueOf())\n    const bList = new FateList(FateTypeInt(), b.valueOf())\n\n    return listComparator(aList, bList)\n}\n\nconst intComparator = (a, b) => Number(BigInt(a) - BigInt(b))\nconst stringComparator = (a, b) => a.toString().localeCompare(b.toString())\nconst boolComparator = (a, b) => a - b\nconst bitsComparator = (a, b) => {\n    return (a < 0 || b < 0) ? -intComparator(a, b) : intComparator(a, b)\n}\n\nconst comparators = {\n    'int': intComparator,\n    'bool': boolComparator,\n    'string': stringComparator,\n    'bits': bitsComparator,\n    // composite types\n    'list': listComparator,\n    'tuple': tupleComparator,\n    'variant': variantComparator,\n    'map': mapComparator,\n    // objects (bytes)\n    'bytes': bytesComparator,\n    'account_address': bytesComparator,\n    'channel_address': bytesComparator,\n    'contract_address': bytesComparator,\n    'oracle_query_address': bytesComparator,\n    'oracle_address': bytesComparator,\n}\n\nconst FateComparator = (type) => {\n    assert(type.hasOwnProperty('name'), `Cannot determine type name of ${JSON.stringify(type)}`)\n    assert(comparators.hasOwnProperty(type.name), `Unsupported comparator for ${type.name}`)\n\n    return comparators[type.name]\n}\n\nmodule.exports = FateComparator\n","/* eslint-disable key-spacing, indent */\n\n// Definition of tag scheme.\n// This has to follow the protocol specification.\nmodule.exports = Object.freeze({\n    SMALL_INT    :        0b0, // sxxxxxx 0 - 6 bit integer with sign bit\n                                       // 1 Set below\n    LONG_STRING  : 0b00000001, // 000000 01 | RLP encoded array - when size >= 64\n    SHORT_STRING :       0b01, // xxxxxx 01 | [bytes] - when 0 < xxxxxx:size < 64\n                                      // 11  Set below\n    SHORT_LIST   :     0b0011, // xxxx 0011 | [encoded elements] when  0 < length < 16\n                               // xxxx 0111\n                               // 1010 0111\n                               // 1011 0111\n                               // 1100 0111\n                               // 1101 0111\n    LONG_TUPLE   : 0b00001011, // 0000 1011 | RLP encoded (size - 16) | [encoded elements],\n    SHORT_TUPLE  :     0b1011, // xxxx 1011 | [encoded elements] when 0  <  size < 16\n                                    // 1111 Set below\n    LONG_LIST    : 0b00011111, // 0001 1111 | RLP encoded (length - 16) | [encoded lements]\n    MAP          : 0b00101111, // 0010 1111 | RLP encoded size | [encoded key, encoded value]\n    EMPTY_TUPLE  : 0b00111111, // 0011 1111\n    POS_BITS     : 0b01001111, // 0100 1111 | RLP encoded integer (to be interpreted as bitfield)\n    EMPTY_STRING : 0b01011111, // 0101 1111\n    POS_BIG_INT  : 0b01101111, // 0110 1111 | RLP encoded (integer - 64)\n    FALSE        : 0b01111111, // 0111 1111\n                               // 1000 1111 - FREE (Possibly for bytecode in the future.)\n    OBJECT       : 0b10011111, // 1001 1111 | ObjectType | RLP encoded Array\n    VARIANT      : 0b10101111, // 1010 1111 | [encoded arities] | encoded tag | [encoded values]\n    MAP_ID       : 0b10111111, // 1011 1111 | RLP encoded integer (store map id)\n    NEG_BITS     : 0b11001111, // 1100 1111 | RLP encoded integer (infinite 1:s bitfield)\n    EMPTY_MAP    : 0b11011111, // 1101 1111\n    NEG_BIG_INT  : 0b11101111, // 1110 1111 | RLP encoded (integer - 64)\n    TRUE         : 0b11111111, // 1111 1111\n\n    // Object types\n    OTYPE_ADDRESS       : 0,\n    OTYPE_BYTES         : 1,\n    OTYPE_CONTRACT      : 2,\n    OTYPE_ORACLE        : 3,\n    OTYPE_ORACLE_QUERY  : 4,\n    OTYPE_CHANNEL       : 5,\n})\n","const FateTypeVoid = () => {\n    return {name: 'void'}\n}\n\nconst FateTypeInt = () => {\n    return {name: 'int'}\n}\n\nconst FateTypeBool = () => {\n    return {name: 'bool'}\n}\n\nconst FateTypeString = () => {\n    return {name: 'string'}\n}\n\nconst FateTypeBits = () => {\n    return {name: 'bits'}\n}\n\nconst FateTypeBytes = (size) => {\n    return {name: 'bytes', size}\n}\n\nconst FateTypeHash = () => {\n    return {name: 'hash'}\n}\n\nconst FateTypeSignature = () => {\n    return {name: 'signature'}\n}\n\nconst FateTypeAccountAddress = () => {\n    return {name: 'account_address'}\n}\n\nconst FateTypeContractAddress = () => {\n    return {name: 'contract_address'}\n}\n\nconst FateTypeOracleAddress = (questionType, answerType) => {\n    return {\n        name: 'oracle_address',\n        questionType,\n        answerType\n    }\n}\n\nconst FateTypeOracleQueryAddress = (questionType, answerType) => {\n    return {\n        name: 'oracle_query_address',\n        questionType,\n        answerType\n    }\n}\n\nconst FateTypeByteArray = () => {\n    return {name: 'byte_array'}\n}\n\nconst FateTypeList = (valuesType) => {\n    return {\n        name: 'list',\n        valuesType,\n    }\n}\n\nconst FateTypeTuple = (valueTypes) => {\n    return {\n        name: 'tuple',\n        valueTypes\n    }\n}\n\nconst FateTypeRecord = (keys, valueTypes) => {\n    return {\n        name: 'record',\n        keys,\n        valueTypes,\n    }\n}\n\nconst FateTypeMap = (keyType, valueType) => {\n    return {\n        name: 'map',\n        keyType,\n        valueType,\n    }\n}\n\nconst FateTypeVariant = (arities, variantType, variants) => {\n    return {\n        name: 'variant',\n        aritiesType: FateTypeInt(),\n        arities,\n        variantType: FateTypeTuple(variantType),\n        variants,\n    }\n}\n\nconst FateTypeOption = (valueTypes) => {\n    const variants = [\n        { None: []},\n        { Some: valueTypes }\n    ]\n\n    return FateTypeVariant(0, null, variants)\n}\n\nconst FateTypeChainTTL = () => {\n    const variants = [\n        {RelativeTTL: [FateTypeInt()]},\n        {FixedTTL: [FateTypeInt()]}\n    ]\n\n    return FateTypeVariant(0, null, variants)\n}\n\nconst FateTypeChainGAMetaTx = () => {\n    const variants = [\n        {'Chain.GAMetaTx': [FateTypeAccountAddress(), FateTypeInt()]},\n    ]\n\n    return FateTypeVariant(0, null, variants)\n}\n\nconst FateTypeChainPayingForTx = () => {\n    const variants = [\n        {'Chain.PayingForTx': [FateTypeAccountAddress(), FateTypeInt()]},\n    ]\n\n    return FateTypeVariant(0, null, variants)\n}\n\nconst FateTypeChainBaseTx = () => {\n    const variants = [\n        {'Chain.SpendTx': [FateTypeAccountAddress(), FateTypeInt(), FateTypeString()]},\n        {'Chain.OracleRegisterTx': []},\n        {'Chain.OracleQueryTx': []},\n        {'Chain.OracleResponseTx': []},\n        {'Chain.OracleExtendTx': []},\n        {'Chain.NamePreclaimTx': []},\n        {'Chain.NameClaimTx': [FateTypeString()]},\n        {'Chain.NameUpdateTx': [FateTypeHash()]},\n        {'Chain.NameRevokeTx': [FateTypeHash()]},\n        {'Chain.NameTransferTx': [FateTypeAccountAddress(), FateTypeHash()]},\n        {'Chain.ChannelCreateTx': [FateTypeAccountAddress()]},\n        {'Chain.ChannelDepositTx': [FateTypeAccountAddress(), FateTypeInt()]},\n        {'Chain.ChannelWithdrawTx': [FateTypeAccountAddress(), FateTypeInt()]},\n        {'Chain.ChannelForceProgressTx': [FateTypeAccountAddress()]},\n        {'Chain.ChannelCloseMutualTx': [FateTypeAccountAddress()]},\n        {'Chain.ChannelCloseSoloTx': [FateTypeAccountAddress()]},\n        {'Chain.ChannelSlashTx': [FateTypeAccountAddress()]},\n        {'Chain.ChannelSettleTx': [FateTypeAccountAddress()]},\n        {'Chain.ChannelSnapshotSoloTx': [FateTypeAccountAddress()]},\n        {'Chain.ContractCreateTx': [FateTypeAccountAddress()]},\n        {'Chain.ContractCallTx': [FateTypeAccountAddress(), FateTypeInt()]},\n        {'Chain.GAAttachTx': []},\n    ]\n\n    return FateTypeVariant(0, null, variants)\n}\n\nconst FateTypeAENSPointee = () => {\n    const variants = [\n        {'AENS.AccountPt': [FateTypeAccountAddress()]},\n        {'AENS.OraclePt': [FateTypeAccountAddress()]},\n        {'AENS.ContractPt': [FateTypeAccountAddress()]},\n        {'AENS.ChannelPt': [FateTypeAccountAddress()]},\n    ]\n\n    return FateTypeVariant(0, null, variants)\n}\n\nconst FateTypeAENSName = () => {\n    const variants = [{\n        'AENS.Name': [\n            FateTypeAccountAddress(),\n            FateTypeChainTTL(),\n            FateTypeMap(FateTypeString(), FateTypeAENSPointee())\n        ]\n    }]\n\n    return FateTypeVariant(0, null, variants)\n}\n\nconst FateTypeEvent = (variantType) => {\n    return {\n        name: 'event',\n        variantType,\n    }\n}\n\nmodule.exports = {\n    FateTypeVoid,\n    FateTypeInt,\n    FateTypeBool,\n    FateTypeString,\n    FateTypeBits,\n    FateTypeBytes,\n    FateTypeHash,\n    FateTypeSignature,\n    FateTypeAccountAddress,\n    FateTypeContractAddress,\n    FateTypeOracleAddress,\n    FateTypeOracleQueryAddress,\n    FateTypeByteArray,\n    FateTypeList,\n    FateTypeTuple,\n    FateTypeRecord,\n    FateTypeMap,\n    FateTypeVariant,\n    FateTypeOption,\n    FateTypeChainTTL,\n    FateTypeChainGAMetaTx,\n    FateTypeChainPayingForTx,\n    FateTypeChainBaseTx,\n    FateTypeAENSPointee,\n    FateTypeAENSName,\n    FateTypeEvent,\n}\n","const base58check = require('../utils/base58check')\n\n/**\n * Map the internal representation FATE data structure to Aesophia canonical structures and formats.\n */\n\nclass CanonicalMapper {\n    visitData(acceptor) {\n        return acceptor.valueOf()\n    }\n\n    visitAddress(acceptor) {\n        return acceptor.prefix + '_' + base58check.encode(acceptor.value)\n    }\n\n    visitList(acceptor) {\n        return acceptor.items.map(e => e.accept(this))\n    }\n\n    visitMap(acceptor) {\n        const map = new Map()\n        for (const [key, value] of acceptor.iterator) {\n            map.set(key.accept(this), value.accept(this))\n        }\n\n        return map\n    }\n\n    visitTuple(acceptor) {\n        return acceptor.prepareItems(e => e.accept(this))\n    }\n\n    visitVariant(acceptor) {\n        if (acceptor.variantName === 'None') {\n            return undefined\n        }\n\n        const value = acceptor.value.map(e => e.accept(this))\n\n        if (acceptor.variantName === 'Some') {\n            return value[0]\n        }\n\n        return {\n            [acceptor.variantName]: value\n        }\n    }\n}\n\nmodule.exports = CanonicalMapper\n","const base58check = require('../utils/base58check')\nconst FateTypeError = require('../Errors/FateTypeError')\n\nconst ADDRESS_PREFIX_MAP = {\n    account_address: 'ak',\n    contract_address: 'ct',\n    channel_address: 'ch',\n    oracle_address: 'ok',\n    oracle_query_address: 'oq'\n}\n\n/**\n * Map Aesophia canonical structures and formats to internal representation FATE data structures.\n */\nclass InternalMapper {\n    toInternal(type, value) {\n        switch (type.name) {\n        case 'account_address':\n        case 'contract_address':\n        case 'channel_address':\n        case 'oracle_address':\n        case 'oracle_query_address':\n            return this.toAddress(type, value)\n        case 'variant':\n            return this.toVariant(type, value)\n        case 'map':\n            return this.toMap(type, value)\n        default:\n            return value\n        }\n    }\n\n    toAddress({name, _}, value) {\n        const asString = value.toString()\n        const prefix = ADDRESS_PREFIX_MAP[name]\n\n        if (!asString.startsWith(prefix + '_')) {\n            throw new FateTypeError(\n                name,\n                `Address should start with ${prefix}_, got ${asString} instead`\n            )\n        }\n\n        return base58check.decode(asString.substring(prefix.length + 1))\n    }\n\n    toVariant(type, value) {\n        if (!this.isOptionVariant(type)) {\n            return value\n        }\n\n        if ([undefined, null].includes(value)) {\n            return {None: []}\n        }\n\n        const [variantName] = Object.keys(value)\n        if (['Some', 'None'].includes(variantName)) {\n            return value\n        }\n\n        return {Some: [value]}\n    }\n\n    isOptionVariant({ _name, variants }) {\n        return variants.some(({ None }) => None && None.length === 0)\n            && variants.some(({ Some }) => Some)\n    }\n\n    toMap(type, value) {\n        if (typeof value !== 'object' || value === null) {\n            throw new FateTypeError(\n                'map',\n                `Fate map must be one of: Map, Array, Object; got ${value} instead`\n            )\n        }\n\n        return Array.isArray(value) || value instanceof Map ? value : Object.entries(value)\n    }\n}\n\nmodule.exports = InternalMapper\n","const TypeFactory = require('./TypeFactory')\nconst FateData = require('./types/FateData')\nconst BaseSerializer = require('./Serializers/BaseSerializer')\nconst AddressSerializer = require('./Serializers/AddressSerializer')\nconst BitsSerializer = require('./Serializers/BitsSerializer')\nconst BoolSerializer = require('./Serializers/BoolSerializer')\nconst ByteArraySerializer = require('./Serializers/ByteArraySerializer')\nconst BytesSerializer = require('./Serializers/BytesSerializer')\nconst ChannelSerializer = require('./Serializers/ChannelSerializer')\nconst ContractSerializer = require('./Serializers/ContractSerializer')\nconst IntSerializer = require('./Serializers/IntSerializer')\nconst VoidSerializer = require('./Serializers/VoidSerializer')\nconst ListSerializer = require('./Serializers/ListSerializer')\nconst MapSerializer = require('./Serializers/MapSerializer')\nconst OracleQuerySerializer = require('./Serializers/OracleQuerySerializer')\nconst OracleSerializer = require('./Serializers/OracleSerializer')\nconst StringSerializer = require('./Serializers/StringSerializer')\nconst TupleSerializer = require('./Serializers/TupleSerializer')\nconst VariantSerializer = require('./Serializers/VariantSerializer')\nconst SerializerError = require('./Errors/SerializerError')\n\nclass Serializer extends BaseSerializer {\n    constructor() {\n        super()\n\n        this.typeFactory = new TypeFactory()\n        this._serializers = {\n            'void': new VoidSerializer(),\n            'bool': new BoolSerializer(),\n            'int': new IntSerializer(),\n            'tuple': new TupleSerializer(this),\n            'record': new TupleSerializer(this),\n            'list': new ListSerializer(this),\n            'map': new MapSerializer(this),\n            'byte_array': new ByteArraySerializer(),\n            'string': new StringSerializer(),\n            'hash': new BytesSerializer(),\n            'signature': new BytesSerializer(),\n            'bits': new BitsSerializer(),\n            'variant': new VariantSerializer(this),\n            'bytes': new BytesSerializer(),\n            'account_address': new AddressSerializer(),\n            'contract_address': new ContractSerializer(),\n            'oracle_address': new OracleSerializer(),\n            'oracle_query_address': new OracleQuerySerializer(),\n            'channel_address': new ChannelSerializer(),\n        }\n    }\n\n    _getSerializer(type) {\n        if (!type.hasOwnProperty('name')) {\n            throw new SerializerError('Unsupported type: ' + JSON.stringify(type))\n        }\n\n        const typeName = type.name\n        if (!this._serializers.hasOwnProperty(typeName)) {\n            throw new SerializerError('Unsupported type: ' + JSON.stringify(typeName))\n        }\n\n        return this._serializers[typeName]\n    }\n\n    serialize(data) {\n        if (typeof data !== 'object') {\n            throw new SerializerError('Only object serialization is supported. Got: ' + JSON.stringify(data))\n        }\n\n        if (!(data instanceof FateData)) {\n            throw new SerializerError('Only instances of FateData is supported.')\n        }\n\n        return this._getSerializer(data).serialize(data)\n    }\n\n    deserialize(type, data) {\n        if (!(data instanceof Uint8Array)) {\n            throw new SerializerError('Only instances of Uint8Array is supported.')\n        }\n\n        return this._getSerializer(type).deserialize(data, type)\n    }\n\n    deserializeStream(data, typeInfo) {\n        if (!(data instanceof Uint8Array)) {\n            throw new SerializerError('Only instances of Uint8Array is supported.')\n        }\n\n        let type = typeInfo\n        if (typeof typeInfo === 'undefined') {\n            type = this.typeFactory.createType(data)\n        }\n\n        return this._getSerializer(type).deserializeStream(data, typeInfo)\n    }\n}\n\nmodule.exports = Serializer\n","const RLP = require('rlp')\nconst FateTag = require('../FateTag')\nconst BaseSerializer = require('./BaseSerializer')\nconst FateAccountAddress = require('../types/FateAccountAddress')\n\nclass AddressSerializer extends BaseSerializer {\n    serialize(data) {\n        return [\n            FateTag.OBJECT,\n            FateTag.OTYPE_ADDRESS,\n            ...RLP.encode(data.value)\n        ]\n    }\n\n    deserializeStream(data) {\n        const buffer = new Uint8Array(data)\n        const decoded = RLP.decode(buffer.slice(2), true)\n\n        return [\n            new FateAccountAddress(decoded.data),\n            new Uint8Array(decoded.remainder)\n        ]\n    }\n}\n\nmodule.exports = AddressSerializer\n","const SerializerError = require('../Errors/SerializerError')\n\nclass BaseSerializer {\n    constructor(globalSerializer) {\n        this.globalSerializer = globalSerializer\n    }\n\n    serialize(_data) {\n        throw new SerializerError('Not implemented.')\n    }\n\n    deserialize(data, typeInfo) {\n        const [value, _rest] = this.deserializeStream(data, typeInfo)\n\n        return value\n    }\n\n    deserializeStream(_data, _typeInfo) {\n        throw new SerializerError('Not implemented.')\n    }\n}\n\nmodule.exports = BaseSerializer\n","const RLP = require('rlp')\nconst FateTag = require('../FateTag')\nconst RLPInt = require('../utils/RLPInt')\nconst FateBits = require('../types/FateBits')\nconst BaseSerializer = require('./BaseSerializer')\nconst {ByteArray2Int} = require('../utils/Int2ByteArray')\nconst abs = require('../utils/abs')\n\nclass BitsSerializer extends BaseSerializer {\n    serialize(data) {\n        const prefix = data.value >= 0 ? FateTag.POS_BITS : FateTag.NEG_BITS\n\n        return [\n            prefix,\n            ...RLPInt(abs(data.value))\n        ]\n    }\n\n    deserializeStream(data) {\n        const buffer = new Uint8Array(data)\n        const sign = buffer[0] === FateTag.POS_BITS ? 1n : -1n\n        const decoded = RLP.decode(buffer.slice(1), true)\n        const i = ByteArray2Int(decoded.data)\n\n        return [\n            new FateBits(i * sign),\n            new Uint8Array(decoded.remainder)\n        ]\n    }\n}\n\nmodule.exports = BitsSerializer\n","const FateTag = require('../FateTag')\nconst FateBool = require('../types/FateBool')\nconst BaseSerializer = require('./BaseSerializer')\nconst FatePrefixError = require('../Errors/FatePrefixError')\n\nclass BoolSerializer extends BaseSerializer {\n    serialize(data) {\n        return (data.valueOf() === true) ? [FateTag.TRUE] : [FateTag.FALSE]\n    }\n\n    deserializeStream(data) {\n        const buffer = new Uint8Array(data)\n        const prefix = buffer[0]\n        const rest = buffer.slice(1)\n\n        if (prefix === FateTag.TRUE) {\n            return [new FateBool(true), rest]\n        }\n\n        if (prefix === FateTag.FALSE) {\n            return [new FateBool(false), rest]\n        }\n\n        throw new FatePrefixError(prefix)\n    }\n}\n\nmodule.exports = BoolSerializer\n","const FateTag = require('../FateTag')\nconst BaseSerializer = require('./BaseSerializer')\nconst FateByteArray = require('../types/FateByteArray')\nconst IntSerializer = require('./IntSerializer')\n\nconst intSerializer = new IntSerializer()\n\nclass ByteArraySerializer extends BaseSerializer {\n    serialize(data) {\n        if (data.length === 0) {\n            return [FateTag.EMPTY_STRING]\n        }\n\n        if (data.length < 64) {\n            const prefix = (data.length << 2) | FateTag.SHORT_STRING\n\n            return [\n                prefix,\n                ...data.valueOf()\n            ]\n        }\n\n        return [\n            FateTag.LONG_STRING,\n            ...intSerializer.serialize(data.length - 64),\n            ...data.valueOf()\n        ]\n    }\n\n    deserializeStream(stream) {\n        const data = new Uint8Array(stream)\n        const prefix = data[0]\n\n        if (prefix === FateTag.EMPTY_STRING) {\n            return [\n                new FateByteArray(),\n                data.slice(1)\n            ]\n        }\n\n        if (prefix === FateTag.LONG_STRING) {\n            const [fateLen, rest] = intSerializer.deserializeStream(data.slice(1))\n            const len = Number(fateLen.valueOf()) + 64\n\n            return [\n                new FateByteArray(rest.slice(0, len)),\n                rest.slice(len)\n            ]\n        }\n\n        // short string\n        const offset = (prefix >> 2) + 1\n\n        return [\n            new FateByteArray(data.slice(1, offset)),\n            data.slice(offset)\n        ]\n    }\n}\n\nmodule.exports = ByteArraySerializer\n","const FateTag = require('../FateTag')\nconst ByteArraySerializer = require('./ByteArraySerializer')\nconst FateBytes = require('../types/FateBytes')\nconst BaseSerializer = require('./BaseSerializer')\n\nconst byteArraySerializer = new ByteArraySerializer()\n\nclass BytesSerializer extends BaseSerializer {\n    serialize(bytes) {\n        return [\n            FateTag.OBJECT,\n            FateTag.OTYPE_BYTES,\n            ...byteArraySerializer.serialize(bytes.value)\n        ]\n    }\n\n    deserializeStream(data) {\n        const buffer = new Uint8Array(data)\n        const [bytes, rest] = byteArraySerializer.deserializeStream(buffer.slice(2))\n\n        return [\n            new FateBytes(bytes.valueOf()),\n            rest\n        ]\n    }\n}\n\nmodule.exports = BytesSerializer\n","const RLP = require('rlp')\nconst FateTag = require('../FateTag')\nconst BaseSerializer = require('./BaseSerializer')\nconst FateChannelAddress = require('../types/FateChannelAddress')\n\nclass ChannelSerializer extends BaseSerializer {\n    serialize(data) {\n        return [\n            FateTag.OBJECT,\n            FateTag.OTYPE_CHANNEL,\n            ...RLP.encode(data.value)\n        ]\n    }\n\n    deserializeStream(data) {\n        const buffer = new Uint8Array(data)\n        const decoded = RLP.decode(buffer.slice(2), true)\n\n        return [\n            new FateChannelAddress(decoded.data),\n            new Uint8Array(decoded.remainder)\n        ]\n    }\n}\n\nmodule.exports = ChannelSerializer\n","const RLP = require('rlp')\nconst FateTag = require('../FateTag')\nconst BaseSerializer = require('./BaseSerializer')\nconst FateContractAddress = require('../types/FateContractAddress')\n\nclass ContractSerializer extends BaseSerializer {\n    serialize(data) {\n        return [\n            FateTag.OBJECT,\n            FateTag.OTYPE_CONTRACT,\n            ...RLP.encode(data.value)\n        ]\n    }\n\n    deserializeStream(data) {\n        const buffer = new Uint8Array(data)\n        const decoded = RLP.decode(buffer.slice(2), true)\n\n        return [\n            new FateContractAddress(decoded.data),\n            new Uint8Array(decoded.remainder)\n        ]\n    }\n}\n\nmodule.exports = ContractSerializer\n","const RLP = require('rlp')\nconst FateTag = require('../FateTag')\nconst RLPInt = require('../utils/RLPInt')\nconst FateInt = require('../types/FateInt')\nconst BaseSerializer = require('./BaseSerializer')\nconst {ByteArray2Int} = require('../utils/Int2ByteArray')\nconst FatePrefixError = require('../Errors/FatePrefixError')\nconst abs = require('../utils/abs')\n\nconst SMALL_INT_MASK = 0b00000001\n\nclass IntSerializer extends BaseSerializer {\n    serialize(data) {\n        const bigValue = (data instanceof FateInt) ? data.value : BigInt(data)\n        const absVal = abs(bigValue)\n\n        // small integer\n        if (absVal < 64) {\n            const small = Number(absVal)\n            if (bigValue >= 0) {\n                return [(small << 1)]\n            }\n\n            // negative\n            return [(0b10000000 | (small << 1)) & 0b11111110]\n        }\n\n        // large negative integer\n        if (bigValue < 0) {\n            return [\n                FateTag.NEG_BIG_INT,\n                ...RLPInt(absVal - 64n)\n            ]\n        }\n\n        // large positive integer\n        return [\n            FateTag.POS_BIG_INT,\n            ...RLPInt(absVal - 64n)\n        ]\n    }\n\n    deserializeStream(stream) {\n        const data = new Uint8Array(stream)\n        const prefix = data[0]\n\n        // small int\n        if ((prefix & SMALL_INT_MASK) === 0) {\n            // positive\n            if ((prefix & 0b10000000) === 0) {\n                return [\n                    new FateInt(prefix >> 1),\n                    data.slice(1)\n                ]\n            }\n\n            // negative\n            const i = (prefix & 0b01111110) >> 1\n\n            return [\n                new FateInt(-i),\n                data.slice(1)\n            ]\n        }\n\n        if (prefix === FateTag.POS_BIG_INT || prefix === FateTag.NEG_BIG_INT) {\n            const sign = prefix === FateTag.POS_BIG_INT ? 1n : -1n\n            const decoded = RLP.decode(data.slice(1), true)\n            const i = ByteArray2Int(decoded.data)\n\n            return [\n                new FateInt((i + 64n) * sign),\n                new Uint8Array(decoded.remainder)\n            ]\n        }\n\n        throw new FatePrefixError(prefix)\n    }\n}\n\nmodule.exports = IntSerializer\n","const FateTag = require('../FateTag')\nconst FateInt = require('../types/FateInt')\nconst FateList = require('../types/FateList')\nconst BaseSerializer = require('./BaseSerializer')\n\nclass ListSerializer extends BaseSerializer {\n    serialize(list) {\n        const serializedElements = list.items.map(e => {\n            return this.globalSerializer.serialize(e)\n        }).flat(Infinity)\n\n        const len = list.items.length\n\n        if (len < 16) {\n            const prefix = (len << 4) | FateTag.SHORT_LIST\n\n            return [\n                prefix,\n                ...serializedElements\n            ]\n        }\n\n        return [\n            FateTag.LONG_LIST,\n            ...this.globalSerializer.serialize(new FateInt(len - 16)),\n            ...serializedElements\n        ]\n    }\n\n    deserializeStream(data, typeInfo) {\n        const buffer = new Uint8Array(data)\n        const prefix = buffer[0]\n        let len = 0n\n        let rest = buffer.slice(1)\n\n        if (prefix === FateTag.LONG_LIST) {\n            [len, rest] = this.globalSerializer.deserializeStream(buffer.slice(1))\n            len += 16n\n        }\n\n        if ((prefix & 0x0F) === FateTag.SHORT_LIST) {\n            len = BigInt((prefix & 0xF0) >> 4)\n        }\n\n        let itemsType\n\n        if (typeof typeInfo !== 'undefined') {\n            itemsType = typeInfo.valuesType\n        }\n\n        let el\n        const elements = []\n\n        for (let i = 0n; i < len; i++) {\n            [el, rest] = this.globalSerializer.deserializeStream(rest, itemsType)\n            elements.push(el)\n        }\n\n        if (len === 0n) {\n            return [new FateList(null), rest]\n        }\n\n        if (typeof typeInfo === 'undefined') {\n            itemsType = elements[0].type\n        }\n\n        return [\n            new FateList(itemsType, elements),\n            rest\n        ]\n    }\n}\n\nmodule.exports = ListSerializer\n","const RLP = require('rlp')\nconst FateTag = require('../FateTag')\nconst RLPInt = require('../utils/RLPInt')\nconst BaseSerializer = require('./BaseSerializer')\nconst {ByteArray2Int} = require('../utils/Int2ByteArray')\nconst FateComparator = require('../FateComparator')\nconst FateMap = require('../types/FateMap')\nconst FatePrefixError = require('../Errors/FatePrefixError')\n\nclass MapSerializer extends BaseSerializer {\n    serialize(map) {\n        const len = map.length\n        const cmp = FateComparator(map.keyType)\n\n        const sortedItems = [...map.items]\n        sortedItems.sort((elA, elB) => cmp(elA.key, elB.key))\n\n        const serializedItems = sortedItems.map(i => {\n            return [\n                this.globalSerializer.serialize(i.key),\n                this.globalSerializer.serialize(i.value)\n            ]\n        })\n\n        return [\n            FateTag.MAP,\n            ...RLPInt(len),\n            ...serializedItems.flat(Infinity)\n        ]\n    }\n\n    deserializeStream(data, typeInfo) {\n        const buffer = new Uint8Array(data)\n        const prefix = buffer[0]\n\n        if (prefix !== FateTag.MAP) {\n            throw new FatePrefixError(prefix)\n        }\n\n        const decoded = RLP.decode(buffer.slice(1), true)\n        const len = ByteArray2Int(decoded.data)\n        let rest = decoded.remainder\n\n        if (len === 0n) {\n            return [new FateMap(), rest]\n        }\n\n        let keyType\n        let valueType\n\n        if (typeof typeInfo !== 'undefined') {\n            ({keyType, valueType} = typeInfo)\n        }\n\n        const elements = []\n        for (let i = 0n; i < len; i++) {\n            const [key, keyRest] = this.globalSerializer.deserializeStream(rest, keyType)\n            const [value, valueRest] = this.globalSerializer.deserializeStream(keyRest, valueType)\n\n            elements.push([key, value])\n            rest = valueRest\n        }\n\n        const firstEl = elements[0]\n\n        if (typeof typeInfo === 'undefined') {\n            keyType = firstEl[0].type\n            valueType = firstEl[1].type\n        }\n\n        return [\n            new FateMap(\n                keyType,\n                valueType,\n                elements\n            ),\n            rest\n        ]\n    }\n}\n\nmodule.exports = MapSerializer\n","const RLP = require('rlp')\nconst FateTag = require('../FateTag')\nconst BaseSerializer = require('./BaseSerializer')\nconst FateOracleQueryAddress = require('../types/FateOracleQueryAddress')\n\nclass OracleQuerySerializer extends BaseSerializer {\n    serialize(data) {\n        return [\n            FateTag.OBJECT,\n            FateTag.OTYPE_ORACLE_QUERY,\n            ...RLP.encode(data.value)\n        ]\n    }\n\n    deserializeStream(data) {\n        const buffer = new Uint8Array(data)\n        const decoded = RLP.decode(buffer.slice(2), true)\n\n        return [\n            new FateOracleQueryAddress(decoded.data),\n            new Uint8Array(decoded.remainder)\n        ]\n    }\n}\n\nmodule.exports = OracleQuerySerializer\n","const RLP = require('rlp')\nconst FateTag = require('../FateTag')\nconst BaseSerializer = require('./BaseSerializer')\nconst FateOracleAddress = require('../types/FateOracleAddress')\n\nclass OracleSerializer extends BaseSerializer {\n    serialize(data) {\n        return [\n            FateTag.OBJECT,\n            FateTag.OTYPE_ORACLE,\n            ...RLP.encode(data.value)\n        ]\n    }\n\n    deserializeStream(data) {\n        const buffer = new Uint8Array(data)\n        const decoded = RLP.decode(buffer.slice(2), true)\n\n        return [\n            new FateOracleAddress(decoded.data),\n            new Uint8Array(decoded.remainder)\n        ]\n    }\n}\n\nmodule.exports = OracleSerializer\n","const FateTag = require('../FateTag')\nconst BaseSerializer = require('./BaseSerializer')\nconst ByteArraySerializer = require('./ByteArraySerializer')\nconst FateString = require('../types/FateString')\nconst FatePrefixError = require('../Errors/FatePrefixError')\n\nconst byteArraySerializer = new ByteArraySerializer()\n\nclass StringSerializer extends BaseSerializer {\n    serialize(value) {\n        const encoder = new TextEncoder()\n        const bytes = encoder.encode(value)\n\n        return byteArraySerializer.serialize(bytes)\n    }\n\n    deserializeStream(data) {\n        const buffer = new Uint8Array(data)\n        const prefix = buffer[0]\n\n        if (\n            (prefix & 0b11) !== FateTag.SHORT_STRING\n            && ![FateTag.EMPTY_STRING, FateTag.LONG_STRING].includes(prefix)\n        ) {\n            throw new FatePrefixError(prefix)\n        }\n\n        const decoder = new TextDecoder()\n        const [bytes, rest] = byteArraySerializer.deserializeStream(buffer)\n\n        return [\n            new FateString(decoder.decode(bytes.valueOf())),\n            rest\n        ]\n    }\n}\n\nmodule.exports = StringSerializer\n","const FateTag = require('../FateTag')\nconst FateInt = require('../types/FateInt')\nconst FateTuple = require('../types/FateTuple')\nconst BaseSerializer = require('./BaseSerializer')\n\nclass TupleSerializer extends BaseSerializer {\n    serialize(tuple) {\n        const len = tuple.size\n        if (len === 0) {\n            return [FateTag.EMPTY_TUPLE]\n        }\n\n        const elements = tuple.items\n            .map(e => this.globalSerializer.serialize(e))\n            .flat(Infinity)\n\n        if (len < 16) {\n            const prefix = (len << 4) | FateTag.SHORT_TUPLE\n\n            return [\n                prefix,\n                ...elements\n            ]\n        }\n\n        return [\n            FateTag.LONG_TUPLE,\n            ...this.globalSerializer.serialize(new FateInt(len - 16)),\n            ...elements\n        ]\n    }\n\n    deserializeStream(data, typeInfo) {\n        const buffer = new Uint8Array(data)\n        const prefix = buffer[0]\n        let len = 0n\n        let rest = buffer.slice(1)\n\n        if (prefix === FateTag.EMPTY_TUPLE) {\n            return [new FateTuple(), rest]\n        }\n\n        if ((prefix & 0x0F) === FateTag.SHORT_TUPLE) {\n            len = (prefix & 0xF0) >> 4\n        }\n\n        if (prefix === FateTag.LONG_TUPLE) {\n            [len, rest] = this.globalSerializer.deserializeStream(buffer.slice(1))\n            len += 16n\n        }\n\n        let valueTypes = []\n        if (typeof typeInfo !== 'undefined') {\n            valueTypes = typeInfo.valueTypes\n        }\n\n        const elements = []\n        let el = null\n        for (let i = 0n; i < len; i++) {\n            [el, rest] = this.globalSerializer.deserializeStream(rest, valueTypes[i])\n            elements.push(el)\n        }\n\n        let type = typeInfo\n        if (typeof typeInfo === 'undefined') {\n            type = elements.map(e => e.type)\n        }\n\n        return [\n            new FateTuple(type, elements),\n            rest\n        ]\n    }\n}\n\nmodule.exports = TupleSerializer\n","const RLP = require('rlp')\nconst FateTag = require('../FateTag')\nconst FateTuple = require('../types/FateTuple')\nconst FateVariant = require('../types/FateVariant')\nconst BaseSerializer = require('./BaseSerializer')\n\nclass VariantSerializer extends BaseSerializer {\n    serialize(variant) {\n        const valueTuple = new FateTuple(variant.valueTypes, variant.value)\n\n        return [\n            FateTag.VARIANT,\n            ...RLP.encode(new Uint8Array(variant.arities)),\n            variant.tag,\n            ...this.globalSerializer.serialize(valueTuple)\n        ]\n    }\n\n    deserializeStream(stream, typeInfo) {\n        const buffer = new Uint8Array(stream)\n        const decoded = RLP.decode(buffer.slice(1), true)\n        const arities = [...decoded.data]\n        const tag = decoded.remainder[0]\n        const data = decoded.remainder.slice(1)\n        let variants = []\n        let valueType\n\n        if (typeof typeInfo !== 'undefined') {\n            variants = typeInfo.variants\n            valueType = {\n                ...typeInfo.variantType,\n                valueTypes: Object.values(typeInfo.variants[tag])[0]\n            }\n        }\n\n        const [els, rest] = this.globalSerializer.deserializeStream(data, valueType)\n\n        return [\n            new FateVariant(arities, tag, els.items, els.valueTypes, variants),\n            rest\n        ]\n    }\n}\n\nmodule.exports = VariantSerializer\n","const FateVoid = require('../types/FateVoid')\nconst BaseSerializer = require('./BaseSerializer')\n\nclass VoidSerializer extends BaseSerializer {\n    serialize() {\n        return ''\n    }\n\n    deserialize() {\n        return new FateVoid()\n    }\n\n    deserializeStream(data) {\n        return [new FateVoid(), data]\n    }\n}\n\nmodule.exports = VoidSerializer\n","const assert = require('./utils/assert')\nconst FateTag = require('./FateTag')\nconst FatePrefixError = require('./Errors/FatePrefixError')\nconst {\n    FateTypeInt,\n    FateTypeBool,\n    FateTypeString,\n    FateTypeBits,\n    FateTypeBytes,\n    FateTypeAccountAddress,\n    FateTypeContractAddress,\n    FateTypeOracleAddress,\n    FateTypeOracleQueryAddress,\n    FateTypeList,\n    FateTypeMap,\n    FateTypeTuple,\n    FateTypeVariant,\n} = require('./FateTypes')\n\nconst OBJECT_TYPES = {\n    0: FateTypeAccountAddress(),\n    1: FateTypeBytes(),\n    2: FateTypeContractAddress(),\n    3: FateTypeOracleAddress(),\n    4: FateTypeOracleQueryAddress(),\n}\n\nclass TypeFactory {\n    createType(data) {\n        const tag = data[0]\n\n        if (tag === FateTag.TRUE || tag === FateTag.FALSE) {\n            return FateTypeBool()\n        }\n\n        if ((tag & 0x01) === FateTag.SMALL_INT\n            || tag === FateTag.POS_BIG_INT\n            || tag === FateTag.NEG_BIG_INT\n        ) {\n            return FateTypeInt()\n        }\n\n        if ((tag & 0x03) === FateTag.SHORT_STRING\n            || tag === FateTag.LONG_STRING\n        ) {\n            return FateTypeString()\n        }\n\n        if ((tag & 0x0F) === FateTag.SHORT_LIST || tag === FateTag.LONG_LIST) {\n            return FateTypeList()\n        }\n\n        if ((tag & 0x0F) === FateTag.SHORT_TUPLE\n            || tag === FateTag.LONG_TUPLE\n            || tag === FateTag.EMPTY_TUPLE\n        ) {\n            return FateTypeTuple()\n        }\n\n        if (tag === FateTag.MAP || tag === FateTag.EMPTY_MAP) {\n            return FateTypeMap()\n        }\n\n        if (tag === FateTag.POS_BITS || tag === FateTag.NEG_BITS) {\n            return FateTypeBits()\n        }\n\n        if (tag === FateTag.VARIANT) {\n            return FateTypeVariant()\n        }\n\n        if (tag === FateTag.OBJECT) {\n            const obj = data[1]\n            assert(OBJECT_TYPES.hasOwnProperty(obj), `Unsupported object type \"${obj}\"`)\n\n            return OBJECT_TYPES[obj]\n        }\n\n        throw new FatePrefixError(tag)\n    }\n}\n\nmodule.exports = TypeFactory\n","const TypeResolveError = require('./Errors/TypeResolveError')\nconst {\n    FateTypeVoid,\n    FateTypeInt,\n    FateTypeBool,\n    FateTypeString,\n    FateTypeBits,\n    FateTypeBytes,\n    FateTypeHash,\n    FateTypeSignature,\n    FateTypeAccountAddress,\n    FateTypeContractAddress,\n    FateTypeOracleAddress,\n    FateTypeOracleQueryAddress,\n    FateTypeList,\n    FateTypeMap,\n    FateTypeTuple,\n    FateTypeRecord,\n    FateTypeVariant,\n    FateTypeOption,\n    FateTypeChainTTL,\n    FateTypeChainGAMetaTx,\n    FateTypeChainPayingForTx,\n    FateTypeChainBaseTx,\n    FateTypeAENSPointee,\n    FateTypeAENSName,\n    FateTypeEvent,\n} = require('./FateTypes')\n\nconst isObject = (value) => {\n    return value && typeof value === 'object' && value.constructor === Object\n}\n\nconst isOption = ({type}) => {\n    let key = type\n    let _\n    if (isObject(key)) {\n        [[key, _]] = Object.entries(key)\n    }\n\n    return key === 'option'\n}\n\nclass TypeResolver {\n    constructor(aci) {\n        this.aci = aci\n    }\n\n    getCallTypes(contract, funName) {\n        const funcAci = this.getNamespaceAci(contract).functions.find(e => e.name === funName)\n\n        if (funcAci) {\n            const types = funcAci.arguments.map(e => this.resolveType(e.type))\n            const options = funcAci.arguments.filter(isOption)\n            return {\n                types,\n                required: types.length - options.length,\n            }\n        }\n\n        if (funName === 'init') {\n            return {types: [], required: 0}\n        }\n\n        throw new TypeResolveError(`Unknown function ${funName}`)\n    }\n\n    getReturnType(contract, funName) {\n        if (funName === 'init') {\n            return this.resolveType('void')\n        }\n\n        const funcAci = this.getNamespaceAci(contract).functions.find(e => e.name === funName)\n\n        if (!funcAci) {\n            throw new TypeResolveError(`Unknown function ${funName}`)\n        }\n\n        return this.resolveType(funcAci.returns)\n    }\n\n    getEventType(contract) {\n        const aci = this.getNamespaceAci(contract)\n\n        if (!aci.hasOwnProperty('event')) {\n            throw new TypeResolveError('Missing event declaration')\n        }\n\n        return FateTypeEvent(this.resolveType(aci.event))\n    }\n\n    isCustomType(type) {\n        if (typeof type !== 'string') {\n            return false\n        }\n\n        const [namespace, _localType] = type.split('.')\n        const namespaceData = this.getNamespaceAci(namespace)\n\n        return !!namespaceData\n    }\n\n    getNamespaceAci(name) {\n        for (const e of this.aci) {\n            const [[_type, data]] = Object.entries(e)\n            if (data.name === name) {\n                return data\n            }\n        }\n\n        return null\n    }\n\n    resolveType(type, vars = {}) {\n        let key = type\n        let valueTypes = []\n        let resolvedTypes = []\n\n        if (isObject(type)) {\n            [[key, valueTypes]] = Object.entries(type)\n        }\n\n        if (this.isCustomType(key)) {\n            const [typeDef, typeVars] = this.resolveTypeDef(key, valueTypes)\n\n            return this.resolveType(typeDef, typeVars)\n        }\n\n        if (Array.isArray(valueTypes)) {\n            if (key !== 'record' && key !== 'variant') {\n                resolvedTypes = valueTypes.map(t => this.resolveType(t))\n            }\n        }\n\n        if (key === 'void') {\n            return FateTypeVoid()\n        }\n\n        if (key === 'int') {\n            return FateTypeInt()\n        }\n\n        if (key === 'bool') {\n            return FateTypeBool()\n        }\n\n        if (key === 'string') {\n            return FateTypeString()\n        }\n\n        if (key === 'bits') {\n            return FateTypeBits()\n        }\n\n        if (key === 'hash') {\n            return FateTypeHash()\n        }\n\n        if (key === 'signature') {\n            return FateTypeSignature()\n        }\n\n        if (key === 'address') {\n            return FateTypeAccountAddress()\n        }\n\n        if (key === 'contract_address') {\n            return FateTypeContractAddress()\n        }\n\n        if (key === 'Chain.ttl') {\n            return FateTypeChainTTL()\n        }\n\n        if (key === 'Chain.ga_meta_tx') {\n            return FateTypeChainGAMetaTx()\n        }\n\n        if (key === 'Chain.paying_for_tx') {\n            return FateTypeChainPayingForTx()\n        }\n\n        if (key === 'Chain.base_tx') {\n            return FateTypeChainBaseTx()\n        }\n\n        if (key === 'AENS.pointee') {\n            return FateTypeAENSPointee()\n        }\n\n        if (key === 'AENS.name') {\n            return FateTypeAENSName()\n        }\n\n        if (key === 'bytes') {\n            return FateTypeBytes(valueTypes)\n        }\n\n        if (key === 'list') {\n            return FateTypeList(...resolvedTypes)\n        }\n\n        if (key === 'tuple') {\n            return FateTypeTuple(resolvedTypes)\n        }\n\n        if (key === 'map') {\n            return FateTypeMap(...resolvedTypes)\n        }\n\n        if (key === 'record') {\n            return this.resolveRecord(valueTypes)\n        }\n\n        if (key === 'variant') {\n            return this.resolveVariant(valueTypes, vars)\n        }\n\n        if (key === 'option') {\n            return FateTypeOption(resolvedTypes)\n        }\n\n        if (key === 'oracle') {\n            return FateTypeOracleAddress(...resolvedTypes)\n        }\n\n        if (key === 'oracle_query') {\n            return FateTypeOracleQueryAddress(...resolvedTypes)\n        }\n\n        throw new TypeResolveError('Cannot resolve type: ' + JSON.stringify(type))\n    }\n\n    resolveVariant(valueTypes, vars) {\n        const variants = valueTypes.map(e => {\n            const [[variant, args]] = Object.entries(e)\n            const resolvedArgs = args.map(v => {\n                const t = vars.hasOwnProperty(v) ? vars[v] : v\n                return this.resolveType(t, vars)\n            })\n\n            return {[variant]: resolvedArgs}\n        })\n\n        // TODO: junk first 2 args for BC\n        return FateTypeVariant(0, null, variants)\n    }\n\n    resolveRecord(valueTypes) {\n        const keys = valueTypes.map(e => e.name)\n        const resolvedTypes = valueTypes.map(e => this.resolveType(e.type))\n\n        return FateTypeRecord(keys, resolvedTypes)\n    }\n\n    resolveTypeDef(type, params = []) {\n        const [namespace, localType] = type.split('.')\n        const namespaceData = this.getNamespaceAci(namespace)\n\n        // not a custom type\n        if (!namespaceData) {\n            throw new TypeResolveError('Unknown namespace for ' + JSON.stringify(type))\n        }\n\n        if (namespaceData.name === type) {\n            return ['contract_address', []]\n        }\n\n        const def = [\n            ...namespaceData.type_defs,\n            ...namespaceData.state ? [{\n                name: 'state',\n                typedef: namespaceData.state,\n                vars: []\n            }] : []\n        ].find(e => e.name === localType)\n\n        if (!def) {\n            throw new TypeResolveError('Unknown type definition: ' + JSON.stringify(type))\n        }\n\n        const vars = {}\n        def.vars.forEach((e, i) => {\n            const [[_, k]] = Object.entries(e)\n            vars[k] = params[i]\n        })\n\n        const typeDef = vars.hasOwnProperty(def.typedef) ? vars[def.typedef] : def.typedef\n\n        return [typeDef, vars]\n    }\n}\n\nmodule.exports = TypeResolver\n","const Encoder = require('./Encoder')\n\nmodule.exports = {\n    Encoder\n}\n","const FateAddress = require('./FateAddress')\n\nclass FateAccountAddress extends FateAddress {\n    constructor(value) {\n        super(value, 'account_address', 'ak')\n    }\n}\n\nmodule.exports = FateAccountAddress\n","const FateBytes = require('./FateBytes')\n\nclass FateAddress extends FateBytes {\n    constructor(value, name, prefix) {\n        super(value, 32, name)\n\n        this._prefix = prefix\n    }\n\n    get prefix() {\n        return this._prefix\n    }\n\n    accept(visitor) {\n        return visitor.visitAddress(this)\n    }\n}\n\nmodule.exports = FateAddress\n","const FateData = require('./FateData')\n\nclass FateBits extends FateData {\n    constructor(value) {\n        super('bits')\n\n        this._value = BigInt(value)\n    }\n\n    get value() {\n        return this._value\n    }\n\n    valueOf() {\n        return this._value\n    }\n}\n\nmodule.exports = FateBits\n","const FateData = require('./FateData')\nconst {FateTypeBool} = require('../FateTypes')\n\nclass FateBool extends FateData {\n    constructor(value) {\n        super('bool')\n\n        this._value = !!value\n    }\n\n    get value() {\n        return this._value\n    }\n\n    get type() {\n        return FateTypeBool()\n    }\n\n    valueOf() {\n        return this._value\n    }\n}\n\nmodule.exports = FateBool\n","const FateData = require('./FateData')\nconst {FateTypeByteArray} = require('../FateTypes')\n\nclass FateByteArray extends FateData {\n    constructor(value = []) {\n        super('byte_array')\n\n        this._value = new Uint8Array(value)\n    }\n\n    get length() {\n        return this._value.length\n    }\n\n    get type() {\n        return FateTypeByteArray()\n    }\n\n    valueOf() {\n        return this._value\n    }\n}\n\nmodule.exports = FateByteArray\n","const FateData = require('./FateData')\nconst {Int2ByteArray} = require('../utils/Int2ByteArray')\nconst HexStringToByteArray = require('../utils/HexStringToByteArray')\nconst FateTypeError = require('../Errors/FateTypeError')\n\nconst toByteArray = (value, size = 0) => {\n    if (Array.isArray(value) || ArrayBuffer.isView(value)) {\n        return new Uint8Array(value)\n    }\n\n    if (typeof value === 'string') {\n        return HexStringToByteArray(value)\n    }\n\n    if (typeof value !== 'bigint' && !Number.isInteger(value)) {\n        throw new FateTypeError(\n            'byte_array',\n            `Should be one of: Array, ArrayBuffer, hex string, Number, BigInt; got ${value} instead`\n        )\n    }\n\n    const bytes = Int2ByteArray(value)\n    if (bytes.length >= size) {\n        return bytes\n    }\n\n    // pad the byte array with 0 significant bytes, because int representation lost\n    const fixedSize = new Uint8Array(size)\n    fixedSize.set(bytes, size - bytes.length)\n\n    return fixedSize\n}\n\nclass FateBytes extends FateData {\n    constructor(value, size, name = 'bytes') {\n        super(name)\n\n        this._value = toByteArray(value, size)\n\n        if (size && this._value.byteLength !== size) {\n            throw new FateTypeError(\n                name,\n                `Invalid length: got ${this._value.byteLength} bytes instead of ${size} bytes`\n            )\n        }\n\n        this._size = size\n    }\n\n    get value() {\n        return this._value\n    }\n\n    get size() {\n        return this._size\n    }\n\n    valueOf() {\n        return this._value\n    }\n}\n\nmodule.exports = FateBytes\n","const FateAddress = require('./FateAddress')\n\nclass FateChannelAddress extends FateAddress {\n    constructor(value) {\n        super(value, 'channel_address', 'ch')\n    }\n}\n\nmodule.exports = FateChannelAddress\n","const FateAddress = require('./FateAddress')\n\nclass FateContractAddress extends FateAddress {\n    constructor(value) {\n        super(value, 'contract_address', 'ct')\n    }\n}\n\nmodule.exports = FateContractAddress\n","const InternalError = require('../Errors/InternalError')\n\nclass FateData {\n    constructor(name) {\n        this.name = name\n    }\n\n    valueOf() {\n        throw new InternalError('Not implemented.')\n    }\n\n    accept(visitor) {\n        return visitor.visitData(this)\n    }\n}\n\nmodule.exports = FateData\n","const FateBytes = require('./FateBytes')\n\nclass FateHash extends FateBytes {\n    constructor(value) {\n        super(value, 32, 'hash')\n    }\n}\n\nmodule.exports = FateHash\n","const FateData = require('./FateData')\nconst {FateTypeInt} = require('../FateTypes')\n\nclass FateInt extends FateData {\n    constructor(value) {\n        super('int')\n\n        this._value = BigInt(value)\n    }\n\n    get value() {\n        return this._value\n    }\n\n    get type() {\n        return FateTypeInt()\n    }\n\n    valueOf() {\n        return this._value\n    }\n}\n\nmodule.exports = FateInt\n","const FateData = require('./FateData')\nconst {FateTypeList} = require('../FateTypes')\n\nclass FateList extends FateData {\n    constructor(itemsType, items = []) {\n        super('list')\n\n        this._itemsType = itemsType\n        this.items = Array.from(items)\n    }\n\n    get itemsType() {\n        return this._itemsType\n    }\n\n    get type() {\n        return FateTypeList(this.itemsType)\n    }\n\n    get length() {\n        return this.items.length\n    }\n\n    valueOf() {\n        return this.items.map(e => e.valueOf())\n    }\n\n    accept(visitor) {\n        return visitor.visitList(this)\n    }\n}\n\nmodule.exports = FateList\n","const FateData = require('./FateData')\nconst {FateTypeMap} = require('../FateTypes')\n\nconst arrayToItem = (item) => {\n    const [key, value] = item\n    return {key, value}\n}\n\nclass FateMap extends FateData {\n    constructor(keyType, valueType, items = []) {\n        super('map')\n\n        this._keyType = keyType\n        this._valueType = valueType\n        this._type = FateTypeMap(keyType, valueType)\n        this._value = new Map(items)\n    }\n\n    get items() {\n        return [...this._value.entries()].map(arrayToItem)\n    }\n\n    get keyType() {\n        return this._keyType\n    }\n\n    get valueType() {\n        return this._valueType\n    }\n\n    get type() {\n        return this._type\n    }\n\n    get length() {\n        return this._value.size\n    }\n\n    get iterator() {\n        return this._value[Symbol.iterator]()\n    }\n\n    valueOf() {\n        const map = new Map()\n        for (const [key, value] of this.iterator) {\n            map.set(key.valueOf(), value.valueOf())\n        }\n\n        return map\n    }\n\n    accept(visitor) {\n        return visitor.visitMap(this)\n    }\n}\n\nmodule.exports = FateMap\n","const FateAddress = require('./FateAddress')\n\nclass FateOracleAddress extends FateAddress {\n    constructor(value) {\n        super(value, 'oracle_address', 'ok')\n    }\n}\n\nmodule.exports = FateOracleAddress\n","const FateAddress = require('./FateAddress')\n\nclass FateOracleQueryAddress extends FateAddress {\n    constructor(value) {\n        super(value, 'oracle_query_address', 'oq')\n    }\n}\n\nmodule.exports = FateOracleQueryAddress\n","const FateBytes = require('./FateBytes')\n\nclass FateSignature extends FateBytes {\n    constructor(value) {\n        super(value, 64, 'signature')\n    }\n}\n\nmodule.exports = FateSignature\n","const FateData = require('./FateData')\nconst {FateTypeString} = require('../FateTypes')\n\nclass FateString extends FateData {\n    constructor(value) {\n        super('string')\n\n        this._value = value.toString()\n    }\n\n    get type() {\n        return FateTypeString()\n    }\n\n    toString() {\n        return this._value\n    }\n\n    valueOf() {\n        return this._value\n    }\n}\n\nmodule.exports = FateString\n","const FateData = require('./FateData')\nconst {FateTypeTuple} = require('../FateTypes')\n\nconst zipObject = (keys, values) => {\n    const reducer = (acc, k, i) => {\n        acc[k] = values[i]\n        return acc\n    }\n\n    return keys.reduce(reducer, {})\n}\n\nclass FateTuple extends FateData {\n    constructor(valueTypes = [], items = []) {\n        super('tuple')\n\n        this._valueTypes = (valueTypes.hasOwnProperty('valueTypes')) ? valueTypes.valueTypes : valueTypes\n        this._type = Array.isArray(valueTypes) ? FateTypeTuple(valueTypes) : valueTypes\n        this._items = Array.from(items)\n    }\n\n    get valueTypes() {\n        return this._valueTypes\n    }\n\n    get type() {\n        return this._type\n    }\n\n    get size() {\n        return this._items.length\n    }\n\n    get items() {\n        return this._items\n    }\n\n    valueOf() {\n        return this.prepareItems(e => e.valueOf())\n    }\n\n    prepareItems(callback) {\n        const items = this._items.map(callback)\n\n        if (this._type.name === 'record') {\n            return zipObject(this._type.keys, items)\n        }\n\n        return items\n    }\n\n    accept(visitor) {\n        return visitor.visitTuple(this)\n    }\n}\n\nmodule.exports = FateTuple\n","const FateData = require('./FateData')\nconst {FateTypeVariant, FateTypeTuple, FateTypeInt} = require('../FateTypes')\n\nclass FateVariant extends FateData {\n    constructor(arities, tag, value = [], valueTypes = [], variants = []) {\n        super('variant')\n\n        this.arities = Array.from(arities)\n        this._tag = tag\n\n        this._value = value\n        this._valueTypes = valueTypes\n\n        this._type = FateTypeVariant(arities, valueTypes, variants)\n    }\n\n    get valueTypes() {\n        return this._valueTypes\n    }\n\n    get type() {\n        return this._type\n    }\n\n    get tag() {\n        return this._tag\n    }\n\n    get value() {\n        return this._value\n    }\n\n    get aritiesType() {\n        return FateTypeInt()\n    }\n\n    get variantType() {\n        return FateTypeTuple(this._valueTypes)\n    }\n\n    get variants() {\n        return this._type.variants\n    }\n\n    get variantName() {\n        const variant = this.variants[this.tag]\n\n        return Object.keys(variant)[0]\n    }\n\n    valueOf() {\n        if (this.variants.length === 0) {\n            return this\n        }\n\n        const value = this._value.map(e => e.valueOf())\n\n        return {\n            [this.variantName]: value\n        }\n    }\n\n    accept(visitor) {\n        return visitor.visitVariant(this)\n    }\n}\n\nmodule.exports = FateVariant\n","const FateData = require('./FateData')\nconst {FateTypeVoid} = require('../FateTypes')\n\nclass FateVoid extends FateData {\n    constructor() {\n        super('void')\n\n        this._value = undefined\n    }\n\n    get value() {\n        return this._value\n    }\n\n    get type() {\n        return FateTypeVoid()\n    }\n\n    valueOf() {\n        return this._value\n    }\n}\n\nmodule.exports = FateVoid\n","const FormatError = require('../Errors/FormatError')\n\n// TODO consider using Buffer.from(<string>, 'hex') instead\n// TODO get rid of this ?\n// Int2ByteArray(BigInt('0x' + hex.join('')))\nconst HexStringToByteArray = (str) => {\n    const match = str.match(/^(0x)?([a-f0-9]*)$/i)\n    if (!match) {\n        throw new FormatError(`Invalid hex string: ${str}`)\n    }\n\n    return new Uint8Array(match[2]\n        .split(/(.{1,2})/)\n        .filter(el => el)\n        .map(el => parseInt(el, 16)))\n}\n\nmodule.exports = HexStringToByteArray\n","const Int2ByteArray = (value) => {\n    const bigInt = BigInt(value)\n\n    if (bigInt < 256n) {\n        return new Uint8Array([Number(bigInt)])\n    }\n\n    return new Uint8Array([\n        ...Int2ByteArray(bigInt >> 8n),\n        Number(bigInt & 0xffn)\n    ])\n}\n\nconst ByteArray2Int = (data) => {\n    const hex = []\n\n    data.forEach(i => {\n        let h = i.toString(16)\n\n        if (h.length % 2) {\n            h = '0' + h\n        }\n\n        hex.push(h)\n    })\n\n    return BigInt('0x' + hex.join(''))\n}\n\nmodule.exports = {\n    Int2ByteArray,\n    ByteArray2Int\n}\n","const RLP = require('rlp')\nconst {Int2ByteArray} = require('./Int2ByteArray')\n\nmodule.exports = function RLPInt(value) {\n    return new Uint8Array(RLP.encode(Int2ByteArray(value)))\n}\n","const abs = (val) => {\n    return val > 0 ? val : val * -1n\n}\n\nmodule.exports = abs\n","const InternalError = require('../Errors/InternalError')\n\nconst assert = (condition, message) => {\n    if (!condition) {\n        throw new InternalError(message)\n    }\n}\n\nmodule.exports = assert\n","const bs58 = require('bs58')\nconst { addChecksum, getPayload } = require('./base64check')\n\n/**\n * Base58check encode given `input`\n * @rtype (input: String|buffer) => Buffer\n * @param {Buffer} input - Data to encode\n * @return {String} Base58check encoded data\n */\nconst encode = (input) => {\n    return bs58.encode(addChecksum(input))\n}\n\n/**\n * Base58check decode given `str`\n * @rtype (str: String) => Buffer\n * @param {String} str - Data to decode\n * @return {Buffer} Base58check decoded data\n */\nconst decode = (str) => {\n    return getPayload(bs58.decode(str))\n}\n\nmodule.exports = {\n    encode,\n    decode\n}\n","const shajs = require('sha.js')\nconst { Buffer } = require('safe-buffer')\nconst FormatError = require('../Errors/FormatError')\n\nconst sha256hash = (input) => {\n    return shajs('sha256').update(input).digest()\n}\n\nconst checkSumFn = (payload) => {\n    return sha256hash(sha256hash(payload)).slice(0, 4)\n}\n\nconst addChecksum = (payload) => {\n    const buffer = Buffer.from(payload)\n    const checksum = checkSumFn(payload)\n    return Buffer.concat([buffer, checksum], buffer.length + 4)\n}\n\nconst getPayload = (payloadWithChecksum) => {\n    const payload = payloadWithChecksum.slice(0, -4)\n    const checksum = payloadWithChecksum.slice(-4)\n    const newChecksum = checkSumFn(payload)\n\n    if (!checksum.equals(newChecksum)) {\n        throw new FormatError('Invalid checksum')\n    }\n\n    return payload\n}\n\n/**\n * Base64check encode given `input`\n * @rtype (input: String|buffer) => Buffer\n * @param {String|Buffer} input - Data to encode\n * @return {String} Base64check encoded data\n */\nconst encode = (input) => {\n    return addChecksum(input).toString('base64')\n}\n\n/**\n * Base64check decode given `str`\n * @rtype (str: String) => Buffer\n * @param {String} str - Data to decode\n * @return {Buffer} Base64check decoded data\n */\nconst decode = (str) => {\n    return getPayload(Buffer.from(str, 'base64'))\n}\n\nmodule.exports = {\n    addChecksum,\n    getPayload,\n    encode,\n    decode\n}\n","const blake = require('@aeternity/blakejs')\n\nconst HASH_BYTES = 32\n\nconst hash = (name) => {\n    return Array.from(blake.blake2b(name, null, HASH_BYTES))\n}\n\nconst symbolIdentifier = (funName) => {\n    // First 4 bytes of 32 bytes blake hash\n    return hash(funName).slice(0, 4)\n}\n\nmodule.exports = {\n    hash,\n    symbolIdentifier\n}\n","!function(A,I){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=I():\"function\"==typeof define&&define.amd?define([],I):\"object\"==typeof exports?exports.argon2=I():A.argon2=I()}(this,(function(){return(()=>{var A={721:function(A,I){A.exports=\"\"},477:(A,I,g)=>{A.exports=function(A){A=void 0!==(A=A||{})?A:{};var I,g,B=Object.assign,Q=B({},A),C=[],E=\"object\"==typeof window,i=\"function\"==typeof importScripts,o=\"\";(E||i)&&(i?o=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(o=document.currentScript.src),o=0!==o.indexOf(\"blob:\")?o.substr(0,o.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):\"\",i&&(g=A=>{var I=new XMLHttpRequest;return I.open(\"GET\",A,!1),I.responseType=\"arraybuffer\",I.send(null),new Uint8Array(I.response)}),I=(A,I,g)=>{var B=new XMLHttpRequest;B.open(\"GET\",A,!0),B.responseType=\"arraybuffer\",B.onload=()=>{200==B.status||0==B.status&&B.response?I(B.response):g()},B.onerror=g,B.send(null)}),A.print||console.log.bind(console);var D,e,n=A.printErr||console.warn.bind(console);B(A,Q),Q=null,A.arguments&&(C=A.arguments),A.thisProgram&&A.thisProgram,A.quit&&A.quit,A.wasmBinary&&(D=A.wasmBinary),A.noExitRuntime,\"object\"!=typeof WebAssembly&&M(\"no native wasm support detected\");var a,F,t=!1,w=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;function r(I){a=I,A.HEAP8=new Int8Array(I),A.HEAP16=new Int16Array(I),A.HEAP32=new Int32Array(I),A.HEAPU8=F=new Uint8Array(I),A.HEAPU16=new Uint16Array(I),A.HEAPU32=new Uint32Array(I),A.HEAPF32=new Float32Array(I),A.HEAPF64=new Float64Array(I)}A.INITIAL_MEMORY;var y,h,s,c=[],N=[],G=[],U=0,R=null,S=null;function M(I){throw A.onAbort&&A.onAbort(I),n(I=\"Aborted(\"+I+\")\"),t=!0,I+=\". Build with -s ASSERTIONS=1 for more info.\",new WebAssembly.RuntimeError(I)}function k(A){return A.startsWith(\"data:application/octet-stream;base64,\")}function f(A){return A.startsWith(\"file://\")}function H(A){try{if(A==h&&D)return new Uint8Array(D);if(g)return g(A);throw\"both async and sync fetching of the wasm failed\"}catch(A){M(A)}}function Y(I){for(;I.length>0;){var g=I.shift();if(\"function\"!=typeof g){var B=g.func;\"number\"==typeof B?void 0===g.arg?d(B)():d(B)(g.arg):B(void 0===g.arg?null:g.arg)}else g(A)}}function d(A){return y.get(A)}function J(A){try{return e.grow(A-a.byteLength+65535>>>16),r(e.buffer),1}catch(A){}}A.preloadedImages={},A.preloadedAudios={},k(h=\"argon2.wasm\")||(s=h,h=A.locateFile?A.locateFile(s,o):o+s);var u,L={b:function(A,I,g){F.copyWithin(A,I,I+g)},a:function(A){var I,g=F.length,B=2147418112;if((A>>>=0)>B)return!1;for(var Q=1;Q<=4;Q*=2){var C=g*(1+.2/Q);if(C=Math.min(C,A+100663296),J(Math.min(B,((I=Math.max(A,C))%65536>0&&(I+=65536-I%65536),I))))return!0}return!1}},K=(function(){var g={a:L};function B(I,g){var B,Q=I.exports;A.asm=Q,r((e=A.asm.c).buffer),y=A.asm.k,B=A.asm.d,N.unshift(B),function(I){if(U--,A.monitorRunDependencies&&A.monitorRunDependencies(U),0==U&&(null!==R&&(clearInterval(R),R=null),S)){var g=S;S=null,g()}}()}function Q(A){B(A.instance)}function C(A){return function(){if(!D&&(E||i)){if(\"function\"==typeof fetch&&!f(h))return fetch(h,{credentials:\"same-origin\"}).then((function(A){if(!A.ok)throw\"failed to load wasm binary file at '\"+h+\"'\";return A.arrayBuffer()})).catch((function(){return H(h)}));if(I)return new Promise((function(A,g){I(h,(function(I){A(new Uint8Array(I))}),g)}))}return Promise.resolve().then((function(){return H(h)}))}().then((function(A){return WebAssembly.instantiate(A,g)})).then((function(A){return A})).then(A,(function(A){n(\"failed to asynchronously prepare wasm: \"+A),M(A)}))}if(U++,A.monitorRunDependencies&&A.monitorRunDependencies(U),A.instantiateWasm)try{return A.instantiateWasm(g,B)}catch(A){return n(\"Module.instantiateWasm callback failed with error: \"+A),!1}D||\"function\"!=typeof WebAssembly.instantiateStreaming||k(h)||f(h)||\"function\"!=typeof fetch?C(Q):fetch(h,{credentials:\"same-origin\"}).then((function(A){return WebAssembly.instantiateStreaming(A,g).then(Q,(function(A){return n(\"wasm streaming compile failed: \"+A),n(\"falling back to ArrayBuffer instantiation\"),C(Q)}))}))}(),A.___wasm_call_ctors=function(){return(A.___wasm_call_ctors=A.asm.d).apply(null,arguments)},A._argon2_hash=function(){return(A._argon2_hash=A.asm.e).apply(null,arguments)},A._malloc=function(){return(K=A._malloc=A.asm.f).apply(null,arguments)}),l=(A._free=function(){return(A._free=A.asm.g).apply(null,arguments)},A._argon2_verify=function(){return(A._argon2_verify=A.asm.h).apply(null,arguments)},A._argon2_error_message=function(){return(A._argon2_error_message=A.asm.i).apply(null,arguments)},A._argon2_encodedlen=function(){return(A._argon2_encodedlen=A.asm.j).apply(null,arguments)},A._argon2_hash_ext=function(){return(A._argon2_hash_ext=A.asm.l).apply(null,arguments)},A._argon2_verify_ext=function(){return(A._argon2_verify_ext=A.asm.m).apply(null,arguments)},A.stackAlloc=function(){return(l=A.stackAlloc=A.asm.n).apply(null,arguments)});function p(I){function g(){u||(u=!0,A.calledRun=!0,t||(Y(N),A.onRuntimeInitialized&&A.onRuntimeInitialized(),function(){if(A.postRun)for(\"function\"==typeof A.postRun&&(A.postRun=[A.postRun]);A.postRun.length;)I=A.postRun.shift(),G.unshift(I);var I;Y(G)}()))}I=I||C,U>0||(function(){if(A.preRun)for(\"function\"==typeof A.preRun&&(A.preRun=[A.preRun]);A.preRun.length;)I=A.preRun.shift(),c.unshift(I);var I;Y(c)}(),U>0||(A.setStatus?(A.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){A.setStatus(\"\")}),1),g()}),1)):g()))}if(A.allocate=function(A,I){var g;return g=1==I?l(A.length):K(A.length),A.subarray||A.slice?F.set(A,g):F.set(new Uint8Array(A),g),g},A.UTF8ToString=function(A,I){return A?function(A,I,g){for(var B=I+g,Q=I;A[Q]&&!(Q>=B);)++Q;if(Q-I>16&&A.subarray&&w)return w.decode(A.subarray(I,Q));for(var C=\"\";I<Q;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var o=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|o:(7&E)<<18|i<<12|o<<6|63&A[I++])<65536)C+=String.fromCharCode(E);else{var D=E-65536;C+=String.fromCharCode(55296|D>>10,56320|1023&D)}}else C+=String.fromCharCode((31&E)<<6|i)}else C+=String.fromCharCode(E)}return C}(F,A,I):\"\"},A.ALLOC_NORMAL=0,S=function A(){u||p(),u||(S=A)},A.run=p,A.preInit)for(\"function\"==typeof A.preInit&&(A.preInit=[A.preInit]);A.preInit.length>0;)A.preInit.pop()();return p(),A.unloadRuntime=function(){\"undefined\"!=typeof self&&delete self.Module,A=jsModule=e=y=a=F=void 0},A}},145:()=>{},967:()=>{}},I={};function g(B){var Q=I[B];if(void 0!==Q)return Q.exports;var C=I[B]={exports:{}};return A[B].call(C.exports,C,C.exports,g),C.exports}g.n=A=>{var I=A&&A.__esModule?()=>A.default:()=>A;return g.d(I,{a:I}),I},g.d=(A,I)=>{for(var B in I)g.o(I,B)&&!g.o(A,B)&&Object.defineProperty(A,B,{enumerable:!0,get:I[B]})},g.o=(A,I)=>Object.prototype.hasOwnProperty.call(A,I),g.r=A=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(A,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(A,\"__esModule\",{value:!0})};var B={};return(()=>{\"use strict\";g.r(B),g.d(B,{ArgonType:()=>E,hash:()=>n,verify:()=>a,unloadRuntime:()=>F,default:()=>t});var A=g(477),I=g.n(A),Q=g(721),C=g.n(Q);const E={Argon2d:0,Argon2i:1,Argon2id:2};function i(A){if(i._promise)return i._promise;if(i._module)return Promise.resolve(i._module);let g;return g=function(){if(\"function\"==typeof loadArgon2WasmBinary)return loadArgon2WasmBinary();const A=C();if(A)return Promise.resolve(function(A){if(\"function\"==typeof Buffer)return new Uint8Array(Buffer.from(A,\"base64\"));const I=atob(A),g=new Uint8Array(new ArrayBuffer(I.length));for(let A=0;A<I.length;A++)g[A]=I.charCodeAt(A);return g}(A));const I=\"string\"==typeof argon2WasmPath?argon2WasmPath:\"node_modules/argon2-browser/dist/argon2.wasm\";return fetch(I).then((A=>A.arrayBuffer())).then((A=>new Uint8Array(A)))}().then((g=>function(A){const g=I()(A);return new Promise((A=>{g.postRun=()=>A(g)}))}({wasmBinary:g,wasmMemory:A?function(A){const I=1024,g=Math.min(Math.max(Math.ceil(A*I/65536),256)+256,32767);return new WebAssembly.Memory({initial:g,maximum:32767})}(A):void 0}))),i._promise=g,g.then((A=>(i._module=A,delete i._promise,A)))}function o(A,I){return A.allocate(I,\"i8\",A.ALLOC_NORMAL)}function D(A,I){return o(A,new Uint8Array([...I,0]))}function e(A){if(\"string\"!=typeof A)return A;if(\"function\"==typeof TextEncoder)return(new TextEncoder).encode(A);if(\"function\"==typeof Buffer)return Buffer.from(A);throw new Error(\"Don't know how to encode UTF8\")}function n(A){const I=A.mem||1024;return i(I).then((g=>{const B=A.time||1,Q=A.parallelism||1,C=e(A.pass),i=D(g,C),n=C.length,a=e(A.salt),F=D(g,a),t=a.length,w=A.type||E.Argon2d,r=g.allocate(new Array(A.hashLen||24),\"i8\",g.ALLOC_NORMAL),y=A.secret?o(g,A.secret):0,h=A.secret?A.secret.byteLength:0,s=A.ad?o(g,A.ad):0,c=A.ad?A.ad.byteLength:0,N=A.hashLen||24,G=g._argon2_encodedlen(B,I,Q,t,N,w),U=g.allocate(new Array(G+1),\"i8\",g.ALLOC_NORMAL);let R,S,M;try{S=g._argon2_hash_ext(B,I,Q,i,n,F,t,r,N,U,G,w,y,h,s,c,19)}catch(A){R=A}if(0!==S||R){try{R||(R=g.UTF8ToString(g._argon2_error_message(S)))}catch(A){}M={message:R,code:S}}else{let A=\"\";const I=new Uint8Array(N);for(let B=0;B<N;B++){const Q=g.HEAP8[r+B];I[B]=Q,A+=(\"0\"+(255&Q).toString(16)).slice(-2)}M={hash:I,hashHex:A,encoded:g.UTF8ToString(U)}}try{g._free(i),g._free(F),g._free(r),g._free(U),s&&g._free(s),y&&g._free(y)}catch(A){}if(R)throw M;return M}))}function a(A){return i().then((I=>{const g=e(A.pass),B=D(I,g),Q=g.length,C=A.secret?o(I,A.secret):0,i=A.secret?A.secret.byteLength:0,n=A.ad?o(I,A.ad):0,a=A.ad?A.ad.byteLength:0,F=D(I,e(A.encoded));let t,w,r,y=A.type;if(void 0===y){let I=A.encoded.split(\"$\")[1];I&&(I=I.replace(\"a\",\"A\"),y=E[I]||E.Argon2d)}try{w=I._argon2_verify_ext(F,B,Q,C,i,n,a,y)}catch(A){t=A}if(w||t){try{t||(t=I.UTF8ToString(I._argon2_error_message(w)))}catch(A){}r={message:t,code:w}}try{I._free(B),I._free(F)}catch(A){}if(t)throw r;return r}))}function F(){i._module&&(i._module.unloadRuntime(),delete i._promise,delete i._module)}const t={ArgonType:E,hash:n,verify:a,unloadRuntime:F}})(),B})()}));","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n","import _buffer from \"buffer\";\nconst {\n  Buffer: _Buffer\n} = _buffer;\n\n/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Memory Account module\n * @module @aeternity/aepp-sdk/es/account/memory\n * @export MemoryAccount\n * @example import { MemoryAccount } from '@aeternity/aepp-sdk'\n */\nimport AccountBase from \"./base.mjs\";\nimport { sign, isValidKeypair } from \"../utils/crypto.mjs\";\nimport { isHex } from \"../utils/string.mjs\";\nimport { decode } from \"../tx/builder/helpers.mjs\";\nimport { InvalidKeypairError } from \"../utils/errors.mjs\";\nconst secrets = new WeakMap();\n/**\n * In-memory account stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/account/memory\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Object} options.keypair - Key pair to use\n * @param {String} options.keypair.publicKey - Public key\n * @param {String} options.keypair.secretKey - Private key\n * @return {Account}\n */\n\nexport default AccountBase.compose({\n  init(_ref) {\n    let {\n      keypair,\n      gaId\n    } = _ref;\n    this.isGa = !!gaId;\n\n    if (gaId) {\n      decode(gaId);\n      secrets.set(this, {\n        publicKey: gaId\n      });\n      return;\n    }\n\n    if (!keypair || typeof keypair !== 'object') throw new InvalidKeypairError('KeyPair must be an object');\n\n    if (!keypair.secretKey || !keypair.publicKey) {\n      throw new InvalidKeypairError('KeyPair must must have \"secretKey\", \"publicKey\" properties');\n    }\n\n    if (typeof keypair.publicKey !== 'string' || keypair.publicKey.indexOf('ak_') === -1) {\n      throw new InvalidKeypairError('Public Key must be a base58c string with \"ak_\" prefix');\n    }\n\n    if (!_Buffer.isBuffer(keypair.secretKey) && typeof keypair.secretKey === 'string' && !isHex(keypair.secretKey)) throw new InvalidKeypairError('Secret key must be hex string or Buffer');\n\n    const pubBuffer = _Buffer.from(decode(keypair.publicKey, 'ak'));\n\n    if (!isValidKeypair(_Buffer.from(keypair.secretKey, 'hex'), pubBuffer)) throw new InvalidKeypairError('Invalid Key Pair');\n    secrets.set(this, {\n      secretKey: _Buffer.isBuffer(keypair.secretKey) ? keypair.secretKey : _Buffer.from(keypair.secretKey, 'hex'),\n      publicKey: keypair.publicKey\n    });\n  },\n\n  props: {\n    isGa: false\n  },\n  methods: {\n    sign(data) {\n      if (this.isGa) throw new InvalidKeypairError('You are trying to sign data using generalized account without keypair');\n      return Promise.resolve(sign(data, secrets.get(this).secretKey));\n    },\n\n    address() {\n      return Promise.resolve(secrets.get(this).publicKey);\n    }\n\n  }\n});\n//# sourceMappingURL=memory.mjs.map","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * AccountMultiple module\n * @module @aeternity/aepp-sdk/es/accounts/multiple\n * @export AccountMultiple\n */\nimport AsyncInit from \"../utils/async-init.mjs\";\nimport MemoryAccount from \"./memory.mjs\";\nimport { decode } from \"../tx/builder/helpers.mjs\";\nimport AccountBase, { isAccountBase } from \"./base.mjs\";\nimport { UnavailableAccountError, TypeError } from \"../utils/errors.mjs\";\n/**\n * AccountMultiple stamp\n *\n * The purpose of this stamp is to wrap up implementations of\n * {@link module:@aeternity/aepp-sdk/es/account/base--AccountBase} objects and provide a\n * common interface to all of them. List are a substantial part of\n * {@link module:@aeternity/aepp-sdk/es/ae/wallet--Wallet}s.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/accounts/multiple\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Array} [options.accounts] - Accounts array\n * @param {String} [options.address] - Address of account to select\n * @return {Object} AccountMultiple instance\n * @example\n * const accounts = await AccountMultiple({\n *   accounts: [MemoryAccount({ keypair: 'keypair_object' })]\n * })\n * await accounts.addAccount(account, { select: true }) // Add account and make it selected\n * accounts.removeAccount(address) // Remove account\n * accounts.selectAccount(address) // Select account\n * accounts.addresses() // Get available accounts\n */\n\nexport default AccountBase.compose(AsyncInit, {\n  async init(_ref) {\n    let {\n      accounts = [],\n      address\n    } = _ref;\n    this.accounts = Object.fromEntries(await Promise.all(accounts.map(async a => [await a.address(), a])));\n    address = address || Object.keys(this.accounts)[0];\n    if (address) this.selectAccount(address);\n  },\n\n  props: {\n    accounts: {}\n  },\n  deepProps: {\n    selectedAddress: null\n  },\n  methods: {\n    async address() {\n      let {\n        onAccount = this.selectedAddress\n      } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this._resolveAccount(onAccount).address();\n    },\n\n    async sign(data) {\n      let {\n        onAccount = this.selectedAddress\n      } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this._resolveAccount(onAccount).sign(data);\n    },\n\n    /**\n     * Get accounts addresses\n     * @alias module:@aeternity/aepp-sdk/es/accounts/multiple\n     * @function\n     * @rtype () => String[]\n     * @return {String[]}\n     * @example addresses()\n     */\n    addresses() {\n      return Object.keys(this.accounts);\n    },\n\n    /**\n     * Add specific account\n     * @alias module:@aeternity/aepp-sdk/es/accounts/multiple\n     * @function\n     * @category async\n     * @rtype (account: Account, { select: Boolean }) => void\n     * @param {Object} account - Account instance\n     * @param {Object} [options={}] - Options\n     * @param {Boolean} [options.select] - Select account\n     * @return {void}\n     * @example addAccount(account)\n     */\n    async addAccount(account) {\n      let {\n        select\n      } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      const address = await account.address();\n      this.accounts[address] = account;\n      if (select) this.selectAccount(address);\n    },\n\n    /**\n     * Remove specific account\n     * @alias module:@aeternity/aepp-sdk/es/accounts/multiple\n     * @function\n     * @rtype (address: String) => void\n     * @param {String} address - Address of account to remove\n     * @return {void}\n     * @example removeAccount(address)\n     */\n    removeAccount(address) {\n      if (!this.accounts[address]) {\n        console.warn(`removeAccount: Account for ${address} not available`);\n        return;\n      }\n\n      delete this.accounts[address];\n      if (this.selectedAddress === address) this.selectedAddress = null;\n    },\n\n    /**\n     * Select specific account\n     * @alias module:@aeternity/aepp-sdk/es/account/selector\n     * @instance\n     * @rtype (address: String) => void\n     * @param {String} address - Address of account to select\n     * @example selectAccount('ak_xxxxxxxx')\n     */\n    selectAccount(address) {\n      decode(address, 'ak');\n      if (!this.accounts[address]) throw new UnavailableAccountError(address);\n      this.selectedAddress = address;\n    },\n\n    /**\n     * Resolves an account\n     * @param account account address (should exist in sdk instance), MemoryAccount or keypair\n     * @returns {AccountBase}\n     * @private\n     */\n    _resolveAccount(account) {\n      if (account === null) {\n        throw new TypeError('Account should be an address (ak-prefixed string), ' + 'keypair, or instance of account base, got null instead');\n      } else {\n        switch (typeof account) {\n          case 'string':\n            decode(account, 'ak');\n            if (!this.accounts[account]) throw new UnavailableAccountError(account);\n            return this.accounts[account];\n\n          case 'object':\n            return isAccountBase(account) ? account : MemoryAccount({\n              keypair: account\n            });\n\n          default:\n            throw new TypeError('Account should be an address (ak-prefixed string), ' + `keypair, or instance of account base, got ${account} instead`);\n        }\n      }\n    }\n\n  }\n});\n//# sourceMappingURL=multiple.mjs.map","import _buffer from \"buffer\";\nconst {\n  Buffer: _Buffer\n} = _buffer;\nimport nacl from 'tweetnacl';\nimport { v4 as uuid } from '@aeternity/uuid';\nimport _aeternityArgon2BrowserDistArgon2BundledMinJs from '@aeternity/argon2-browser/dist/argon2-bundled.min.js';\nconst {\n  ArgonType,\n  hash\n} = _aeternityArgon2BrowserDistArgon2BundledMinJs;\nimport { encode } from \"../tx/builder/helpers.mjs\";\nimport { str2buf } from \"./bytes.mjs\";\nimport { ArgumentError, InvalidKeyError, UnsupportedAlgorithmError, InvalidPasswordError } from \"./errors.mjs\";\n/**\n * KeyStore module\n * @module @aeternity/aepp-sdk/es/utils/keystore\n * @example import { Keystore } from '@aeternity/aepp-sdk'\n * @example const { Keystore } = require('@aeternity/aepp-sdk')\n */\n\nconst DEFAULTS = {\n  crypto: {\n    secret_type: 'ed25519',\n    symmetric_alg: 'xsalsa20-poly1305',\n    kdf: 'argon2id',\n    kdf_params: {\n      memlimit_kib: 65536,\n      opslimit: 3,\n      parallelism: 1\n    }\n  }\n}; // DERIVED KEY PART\n\nconst DERIVED_KEY_FUNCTIONS = {\n  argon2id: deriveKeyUsingArgon2id\n};\nexport async function deriveKeyUsingArgon2id(pass, salt, options) {\n  const {\n    memlimit_kib: mem,\n    opslimit: time\n  } = options.kdf_params;\n  const result = (await hash({\n    hashLen: 32,\n    pass,\n    salt,\n    time,\n    mem,\n    type: ArgonType.Argon2id\n  })).hash;\n  return _Buffer.from(result);\n} // CRYPTO PART\n\nconst CRYPTO_FUNCTIONS = {\n  'xsalsa20-poly1305': {\n    encrypt: encryptXsalsa20Poly1305,\n    decrypt: decryptXsalsa20Poly1305\n  }\n};\n\nfunction encryptXsalsa20Poly1305(_ref) {\n  let {\n    plaintext,\n    key,\n    nonce\n  } = _ref;\n  return nacl.secretbox(plaintext, nonce, key);\n}\n\nfunction decryptXsalsa20Poly1305(_ref2) {\n  let {\n    ciphertext,\n    key,\n    nonce\n  } = _ref2;\n  const res = nacl.secretbox.open(ciphertext, nonce, key);\n  if (!res) throw new InvalidPasswordError('Invalid password or nonce');\n  return res;\n}\n/**\n * Symmetric private key encryption using secret (derived) key.\n * @param {Buffer|string} plaintext Data to be encrypted.\n * @param {Buffer|string} key Secret key.\n * @param {Buffer|string} nonce Randomly generated nonce.\n * @param {string=} algo Encryption algorithm (default: DEFAULTS.crypto.symmetric_alg).\n * @return {Buffer} Encrypted data.\n */\n\n\nfunction encrypt(plaintext, key, nonce) {\n  let algo = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULTS.crypto.symmetric_alg;\n  if (!CRYPTO_FUNCTIONS[algo]) throw new UnsupportedAlgorithmError(algo);\n  return CRYPTO_FUNCTIONS[algo].encrypt({\n    plaintext,\n    nonce,\n    key\n  });\n}\n/**\n * Symmetric private key decryption using secret (derived) key.\n * @param {Buffer|Uint8Array} ciphertext Data to be decrypted.\n * @param {Buffer|Uint8Array} key Secret key.\n * @param {Buffer|Uint8Array} nonce Nonce from key-object.\n * @param {string=} algo Encryption algorithm.\n * @return {Buffer} Decrypted data.\n */\n\n\nfunction decrypt(ciphertext, key, nonce, algo) {\n  if (!CRYPTO_FUNCTIONS[algo]) throw new UnsupportedAlgorithmError(algo);\n  return CRYPTO_FUNCTIONS[algo].decrypt({\n    ciphertext,\n    nonce,\n    key\n  });\n}\n/**\n * Derive secret key from password with key derivation function.\n * @param {string} password User-supplied password.\n * @param {Buffer|Uint8Array} nonce Randomly generated nonce.\n * @param {Object=} options Encryption parameters.\n * @param {string=} options.kdf Key derivation function (default: DEFAULTS.crypto.kdf).\n * @param {Object=} options.kdf_params KDF parameters (default: DEFAULTS.crypto.kdf_params).\n * @return {Buffer} Secret key derived from password.\n */\n\n\nasync function deriveKey(password, nonce) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    kdf_params: DEFAULTS.crypto.kdf_params,\n    kdf: DEFAULTS.crypto.kdf\n  };\n  if (!nonce) throw new ArgumentError('nonce', 'provided', nonce);\n  if (password == null) throw new ArgumentError('password', 'provided', password);\n\n  if (!Object.prototype.hasOwnProperty.call(DERIVED_KEY_FUNCTIONS, options.kdf)) {\n    throw new UnsupportedAlgorithmError(options.kdf);\n  }\n\n  return DERIVED_KEY_FUNCTIONS[options.kdf](password, nonce, options);\n}\n/**\n * Assemble key data object in secret-storage format.\n * @param {Buffer} name Key name.\n * @param {Buffer} derivedKey Password-derived secret key.\n * @param {Buffer} privateKey Private key.\n * @param {Buffer} nonce Randomly generated 24byte nonce.\n * @param {Buffer} salt Randomly generated 16byte salt.\n * @param {Object=} options Encryption parameters.\n * @param {string=} options.kdf Key derivation function (default: argon2id).\n * @param {string=} options.cipher Symmetric cipher (default: constants.cipher).\n * @param {Object=} options.kdf_params KDF parameters (default: constants.<kdf>).\n * @return {Object}\n */\n\n\nfunction marshal(name, derivedKey, privateKey, nonce, salt) {\n  let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  const opt = Object.assign({}, DEFAULTS.crypto, options);\n  return Object.assign({\n    name,\n    version: 1,\n    public_key: getAddressFromPriv(privateKey),\n    id: uuid()\n  }, {\n    crypto: Object.assign({\n      secret_type: opt.secret_type,\n      symmetric_alg: opt.symmetric_alg,\n      ciphertext: _Buffer.from(encrypt(_Buffer.from(privateKey), derivedKey, nonce, opt.symmetric_alg)).toString('hex'),\n      cipher_params: {\n        nonce: _Buffer.from(nonce).toString('hex')\n      }\n    }, {\n      kdf: opt.kdf,\n      kdf_params: { ...opt.kdf_params,\n        salt: _Buffer.from(salt).toString('hex')\n      }\n    })\n  });\n}\n\nexport function getAddressFromPriv(secret) {\n  const keys = nacl.sign.keyPair.fromSecretKey(str2buf(secret));\n\n  const publicBuffer = _Buffer.from(keys.publicKey);\n\n  return encode(publicBuffer, 'ak');\n}\n/**\n * Recover plaintext private key from secret-storage key object.\n * @param {String} password Keystore object password.\n * @param {Object} keyObject Keystore object.\n * @return {Buffer} Plaintext private key.\n */\n\nexport async function recover(password, keyObject) {\n  validateKeyObj(keyObject);\n  const nonce = Uint8Array.from(str2buf(keyObject.crypto.cipher_params.nonce));\n  const salt = Uint8Array.from(str2buf(keyObject.crypto.kdf_params.salt));\n  const kdfParams = keyObject.crypto.kdf_params;\n  const kdf = keyObject.crypto.kdf;\n  const key = await decrypt(Uint8Array.from(str2buf(keyObject.crypto.ciphertext)), await deriveKey(password, salt, {\n    kdf,\n    kdf_params: kdfParams\n  }), nonce, keyObject.crypto.symmetric_alg);\n  if (!key) throw new InvalidPasswordError('Invalid password');\n  if (_Buffer.from(key).length === 64) return _Buffer.from(key).toString('hex');\n  return _Buffer.from(key).toString('utf-8');\n}\n/**\n * Export private key to keystore secret-storage format.\n * @param {String} name Key name.\n * @param {String} password User-supplied password.\n * @param {String|Buffer} privateKey Private key as hex-string or a Buffer.\n * @param {Buffer} nonce Randomly generated 24byte nonce.\n * @param {Buffer} salt Randomly generated 16byte salt.\n * @param {Object=} options Encryption parameters.\n * @param {String=} options.kdf Key derivation function (default: pbkdf2).\n * @param {String=} options.cipher Symmetric cipher (default: constants.cipher).\n * @param {Object=} options.kdfparams KDF parameters (default: constants.<kdf>).\n * @return {Object}\n */\n\nexport async function dump(name, password, privateKey) {\n  let nonce = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : nacl.randomBytes(24);\n  let salt = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : nacl.randomBytes(16);\n  let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  const opt = Object.assign({}, DEFAULTS.crypto, options);\n  return marshal(name, await deriveKey(password, salt, opt), typeof privateKey === 'string' ? _Buffer.from(privateKey, 'hex') : privateKey, nonce, salt, opt);\n}\nexport function validateKeyObj(obj) {\n  const root = ['crypto', 'id', 'version', 'public_key'];\n  const cryptoKeys = ['cipher_params', 'ciphertext', 'symmetric_alg', 'kdf', 'kdf_params'];\n  const missingRootKeys = root.filter(key => !Object.prototype.hasOwnProperty.call(obj, key));\n  if (missingRootKeys.length) throw new InvalidKeyError(`Invalid key file format. Require properties: ${missingRootKeys}`);\n  const missingCryptoKeys = cryptoKeys.filter(key => !Object.prototype.hasOwnProperty.call(obj.crypto, key));\n  if (missingCryptoKeys.length) throw new InvalidKeyError(`Invalid key file format. Require properties: ${missingCryptoKeys}`);\n  return true;\n}\n//# sourceMappingURL=keystore.mjs.map","import _buffer from \"buffer\";\nconst {\n  Buffer: _Buffer\n} = _buffer;\nimport nacl from 'tweetnacl';\nimport _tweetnaclAuth from 'tweetnacl-auth';\nconst {\n  full: hmac\n} = _tweetnaclAuth;\nimport _bip32Path from 'bip32-path';\nconst {\n  fromString\n} = _bip32Path;\nimport { decryptKey, encryptKey } from \"./crypto.mjs\";\nimport { encode } from \"../tx/builder/helpers.mjs\";\nimport { InvalidDerivationPathError, NotHardenedSegmentError, UnsupportedChildIndexError } from \"./errors.mjs\";\n\nconst ED25519_CURVE = _Buffer.from('ed25519 seed');\n\nconst HARDENED_OFFSET = 0x80000000;\n\nconst toHex = buffer => _Buffer.from(buffer).toString('hex');\n\nexport function derivePathFromKey(path, key) {\n  const segments = path === '' ? [] : fromString(path).toPathArray();\n  segments.forEach((segment, i) => {\n    if (segment < HARDENED_OFFSET) {\n      throw new NotHardenedSegmentError(`Segment #${i + 1} is not hardened`);\n    }\n  });\n  return segments.reduce((parentKey, segment) => deriveChild(parentKey, segment), key);\n}\nexport function derivePathFromSeed(path, seed) {\n  if (!['m', 'm/'].includes(path.slice(0, 2))) {\n    throw new InvalidDerivationPathError();\n  }\n\n  const masterKey = getMasterKeyFromSeed(seed);\n  return derivePathFromKey(path.slice(2), masterKey);\n}\n\nfunction formatAccount(keys) {\n  const {\n    secretKey,\n    publicKey\n  } = keys;\n  return {\n    secretKey: toHex(secretKey),\n    publicKey: encode(publicKey, 'ak')\n  };\n}\n\nexport function getKeyPair(secretKey) {\n  return nacl.sign.keyPair.fromSeed(secretKey);\n}\nexport function getMasterKeyFromSeed(seed) {\n  const I = hmac(seed, ED25519_CURVE);\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    secretKey: IL,\n    chainCode: IR\n  };\n}\nexport function deriveChild(_ref, index) {\n  let {\n    secretKey,\n    chainCode\n  } = _ref;\n\n  if (index < HARDENED_OFFSET) {\n    throw new UnsupportedChildIndexError(index);\n  }\n\n  const indexBuffer = _Buffer.allocUnsafe(4);\n\n  indexBuffer.writeUInt32BE(index, 0);\n\n  const data = _Buffer.concat([_Buffer.alloc(1, 0), _Buffer.from(secretKey), _Buffer.from(indexBuffer)]);\n\n  const I = hmac(data, chainCode);\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    secretKey: IL,\n    chainCode: IR\n  };\n}\nexport function generateSaveHDWalletFromSeed(seed, password) {\n  const walletKey = derivePathFromSeed('m/44h/457h', seed);\n  return {\n    secretKey: toHex(encryptKey(password, walletKey.secretKey)),\n    chainCode: toHex(encryptKey(password, walletKey.chainCode))\n  };\n}\nexport function getSaveHDWalletAccounts(saveHDWallet, password, accountCount) {\n  const walletKey = {\n    secretKey: decryptKey(password, _Buffer.from(saveHDWallet.secretKey, 'hex')),\n    chainCode: decryptKey(password, _Buffer.from(saveHDWallet.chainCode, 'hex'))\n  };\n  return new Array(accountCount).fill().map((_, idx) => formatAccount(getKeyPair(derivePathFromKey(`${idx}h/0h/0h`, walletKey).secretKey)));\n}\nexport const getHdWalletAccountFromSeed = (seed, accountIdx) => {\n  const walletKey = derivePathFromSeed('m/44h/457h', seed);\n  const derived = derivePathFromKey(`${accountIdx}h/0h/0h`, walletKey);\n  const keyPair = getKeyPair(derived.secretKey);\n  return { ...formatAccount(keyPair),\n    idx: accountIdx\n  };\n};\n//# sourceMappingURL=hd-wallet.mjs.map","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Aens module - routines to interact with the æternity naming system\n *\n * The high-level description of the naming system is\n * https://github.com/aeternity/protocol/blob/master/AENS.md in the protocol\n * repository.\n * @module @aeternity/aepp-sdk/es/ae/aens\n * @export Aens\n * @example import { Aens } from '@aeternity/aepp-sdk'\n */\nimport { salt } from \"../utils/crypto.mjs\";\nimport { commitmentHash, ensureNameValid, isAuctionName } from \"../tx/builder/helpers.mjs\";\nimport Ae from \"./index.mjs\";\nimport { CLIENT_TTL, NAME_TTL } from \"../tx/builder/schema.mjs\";\nimport { ArgumentError } from \"../utils/errors.mjs\";\n/**\n * Revoke a name\n * @instance\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @category async\n * @param {String} name Name hash\n * @param {Object} [options={}] options\n * @param {String|Object} [options.onAccount] Make operation on specific account from sdk (you pass\n * publickKey) or using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param {Number|String|BigNumber} [options.fee] fee\n * @param {Number|String|BigNumber} [options.ttl] ttl\n * @param {Number|String|BigNumber} [options.nonce] nonce\n * @return {Promise<Object>} Transaction result\n * @example\n * const name = 'test.chain'\n * const nameObject = await sdkInstance.aensQuery(name)\n *\n * await sdkInstance.aensRevoke(name, { fee, ttl , nonce })\n * // or\n * await nameObject.revoke({ fee, ttl, nonce })\n */\n\nasync function revoke(name) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  ensureNameValid(name);\n  const opt = { ...this.Ae.defaults,\n    ...options\n  };\n  const nameRevokeTx = await this.nameRevokeTx({ ...opt,\n    nameId: name,\n    accountId: await this.address(opt)\n  });\n  return this.send(nameRevokeTx, opt);\n}\n/**\n * Update a name\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name AENS name\n * @param {Object.<string, string>} pointers Map of pointer keys to corresponding addresses\n * @param {Object} [options={}]\n * @param {Boolean} [options.extendPointers] Get the pointers from the node and merge with provided\n * ones. Pointers with the same type will be overwritten\n * @param {String|Object} [options.onAccount] Make operation on specific account from sdk (you\n * pass publickKey) or using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param {Number|String|BigNumber} [options.fee] fee\n * @param {Number|String|BigNumber} [options.ttl] ttl\n * @param {Number|String|BigNumber} [options.nonce] nonce\n * @param {Number|String|BigNumber} [options.nameTtl=50000] Name ttl represented in number of\n * blocks (Max value is 50000 blocks)\n * @param {Number|String|BigNumber} [options.clientTtl=84600] a suggestion as to how long any\n * clients should cache this information\n * @return {Promise<Object>}\n * @throws Invalid pointer array error\n * @example\n * const name = 'test.chain'\n * const pointersArray = ['ak_asd23dasdas...,' 'ct_asdf34fasdasd...']\n * const nameObject = await sdkInstance.aensQuery(name)\n *\n * await sdkInstance.aensUpdate(name, pointersArray, { nameTtl, ttl, fee, nonce, clientTtl })\n * // or\n * await nameObject.update(pointers, { nameTtl, ttl, fee, nonce, clientTtl })\n */\n\n\nasync function update(name) {\n  let pointers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  ensureNameValid(name);\n  const opt = { ...this.Ae.defaults,\n    ...options\n  };\n  const allPointers = { ...(options.extendPointers && Object.fromEntries((await this.getName(name)).pointers.map(_ref => {\n      let {\n        key,\n        id\n      } = _ref;\n      return [key, id];\n    }))),\n    ...pointers\n  };\n  const nameUpdateTx = await this.nameUpdateTx({ ...opt,\n    nameId: name,\n    accountId: await this.address(opt),\n    pointers: Object.entries(allPointers).map(_ref2 => {\n      let [key, id] = _ref2;\n      return {\n        key,\n        id\n      };\n    })\n  });\n  return this.send(nameUpdateTx, opt);\n}\n/**\n * Transfer a domain to another account\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name AENS name\n * @param {String} account Recipient account publick key\n * @param {Object} [options={}]\n * @param {String|Object} [options.onAccount] Make operation on specific account from sdk (you pass\n * publickKey) or using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param {Number|String|BigNumber} [options.fee] fee\n * @param {Number|String|BigNumber} [options.ttl] ttl\n * @param {Number|String|BigNumber} [options.nonce] nonce\n * @return {Promise<Object>} Transaction result\n * @example\n * const name = 'test.chain'\n * const recipientPub = 'ak_asd23dasdas...'\n * const nameObject = await sdkInstance.aensQuery(name)\n *\n * await sdkInstance.aensTransfer(name, recipientPub, { ttl, fee, nonce })\n * // or\n * await nameObject.transfer(recipientPub, { ttl, fee, nonce })\n */\n\n\nasync function transfer(name, account) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  ensureNameValid(name);\n  const opt = { ...this.Ae.defaults,\n    ...options\n  };\n  const nameTransferTx = await this.nameTransferTx({ ...opt,\n    nameId: name,\n    accountId: await this.address(opt),\n    recipientId: account\n  });\n  return this.send(nameTransferTx, opt);\n}\n/**\n * Query the AENS name info from the node\n * and return the object with info and predefined functions for manipulating name\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name\n * @param {Object} opt Options\n * @return {Promise<Object>}\n * @example\n * const nameObject = sdkInstance.aensQuery('test.chain')\n * console.log(nameObject)\n * {\n *  id, // name hash\n *  pointers, // array of pointers\n *  update, // Update name function\n *  extendTtl, // Extend Ttl name function\n *  transfer, // Transfer name function\n *  revoke // Revoke name function\n * }\n */\n\n\nasync function query(name) {\n  var _this = this;\n\n  let opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  ensureNameValid(name);\n  const o = await this.getName(name);\n  return Object.freeze(Object.assign(o, {\n    pointers: o.pointers || [],\n    update: async function (pointers) {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return { ...(await _this.aensUpdate(name, pointers, { ...opt,\n          ...options\n        })),\n        ...(await _this.aensQuery(name))\n      };\n    },\n    transfer: async function (account) {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return { ...(await _this.aensTransfer(name, account, { ...opt,\n          ...options\n        })),\n        ...(await _this.aensQuery(name))\n      };\n    },\n    revoke: async function () {\n      let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _this.aensRevoke(name, { ...opt,\n        ...options\n      });\n    },\n    extendTtl: async function () {\n      let nameTtl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : NAME_TTL;\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (typeof nameTtl !== 'number' || nameTtl > NAME_TTL || nameTtl <= 0) {\n        throw new ArgumentError('nameTtl', `a number between 1 and ${NAME_TTL} blocks`, nameTtl);\n      }\n\n      return { ...(await _this.aensUpdate(name, {}, { ...opt,\n          ...options,\n          nameTtl,\n          extendPointers: true\n        })),\n        ...(await _this.aensQuery(name))\n      };\n    }\n  }));\n}\n/**\n * Claim a previously preclaimed registration. This can only be done after the\n * preclaim step\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name\n * @param {Number} salt Salt from pre-claim, or 0 if it's a bid\n * @param {Object} [options] options\n * @param {String|Object} [options.onAccount] Make operation on specific account from sdk (you pass\n * publickKey) or using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param {Number|String|BigNumber} [options.fee] fee\n * @param {Number|String|BigNumber} [options.ttl] ttl\n * @param {Number|String|BigNumber} [options.nonce] nonce\n * @param {Number|String} [options.nameFee] Name Fee (By default calculated by sdk)\n * @return {Promise<Object>} the result of the claim\n * @example\n * const name = 'test.chain'\n * const salt = preclaimResult.salt // salt from pre-claim transaction\n *\n * await sdkInstance.aensClaim(name, salt, { ttl, fee, nonce, nameFee })\n */\n\n\nasync function claim(name, salt, options) {\n  ensureNameValid(name);\n  const opt = { ...this.Ae.defaults,\n    ...options\n  };\n  const claimTx = await this.nameClaimTx({ ...opt,\n    accountId: await this.address(opt),\n    nameSalt: salt,\n    name\n  });\n  const result = await this.send(claimTx, opt);\n\n  if (!isAuctionName(name)) {\n    const nameInter = opt.waitMined ? await this.aensQuery(name, opt) : {};\n    return Object.assign(result, nameInter);\n  }\n\n  return { ...result,\n    nameFee: opt.nameFee\n  };\n}\n/**\n * Preclaim a name. Sends a hash of the name and a random salt to the node\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name\n * @param {Object} [options={}]\n * @param {String|Object} [options.onAccount] Make operation on specific account from sdk (you pass\n * publickKey) or using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param {Number|String|BigNumber} [options.fee] fee\n * @param {Number|String|BigNumber} [options.ttl] ttl\n * @param {Number|String|BigNumber} [options.nonce] nonce\n * @return {Promise<Object>}\n * @example\n * const name = 'test.chain'\n * const salt = preclaimResult.salt // salt from pre-claim transaction\n *\n * await sdkInstance.aensPreclaim(name, { ttl, fee, nonce })\n * {\n *   ...transactionResult,\n *   claim, // Claim function (options={}) => claimTransactionResult\n *   salt,\n *   commitmentId\n * }\n */\n\n\nasync function preclaim(name) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  ensureNameValid(name);\n  const opt = { ...this.Ae.defaults,\n    ...options\n  };\n\n  const _salt = salt();\n\n  const height = await this.height();\n  const commitmentId = commitmentHash(name, _salt);\n  const preclaimTx = await this.namePreclaimTx({ ...opt,\n    accountId: await this.address(opt),\n    commitmentId\n  });\n  const result = await this.send(preclaimTx, opt);\n  return Object.freeze({ ...result,\n    height,\n    claim: options => this.aensClaim(name, _salt, { ...options,\n      onAccount: opt.onAccount\n    }),\n    salt: _salt,\n    commitmentId\n  });\n}\n/**\n * Bid to name auction\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name Domain name\n * @param {String|Number} nameFee Name fee (bid fee)\n * @param {Object} [options={}]\n * @param {String|Object} [options.onAccount] Make operation on specific account from sdk (you pass\n * publickKey) or using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param {Number|String|BigNumber} [options.fee] fee\n * @param {Number|String|BigNumber} [options.ttl] ttl\n * @param {Number|String|BigNumber} [options.nonce] nonce\n * @return {Promise<Object>} Transaction result\n * @example\n * const name = 'test.chain'\n * const bidFee = computeBidFee(name, startFee, incrementPercentage)\n *\n * await sdkInstance.aensBid(name, 213109412839123, { ttl, fee, nonce })\n */\n\n\nasync function bid(name, nameFee) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return this.aensClaim(name, 0, { ...options,\n    nameFee,\n    vsn: 2\n  });\n}\n/**\n * Aens Stamp\n *\n * Aens provides name-system related methods atop\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Aens instance\n */\n\n\nconst Aens = Ae.compose({\n  methods: {\n    aensQuery: query,\n    aensPreclaim: preclaim,\n    aensClaim: claim,\n    aensUpdate: update,\n    aensTransfer: transfer,\n    aensRevoke: revoke,\n    aensBid: bid\n  },\n  deepProps: {\n    Ae: {\n      defaults: {\n        clientTtl: CLIENT_TTL,\n        nameTtl: NAME_TTL // aec_governance:name_claim_max_expiration() => 50000\n\n      }\n    }\n  }\n});\nexport default Aens;\n//# sourceMappingURL=aens.mjs.map","/*\n * ISC License (ISC)\n * Copyright (c) 2021 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * ContractCompilerHttp module\n *\n * @module @aeternity/aepp-sdk/es/contract/compiler\n * @export ContractCompilerHttp\n * @example import { ContractCompilerHttp } from '@aeternity/aepp-sdk'\n */\nimport semverSatisfies from \"../utils/semver-satisfies.mjs\";\nimport AsyncInit from \"../utils/async-init.mjs\";\nimport genSwaggerClient from \"../utils/swagger.mjs\";\nimport { MissingParamError, UnsupportedVersionError } from \"../utils/errors.mjs\";\nimport { mapObject } from \"../utils/other.mjs\";\n/**\n * Contract Compiler Stamp\n *\n * This stamp include api call's related to contract compiler functionality.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract/compiler\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {String} [options.compilerUrl] compilerUrl - Url for compiler API\n * @return {Object} Contract compiler instance\n * @example ContractCompilerHttp({ compilerUrl: 'COMPILER_URL' })\n */\n\nexport default AsyncInit.compose({\n  async init(_ref) {\n    let {\n      compilerUrl,\n      ignoreVersion\n    } = _ref;\n    if (!compilerUrl) return;\n    await this.setCompilerUrl(compilerUrl, {\n      ignoreVersion\n    });\n  },\n\n  methods: {\n    async setCompilerUrl(compilerUrl) {\n      let {\n        ignoreVersion = false\n      } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (!compilerUrl) throw new MissingParamError('compilerUrl required');\n      compilerUrl = compilerUrl.replace(/\\/$/, '');\n      const client = await genSwaggerClient(`${compilerUrl}/api`, {\n        disableBigNumbers: true,\n        disableCaseConversion: true,\n        responseInterceptor: response => {\n          if (response.ok) return;\n          let message = `${new URL(response.url).pathname.slice(1)} error`;\n\n          if (response.body.reason) {\n            message += ': ' + response.body.reason + (response.body.parameter ? ` in ${response.body.parameter}` : '') + ( // TODO: revising after improving documentation https://github.com/aeternity/aesophia_http/issues/78\n            response.body.info ? ` (${JSON.stringify(response.body.info)})` : '');\n          }\n\n          if (Array.isArray(response.body)) {\n            message += ':\\n' + response.body.map(e => `${e.type}:${e.pos.line}:${e.pos.col}: ${e.message}${e.context ? `(${e.context})` : ''}`).map(e => e.trim()) // TODO: remove after fixing https://github.com/aeternity/aesophia_http/issues/80\n            .join('\\n');\n          }\n\n          response.statusText = message;\n          return response;\n        }\n      });\n      this.compilerVersion = client.spec.info.version;\n      this.compilerApi = mapObject(client.api, _ref2 => {\n        let [key, fn] = _ref2;\n        return [key, function () {\n          let {\n            options: {\n              filesystem,\n              ...options\n            } = {},\n            ...args\n          } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          return fn({ ...args,\n            options: { ...options,\n              file_system: filesystem\n            }\n          });\n        }];\n      });\n      if (ignoreVersion) return;\n\n      if (!semverSatisfies(this.compilerVersion, COMPILER_GE_VERSION, COMPILER_LT_VERSION)) {\n        throw new UnsupportedVersionError('compiler', this.compilerVersion, COMPILER_GE_VERSION, COMPILER_LT_VERSION);\n      }\n    }\n\n  },\n  props: {\n    compilerVersion: null\n  }\n});\nconst COMPILER_GE_VERSION = '6.1.0';\nconst COMPILER_LT_VERSION = '7.0.0';\n//# sourceMappingURL=compiler.mjs.map","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * ContractACI module\n *\n * @module @aeternity/aepp-sdk/es/contract/aci\n * @export getContractInstance\n */\nimport _aeternityAeppCalldata from '@aeternity/aepp-calldata';\nconst {\n  Encoder: Calldata\n} = _aeternityAeppCalldata;\nimport { DRY_RUN_ACCOUNT, GAS_MAX } from \"../tx/builder/schema.mjs\";\nimport TxObject from \"../tx/tx-object.mjs\";\nimport { decode } from \"../tx/builder/helpers.mjs\";\nimport { MissingContractDefError, MissingContractAddressError, InactiveContractError, BytecodeMismatchError, InternalError, DuplicateContractError, MissingFunctionNameError, InvalidMethodInvocationError, NotPayableFunctionError, TypeError, NodeInvocationError, IllegalArgumentError, NoSuchContractFunctionError, MissingEventDefinitionError, AmbiguousEventDefinitionError } from \"../utils/errors.mjs\";\nimport { hash } from \"../utils/crypto-ts.mjs\";\n/**\n * Generate contract ACI object with predefined js methods for contract usage - can be used for\n * creating a reference to already deployed contracts\n * @alias module:@aeternity/aepp-sdk/es/contract/aci\n * @param {Object} [options={}] Options object\n * @param {String} [options.source] Contract source code\n * @param {String} [options.bytecode] Contract bytecode\n * @param {Object} [options.aci] Contract ACI\n * @param {String} [options.contractAddress] Contract address\n * @param {Object} [options.filesystem] Contact source external namespaces map\n * @param {Boolean} [options.validateBytecode] Compare source code with on-chain version\n * @return {ContractInstance} JS Contract API\n * @example\n * const contractIns = await aeSdk.getContractInstance({ source })\n * await contractIns.deploy([321]) or await contractIns.methods.init(321)\n * const callResult = await contractIns.call('setState', [123]) or\n * await contractIns.methods.setState.send(123, options)\n * const staticCallResult = await contractIns.call('setState', [123], { callStatic: true }) or\n * await contractIns.methods.setState.get(123, options)\n * Also you can call contract like: await contractIns.methods.setState(123, options)\n * Then sdk decide to make on-chain or static call(dry-run API) transaction based on function is\n * stateful or not\n */\n\nexport default async function getContractInstance() {\n  var _this = this;\n\n  let {\n    source,\n    bytecode,\n    aci: _aci,\n    contractAddress,\n    filesystem = {},\n    validateBytecode,\n    ...otherOptions\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (!_aci && source) {\n    _aci = await this.compilerApi.generateACI({\n      code: source,\n      options: {\n        filesystem\n      }\n    });\n  }\n\n  if (!_aci) throw new MissingContractDefError();\n  contractAddress = contractAddress && (await this.resolveName(contractAddress, 'contract_pubkey', {\n    resolveByNode: true\n  }));\n\n  if (!contractAddress && !source && !bytecode) {\n    throw new MissingContractAddressError('Can\\'t create instance by ACI without address');\n  }\n\n  if (contractAddress) {\n    const contract = await this.getContract(contractAddress);\n    if (!contract.active) throw new InactiveContractError(contractAddress);\n  }\n\n  const instance = {\n    _aci,\n    _name: _aci.encoded_aci.contract.name,\n    calldata: new Calldata([_aci.encoded_aci, ..._aci.external_encoded_aci]),\n    source,\n    bytecode,\n    deployInfo: {\n      address: contractAddress\n    },\n    options: { ...this.Ae.defaults,\n      callStatic: false,\n      filesystem,\n      ...otherOptions\n    },\n    compilerVersion: this.compilerVersion\n  };\n\n  if (validateBytecode) {\n    if (!contractAddress) throw new MissingContractAddressError('Can\\'t validate bytecode without contract address');\n    const onChanBytecode = (await this.getContractByteCode(contractAddress)).bytecode;\n    const isValid = source ? await this.compilerApi.validateByteCode({\n      bytecode: onChanBytecode,\n      source,\n      options: instance.options\n    }).then(res => Object.entries(res).length === 0, () => false) : bytecode === onChanBytecode;\n    if (!isValid) throw new BytecodeMismatchError(source ? 'source' : 'bytecode');\n  }\n  /**\n   * Compile contract\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype () => ContractInstance: Object\n   * @return {String} bytecode bytecode\n   */\n\n\n  instance.compile = async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (instance.bytecode) throw new IllegalArgumentError('Contract already compiled');\n    if (!instance.source) throw new IllegalArgumentError('Can\\'t compile without source code');\n    const {\n      bytecode\n    } = await _this.compilerApi.compileContract({\n      code: instance.source,\n      options: { ...instance.options,\n        ...options\n      }\n    });\n    instance.bytecode = bytecode;\n    return instance.bytecode;\n  };\n\n  const sendAndProcess = async (tx, options) => {\n    const txData = await this.send(tx, options);\n    const result = {\n      hash: txData.hash,\n      tx: TxObject({\n        tx: txData.rawTx\n      }),\n      txData,\n      rawTx: txData.rawTx\n    };\n    if (options.waitMined === false) return result;\n    const {\n      callInfo\n    } = await this.api.getTransactionInfoByHash(txData.hash);\n    Object.assign(result.txData, callInfo); // TODO: don't duplicate data in result\n\n    await handleCallError(callInfo);\n    return { ...result,\n      result: callInfo\n    };\n  };\n\n  const handleCallError = _ref => {\n    let {\n      returnType,\n      returnValue\n    } = _ref;\n    let message; // TODO: ensure that it works correctly https://github.com/aeternity/aepp-calldata-js/issues/88\n\n    switch (returnType) {\n      case 'ok':\n        return;\n\n      case 'revert':\n        message = instance.calldata.decodeFateString(returnValue);\n        break;\n\n      case 'error':\n        message = decode(returnValue).toString();\n        break;\n\n      default:\n        throw new InternalError(`Unknown returnType: ${returnType}`);\n    }\n\n    throw new NodeInvocationError(message);\n  };\n\n  instance._estimateGas = async (name, params, options) => {\n    const {\n      result: {\n        gasUsed\n      }\n    } = await instance.call(name, params, { ...options,\n      callStatic: true\n    }); // taken from https://github.com/aeternity/aepp-sdk-js/issues/1286#issuecomment-977814771\n\n    return Math.floor(gasUsed * 1.25);\n  };\n  /**\n   * Deploy contract\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype (init: Array, options: Object) => ContractInstance: Object\n   * @param {Array} params Contract init function arguments array\n   * @param {Object} [options] options\n   * @return {Object} deploy info\n   */\n\n\n  instance.deploy = async function () {\n    var _opt$gas;\n\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let options = arguments.length > 1 ? arguments[1] : undefined;\n    const opt = { ...instance.options,\n      ...options\n    };\n    if (!instance.bytecode) await instance.compile(opt);\n    if (opt.callStatic) return instance.call('init', params, opt);\n    if (instance.deployInfo.address) throw new DuplicateContractError();\n    const ownerId = await _this.address(opt);\n    const {\n      tx,\n      contractId\n    } = await _this.contractCreateTx({ ...opt,\n      gas: (_opt$gas = opt.gas) !== null && _opt$gas !== void 0 ? _opt$gas : await instance._estimateGas('init', params, opt),\n      callData: instance.calldata.encode(instance._name, 'init', params),\n      code: instance.bytecode,\n      ownerId\n    });\n    const {\n      hash,\n      rawTx,\n      result,\n      txData\n    } = await sendAndProcess(tx, opt);\n    instance.deployInfo = Object.freeze({\n      result,\n      owner: ownerId,\n      transaction: hash,\n      rawTx,\n      txData,\n      address: contractId\n    });\n    return instance.deployInfo;\n  };\n  /**\n   * Get function schema from contract ACI object\n   * @param {String} name Function name\n   * @return {Object} function ACI\n   */\n\n\n  function getFunctionACI(name) {\n    const fn = instance._aci.encoded_aci.contract.functions.find(f => f.name === name);\n\n    if (fn) return fn;\n    if (name === 'init') return {\n      payable: false\n    };\n    throw new NoSuchContractFunctionError(`Function ${name} doesn't exist in contract`);\n  }\n  /**\n   * Call contract function\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype (init: Array, options: Object = { callStatic: false }) => CallResult: Object\n   * @param {String} fn Function name\n   * @param {Array} params Array of function arguments\n   * @param {Object} [options={}] Array of function arguments\n   * @param {Boolean} [options.callStatic=false] Static function call\n   * @return {Object} CallResult\n   */\n\n\n  instance.call = async function (fn) {\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const opt = { ...instance.options,\n      ...options\n    };\n    const fnACI = getFunctionACI(fn);\n    const contractId = instance.deployInfo.address;\n    if (!fn) throw new MissingFunctionNameError();\n    if (fn === 'init' && !opt.callStatic) throw new InvalidMethodInvocationError('\"init\" can be called only via dryRun');\n    if (!contractId && fn !== 'init') throw new InvalidMethodInvocationError('You need to deploy contract before calling!');\n    if (fn !== 'init' && opt.amount > 0 && fnACI.payable === false) throw new NotPayableFunctionError(`You try to pay \"${opt.amount}\" to function \"${fn}\" which is not payable. Only payable function can accept coins`);\n    const callerId = await _this.address(opt).catch(error => {\n      if (opt.callStatic) return DRY_RUN_ACCOUNT.pub;else throw error;\n    });\n    const callData = instance.calldata.encode(instance._name, fn, params);\n    let res;\n\n    if (opt.callStatic) {\n      var _opt$gas2, _opt$nonce;\n\n      if (typeof opt.top === 'number') {\n        opt.top = (await _this.getKeyBlock(opt.top)).hash;\n      }\n\n      const txOpt = { ...opt,\n        gas: (_opt$gas2 = opt.gas) !== null && _opt$gas2 !== void 0 ? _opt$gas2 : GAS_MAX,\n        callData,\n        nonce: (_opt$nonce = opt.nonce) !== null && _opt$nonce !== void 0 ? _opt$nonce : opt.top && (await _this.getAccount(callerId, {\n          hash: opt.top\n        })).nonce + 1\n      };\n      const tx = fn === 'init' ? (await _this.contractCreateTx({ ...txOpt,\n        code: instance.bytecode,\n        ownerId: callerId\n      })).tx : await _this.contractCallTx({ ...txOpt,\n        callerId,\n        contractId\n      });\n      const {\n        callObj,\n        ...dryRunOther\n      } = await _this.txDryRun(tx, callerId, opt);\n      await handleCallError(callObj);\n      res = { ...dryRunOther,\n        tx: TxObject({\n          tx\n        }),\n        result: callObj\n      };\n    } else {\n      var _opt$gas3;\n\n      const tx = await _this.contractCallTx({ ...opt,\n        gas: (_opt$gas3 = opt.gas) !== null && _opt$gas3 !== void 0 ? _opt$gas3 : await instance._estimateGas(fn, params, opt),\n        callerId,\n        contractId,\n        callData\n      });\n      res = await sendAndProcess(tx, opt);\n    }\n\n    if (opt.waitMined || opt.callStatic) {\n      res.decodedResult = fnACI.returns && fnACI.returns !== 'unit' && fn !== 'init' && instance.calldata.decode(instance._name, fn, res.result.returnValue);\n      res.decodedEvents = instance.decodeEvents(res.result.log, opt);\n    }\n\n    return res;\n  };\n  /**\n   * @param {String} address Contract address that emitted event\n   * @param {BigInt} nameHash Hash of emitted event name\n   * @param {Object} [options]\n   * @param {Object} [options.contractAddressToName] Map of contract addresses to their names\n   * @return {String} Contract name\n   * @throws {MissingEventDefinitionError}\n   * @throws {AmbiguousEventDefinitionError}\n   */\n\n\n  function getContractNameByEvent(address, nameHash, _ref2) {\n    let {\n      contractAddressToName\n    } = _ref2;\n    const addressToName = { ...instance.options.contractAddressToName,\n      ...contractAddressToName\n    };\n    if (addressToName[address]) return addressToName[address];\n    const matchedEvents = [instance._aci.encoded_aci, ...instance._aci.external_encoded_aci].filter(_ref3 => {\n      let {\n        contract\n      } = _ref3;\n      return contract === null || contract === void 0 ? void 0 : contract.event;\n    }).map(_ref4 => {\n      let {\n        contract\n      } = _ref4;\n      return [contract.name, contract.event.variant];\n    }).map(_ref5 => {\n      let [name, events] = _ref5;\n      return events.map(event => [name, Object.keys(event)[0]]);\n    }).flat().filter(_ref6 => {\n      let [, eventName] = _ref6;\n      return BigInt('0x' + hash(eventName).toString('hex')) === nameHash;\n    });\n\n    switch (matchedEvents.length) {\n      case 0:\n        throw new MissingEventDefinitionError(nameHash, address);\n\n      case 1:\n        return matchedEvents[0][0];\n\n      default:\n        throw new AmbiguousEventDefinitionError(address, matchedEvents);\n    }\n  }\n  /**\n   * Decode Events\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype (events: Array) => DecodedEvents: Array\n   * @param {Array} events Array of encoded events (callRes.result.log)\n   * @param {Object} [options]\n   * @param {Boolean} [options.omitUnknown] Omit events that can't be decoded in case ACI is not\n   * complete\n   * @return {Object} DecodedEvents\n   */\n\n\n  instance.decodeEvents = function (events) {\n    let {\n      omitUnknown,\n      ...opt\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return events.map(event => {\n      const topics = event.topics.map(t => BigInt(t));\n      let contractName;\n\n      try {\n        contractName = getContractNameByEvent(event.address, topics[0], opt);\n      } catch (error) {\n        if (omitUnknown && error instanceof MissingEventDefinitionError) return null;\n        throw error;\n      }\n\n      const decoded = instance.calldata.decodeEvent(contractName, event.data, topics);\n      const [name, args] = Object.entries(decoded)[0];\n      return {\n        name,\n        args,\n        contract: {\n          name: contractName,\n          address: event.address\n        }\n      };\n    }).filter(e => e);\n  };\n  /**\n   * Generate proto function based on contract function using Contract ACI schema\n   * All function can be called like:\n   * 'await contract.methods.testFunction()' -> then sdk will decide to use dry-run or send tx\n   * on-chain base on if function stateful or not.\n   * Also you can manually do that:\n   * `await contract.methods.testFunction.get()` -> use call-static(dry-run)\n   * `await contract.methods.testFunction.send()` -> send tx on-chain\n   */\n\n\n  instance.methods = Object.fromEntries(instance._aci.encoded_aci.contract.functions.map(_ref7 => {\n    let {\n      name,\n      arguments: aciArgs,\n      stateful\n    } = _ref7;\n\n    const genHandler = callStatic => function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      const options = args.length === aciArgs.length + 1 ? args.pop() : {};\n      if (typeof options !== 'object') throw new TypeError(`Options should be an object: ${options}`);\n      if (name === 'init') return instance.deploy(args, {\n        callStatic,\n        ...options\n      });\n      return instance.call(name, args, {\n        callStatic,\n        ...options\n      });\n    };\n\n    return [name, Object.assign(genHandler(name === 'init' ? false : !stateful), {\n      get: genHandler(true),\n      send: genHandler(false)\n    })];\n  }));\n  return instance;\n}\n//# sourceMappingURL=aci.mjs.map","import _buffer from \"buffer\";\nconst {\n  Buffer: _Buffer\n} = _buffer;\n\n/*\n * ISC License (ISC)\n * Copyright (c) 2021 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Contract module - routines to interact with the æternity contract\n *\n * High level documentation of the contracts are available at\n * https://github.com/aeternity/protocol/tree/master/contracts and\n *\n * @module @aeternity/aepp-sdk/es/ae/contract\n * @export Contract\n * @example import { Contract } from '@aeternity/aepp-sdk'\n */\nimport Ae from \"./index.mjs\";\nimport ContractCompilerHttp from \"../contract/compiler.mjs\";\nimport getContractInstance from \"../contract/aci.mjs\";\nimport { AMOUNT, MIN_GAS_PRICE } from \"../tx/builder/schema.mjs\";\nimport { decode, produceNameId } from \"../tx/builder/helpers.mjs\";\n/**\n * Utility method to create a delegate signature for a contract\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String[]} ids The list of id's to prepend\n * @param {Object} [opt={}] options\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature in hex representation\n */\n\nasync function delegateSignatureCommon() {\n  let ids = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const signature = await this.sign(_Buffer.concat([_Buffer.from(this.getNetworkId(opt)), ...ids.map(e => decode(e))]), opt);\n  return _Buffer.from(signature).toString('hex');\n}\n/**\n * Helper to generate a signature to delegate pre-claim/claim/transfer/revoke of a name to\n * a contract.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} contractId Contract Id\n * @param {String} [name] The name\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature for delegation\n * @example\n * const aeSdk = await Universal({ ... })\n * const contractId = 'ct_asd2ks...' // contract address\n * const name = 'example.chain' // AENS name\n * const onAccount = await aeSdk.address() // Sign with a specific account\n * // Preclaim signature\n * const params = { contractId }\n * const preclaimSig = await aeSdk.createAensDelegationSignature(params, { onAccount: current })\n * // Claim, transfer and revoke signature\n * const params = { contractId, name }\n * const aensDelegationSig = await contract.createAensDelegationSignature(\n *   params, name, { onAccount: current }\n * )\n */\n\n\nasync function createAensDelegationSignature(_ref) {\n  let {\n    contractId,\n    name\n  } = _ref;\n  let opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return this.delegateSignatureCommon([await this.address(opt), ...(name ? [produceNameId(name)] : []), contractId], opt);\n}\n/**\n * Helper to generate a signature to delegate register/extend/respond of a Oracle to a contract.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} contractId Contract Id\n * @param {String} [queryId] Oracle Query Id\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature for delegation\n * @example\n * const aeSdk = await Universal({ ... })\n * const contractId = 'ct_asd2ks...' // contract address\n * const queryId = 'oq_...' // Oracle Query Id\n * const onAccount = await aeSdk.address() // Sign with a specific account\n * // Oracle register and extend signature\n * const params = { contractId }\n * const oracleDelegationSig = await contract.createOracleDelegationSignature(params, { onAccount })\n * // Oracle respond signature\n * const params = { contractId, queryId }\n * const respondSig = await contract.createOracleDelegationSignature(params, queryId)\n */\n\n\nasync function createOracleDelegationSignature(_ref2) {\n  let {\n    contractId,\n    queryId\n  } = _ref2;\n  let opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return this.delegateSignatureCommon([queryId !== null && queryId !== void 0 ? queryId : await this.address(opt), contractId], opt);\n}\n/**\n * Contract Stamp\n *\n * Provide contract implementation\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Contract instance\n * @example\n * import { Transaction, MemoryAccount, ChainNode } from '@aeternity/aepp-sdk\n *\n * const ContractWithAE = await Contract\n *    .compose(Transaction, MemoryAccount, ChainNode) // AE implementation\n * const client = await ContractWithAe({ url, internalUrl, compilerUrl, keypair, ... })\n *\n */\n\n\nexport default Ae.compose(ContractCompilerHttp, {\n  methods: {\n    getContractInstance,\n    // Delegation for contract\n    delegateSignatureCommon,\n    // AENS\n    createAensDelegationSignature,\n    // Oracle\n    createOracleDelegationSignature\n  },\n  deepProps: {\n    Ae: {\n      defaults: {\n        gasPrice: MIN_GAS_PRICE,\n        amount: AMOUNT\n      }\n    }\n  }\n});\n//# sourceMappingURL=contract.mjs.map","import BigNumber from 'bignumber.js';\nimport { MAX_AUTH_FUN_GAS } from \"../../tx/builder/schema.mjs\";\nimport { InvalidAuthDataError } from \"../../utils/errors.mjs\";\nexport const prepareGaParams = ins => async (authData, authFnName) => {\n  if (typeof authData !== 'object') throw new InvalidAuthDataError('AuthData must be an object');\n\n  if (authData.gas && BigNumber(authData.gas).gt(MAX_AUTH_FUN_GAS)) {\n    throw new InvalidAuthDataError(`the maximum gas value for ga authFun is ${MAX_AUTH_FUN_GAS}, got ${authData.gas}`);\n  }\n\n  const gas = authData.gas || MAX_AUTH_FUN_GAS;\n\n  if (authData.callData) {\n    if (authData.callData.split('_')[0] !== 'cb') throw new InvalidAuthDataError('Auth data must be a string with \"cb\" prefix.');\n    return {\n      authCallData: authData.callData,\n      gas\n    };\n  }\n\n  if (!authData.source || !authData.args) throw new InvalidAuthDataError('Auth data must contain source code and arguments.');\n  const contract = await ins.getContractInstance({\n    source: authData.source\n  });\n  return {\n    authCallData: contract.calldata.encode(contract._name, authFnName, authData.args),\n    gas\n  };\n};\n//# sourceMappingURL=helpers.mjs.map","/*\n * ISC License (ISC)\n * Copyright (c) 2021 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Generalized Account module - routines to use generalized account\n *\n * @module @aeternity/aepp-sdk/es/contract/ga\n * @export GeneralizedAccount\n * @example import { GeneralizedAccount } from '@aeternity/aepp-sdk'\n */\nimport Contract from \"../../ae/contract.mjs\";\nimport { TX_TYPE } from \"../../tx/builder/schema.mjs\";\nimport { buildTx, unpackTx } from \"../../tx/builder/index.mjs\";\nimport { prepareGaParams } from \"./helpers.mjs\";\nimport { hash } from \"../../utils/crypto.mjs\";\nimport { IllegalArgumentError, MissingParamError } from \"../../utils/errors.mjs\";\n/**\n * GeneralizedAccount Stamp\n *\n * Provide Generalized Account implementation\n * {@link module:@aeternity/aepp-sdk/es/contract/ga} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} GeneralizedAccount instance\n * @example\n * const authContract = ``\n * await aeSdk.createGeneralizedAccount(authFnName, authContract, [...authFnArguments]\n * // Make spend using GA\n * const callData = 'cb_...' // encoded call data for auth contract\n * await aeSdk.spend(10000, receiverPub, { authData: { callData } })\n * // or\n * await aeSdk.spend(10000, receiverPub, {\n *   authData: { source: authContract, args: [...authContractArgs] }\n * }) // sdk will prepare callData itself\n */\n\nexport const GeneralizedAccount = Contract.compose({\n  methods: {\n    createGeneralizedAccount,\n    createMetaTx,\n    isGA\n  }\n});\nexport default GeneralizedAccount;\n/**\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @function\n * Check if account is GA\n * @param {String} address - Account address\n * @return {Boolean}\n */\n\nasync function isGA(address) {\n  const {\n    contractId\n  } = await this.getAccount(address);\n  return !!contractId;\n}\n/**\n * Convert current account to GA\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @function\n * @param {String} authFnName - Authorization function name\n * @param {String} source - Auth contract source code\n * @param {Array} [args] - init arguments\n * @param {Object} [options] - Options\n * @return {Promise<Readonly<{\n *   result: *, owner: *, address, rawTx: *, transaction: *\n * }>>}\n */\n\n\nasync function createGeneralizedAccount(authFnName, source) {\n  var _opt$gas;\n\n  let args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const opt = { ...this.Ae.defaults,\n    ...options\n  };\n  const ownerId = await this.address(opt);\n  if (await this.isGA(ownerId)) throw new IllegalArgumentError(`Account ${ownerId} is already GA`);\n  const contract = await this.getContractInstance({\n    source\n  });\n  await contract.compile();\n  const {\n    tx,\n    contractId\n  } = await this.gaAttachTx({ ...opt,\n    gas: (_opt$gas = opt.gas) !== null && _opt$gas !== void 0 ? _opt$gas : await contract._estimateGas('init', args, opt),\n    ownerId,\n    code: contract.bytecode,\n    callData: contract.calldata.encode(contract._name, 'init', args),\n    authFun: hash(authFnName)\n  });\n  const {\n    hash: transaction,\n    rawTx\n  } = await this.send(tx, opt);\n  return Object.freeze({\n    owner: ownerId,\n    transaction,\n    rawTx,\n    gaContractId: contractId\n  });\n}\n\nconst wrapInEmptySignedTx = tx => buildTx({\n  encodedTx: tx,\n  signatures: []\n}, TX_TYPE.signed);\n/**\n * Create a metaTx transaction\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @function\n * @param {String} rawTransaction Inner transaction\n * @param {Object} authData Object with gaMeta params\n * @param {String} authFnName - Authorization function name\n * @param {Object} options - Options\n * @return {String}\n */\n\n\nasync function createMetaTx(rawTransaction, authData, authFnName) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  if (!authData) throw new MissingParamError('authData is required'); // Check if authData is callData or if it's an object prepare a callData from source and args\n\n  const {\n    authCallData,\n    gas\n  } = await prepareGaParams(this)(authData, authFnName);\n  const opt = { ...this.Ae.defaults,\n    ...options\n  };\n  const {\n    abiVersion\n  } = await this.getVmVersion(TX_TYPE.contractCall);\n  const wrappedTx = wrapInEmptySignedTx(unpackTx(rawTransaction));\n  const params = { ...opt,\n    tx: { ...wrappedTx,\n      tx: wrappedTx.txObject\n    },\n    gaId: await this.address(opt),\n    abiVersion,\n    authData: authCallData,\n    gas,\n    vsn: 2\n  };\n  const {\n    fee\n  } = await this.prepareTxParams(TX_TYPE.gaMeta, params);\n  const {\n    rlpEncoded: metaTxRlp\n  } = buildTx({ ...params,\n    fee: `${fee}`\n  }, TX_TYPE.gaMeta, {\n    vsn: 2\n  });\n  return wrapInEmptySignedTx(metaTxRlp).tx;\n}\n//# sourceMappingURL=index.mjs.map","/**\n * RPC handler for AEPP side\n *\n * @module @aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/aepp-rpc\n * @export AeppRpc\n * @example\n * import ContentScriptBridge\n * from '@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/aepp-rpc'\n */\nimport { v4 as uuid } from '@aeternity/uuid';\nimport Ae from \"../../../ae/index.mjs\";\nimport RpcClient from \"./rpc-client.mjs\";\nimport { getHandler, message } from \"../helpers.mjs\";\nimport { METHODS, RPC_STATUS, VERSION } from \"../schema.mjs\";\nimport { AlreadyConnectedError, NoWalletConnectedError, UnsubscribedAccountError, UnAuthorizedAccountError, ArgumentError, RpcConnectionError } from \"../../errors.mjs\";\nimport Node from \"../../../node.mjs\";\nconst NOTIFICATIONS = {\n  [METHODS.updateAddress]: instance => _ref => {\n    let {\n      params\n    } = _ref;\n    instance.rpcClient.accounts = params;\n    instance.onAddressChange(params);\n  },\n  [METHODS.updateNetwork]: instance => async _ref2 => {\n    let {\n      params\n    } = _ref2;\n    const {\n      networkId,\n      node\n    } = params;\n    instance.rpcClient.info.networkId = networkId;\n    node && instance.addNode(node.name, await Node(node), true);\n    instance.onNetworkChange(params);\n  },\n  [METHODS.closeConnection]: instance => msg => {\n    instance.disconnectWallet();\n    instance.onDisconnect(msg.params);\n  }\n};\nconst RESPONSES = {\n  [METHODS.address]: instance => msg => instance.rpcClient.processResponse(msg),\n  [METHODS.connect]: instance => msg => {\n    if (msg.result) instance.rpcClient.info.status = RPC_STATUS.CONNECTED;\n    instance.rpcClient.processResponse(msg);\n  },\n  [METHODS.subscribeAddress]: instance => msg => {\n    if (msg.result) {\n      if (msg.result.address) {\n        instance.rpcClient.accounts = msg.result.address;\n      }\n\n      if (msg.result.subscription) {\n        instance.rpcClient.addressSubscription = msg.result.subscription;\n      }\n    }\n\n    instance.rpcClient.processResponse(msg, _ref3 => {\n      let {\n        id,\n        result\n      } = _ref3;\n      return [result];\n    });\n  },\n  [METHODS.sign]: instance => msg => {\n    instance.rpcClient.processResponse(msg, _ref4 => {\n      let {\n        id,\n        result\n      } = _ref4;\n      return [result.signedTransaction || result.transactionHash];\n    });\n  },\n  [METHODS.signMessage]: instance => msg => {\n    instance.rpcClient.processResponse(msg, _ref5 => {\n      let {\n        id,\n        result\n      } = _ref5;\n      return [result.signature];\n    });\n  }\n};\nconst REQUESTS = {};\n\nconst handleMessage = instance => async msg => {\n  if (!msg.id) {\n    return getHandler(NOTIFICATIONS, msg, {\n      debug: instance.debug\n    })(instance)(msg);\n  } else if (Object.prototype.hasOwnProperty.call(instance.rpcClient.callbacks, msg.id)) {\n    return getHandler(RESPONSES, msg, {\n      debug: instance.debug\n    })(instance)(msg);\n  } else {\n    return getHandler(REQUESTS, msg, {\n      debug: instance.debug\n    })(instance)(msg);\n  }\n};\n/**\n * Contain functionality for wallet interaction and connect it to sdk\n * @alias module:@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/aepp-rpc\n * @function\n * @rtype Stamp\n * @param {Object} param Init params object\n * @param {String=} [param.name] Aepp name\n * @param {Function} onAddressChange Call-back function for update address event\n * @param {Function} onDisconnect Call-back function for disconnect event\n * @param {Function} onNetworkChange Call-back function for update network event\n * @param {Object} connection Wallet connection object\n * @return {Object}\n */\n\n\nexport default Ae.compose({\n  async init(_ref6) {\n    let {\n      name,\n      connection,\n      debug = false,\n      ...other\n    } = _ref6;\n    ['onAddressChange', 'onDisconnect', 'onNetworkChange'].forEach(event => {\n      var _other$event;\n\n      const handler = (_other$event = other[event]) !== null && _other$event !== void 0 ? _other$event : () => {};\n      if (typeof handler !== 'function') throw new ArgumentError(event, 'a function', handler);\n      this[event] = handler;\n    });\n    this.connection = connection;\n    this.name = name;\n    this.debug = debug;\n\n    if (connection) {\n      // Init RPCClient\n      await this.connectToWallet(connection);\n    }\n  },\n\n  deepProps: {\n    Ae: {\n      defaults: {\n        walletBroadcast: true\n      }\n    }\n  },\n  methods: {\n    sign() {},\n\n    addresses() {\n      if (!this.isSubscribedAccount()) throw new UnsubscribedAccountError();\n      return [this.rpcClient.currentAccount, ...Object.keys(this.rpcClient.accounts.connected)];\n    },\n\n    /**\n     * Connect to wallet\n     * @function connectToWallet\n     * @instance\n     * @rtype (connection: Object) => void\n     * @param {Object} connection Wallet connection object\n     * @param {Object} [options={}]\n     * @param {Boolean} [options.connectNode=true] - Request wallet to bind node\n     * @param {String}  [options.name=wallet-node] - Node name\n     * @param {Boolean} [options.select=false] - Select this node as current\n     * @return {Object}\n     */\n    async connectToWallet(connection) {\n      let {\n        connectNode = false,\n        name = 'wallet-node',\n        select = false\n      } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (this.rpcClient && this.rpcClient.isConnected()) throw new AlreadyConnectedError('You are already connected to wallet ' + this.rpcClient);\n      this.rpcClient = RpcClient({\n        connection,\n        networkId: this.getNetworkId({\n          force: true\n        }),\n        ...connection.connectionInfo,\n        id: uuid(),\n        handlers: [handleMessage(this), this.onDisconnect]\n      });\n      const walletInfo = await this.sendConnectRequest(connectNode);\n\n      if (connectNode && !Object.prototype.hasOwnProperty.call(walletInfo, 'node')) {\n        throw new RpcConnectionError('Missing URLs of the Node');\n      }\n\n      connectNode && this.addNode(name, await Node(walletInfo.node), select);\n      return walletInfo;\n    },\n\n    /**\n     * Disconnect from wallet\n     * @function disconnectWallet\n     * @instance\n     * @rtype (force: Boolean = false) => void\n     * @param {Boolean} sendDisconnect=false Force sending close connection message\n     * @return {void}\n     */\n    async disconnectWallet() {\n      let sendDisconnect = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      if (!this.isConnected()) throw new NoWalletConnectedError('You are not connected to Wallet');\n      sendDisconnect && this.rpcClient.sendMessage(message(METHODS.closeConnection, {\n        reason: 'bye'\n      }), true);\n      this.rpcClient.disconnect();\n      this.rpcClient = null;\n    },\n\n    async address() {\n      let {\n        onAccount\n      } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (!this.isConnected()) throw new NoWalletConnectedError('You are not connected to Wallet');\n      const current = this.rpcClient.currentAccount;\n      if (!current) throw new UnsubscribedAccountError();\n\n      if (onAccount && !this.rpcClient.hasAccessToAccount(onAccount)) {\n        throw new UnAuthorizedAccountError(onAccount);\n      }\n\n      return onAccount || current;\n    },\n\n    /**\n     * Ask address from wallet\n     * @function askAddresses\n     * @instance\n     * @rtype () => Promise\n     * @return {Promise} Address from wallet\n     */\n    async askAddresses() {\n      if (!this.isConnected()) throw new NoWalletConnectedError('You are not connected to Wallet');\n      if (!this.isSubscribedAccount()) throw new UnsubscribedAccountError();\n      return this.rpcClient.request(METHODS.address);\n    },\n\n    /**\n     * Subscribe for addresses from wallet\n     * @function subscribeAddress\n     * @instance\n     * @rtype (type: String, value: String) => Promise\n     * @param {String} type Should be one of 'current' (the selected account), 'connected' (all)\n     * @param {String} value Subscription action('subscribe'|'unsubscribe')\n     * @return {Promise} Address from wallet\n     */\n    async subscribeAddress(type, value) {\n      if (!this.isConnected()) throw new NoWalletConnectedError('You are not connected to Wallet');\n      return this.rpcClient.request(METHODS.subscribeAddress, {\n        type,\n        value\n      });\n    },\n\n    /**\n     * Overwriting of `signTransaction` AE method\n     * All sdk API which use it will be send notification to wallet and wait for callBack\n     * @function signTransaction\n     * @instance\n     * @rtype (tx: String, options = {}) => Promise\n     * @return {Promise<String>} Signed transaction\n     */\n    async signTransaction(tx) {\n      let opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (!this.isConnected()) throw new NoWalletConnectedError('You are not connected to Wallet');\n      if (!this.isSubscribedAccount()) throw new UnsubscribedAccountError();\n\n      if (opt.onAccount && !this.rpcClient.hasAccessToAccount(opt.onAccount)) {\n        throw new UnAuthorizedAccountError(opt.onAccount);\n      }\n\n      return this.rpcClient.request(METHODS.sign, { ...opt,\n        tx,\n        returnSigned: true,\n        networkId: this.getNetworkId()\n      });\n    },\n\n    /**\n     * Overwriting of `signMessage` AE method\n     * All sdk API which use it will be send notification to wallet and wait for callBack\n     * @function signMessage\n     * @instance\n     * @rtype (msg: String, options = {}) => Promise\n     * @return {Promise<String>} Signed transaction\n     */\n    async signMessage(msg) {\n      let opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (!this.isConnected()) throw new NoWalletConnectedError('You are not connected to Wallet');\n      if (!this.isSubscribedAccount()) throw new UnsubscribedAccountError();\n\n      if (opt.onAccount && !this.rpcClient.hasAccessToAccount(opt.onAccount)) {\n        throw new UnAuthorizedAccountError(opt.onAccount);\n      }\n\n      return this.rpcClient.request(METHODS.signMessage, { ...opt,\n        message: msg\n      });\n    },\n\n    /**\n     * Send connection request to wallet\n     * @function sendConnectRequest\n     * @instance\n     * @param {Boolean} connectNode - Request wallet to bind node\n     * @rtype () => Promise\n     * @return {Promise} Connection response\n     */\n    async sendConnectRequest(connectNode) {\n      return this.rpcClient.request(METHODS.connect, {\n        name: this.name,\n        version: VERSION,\n        networkId: this.getNetworkId({\n          force: true\n        }),\n        connectNode\n      });\n    },\n\n    /**\n     * Overwriting of `send` AE method\n     * All sdk API which use it will be send notification to wallet and wait for callBack\n     * This method will sign, broadcast and wait until transaction will be accepted using rpc\n     * communication with wallet\n     * @function send\n     * @instance\n     * @rtype (tx: String, options = {}) => Promise\n     * @param {String} tx\n     * @param {Object} [options={}]\n     * @param {Object} [options.walletBroadcast=true]\n     * @return {Promise<Object>} Transaction broadcast result\n     */\n    async send(tx) {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (!this.isConnected()) throw new NoWalletConnectedError('You are not connected to Wallet');\n      if (!this.isSubscribedAccount()) throw new UnsubscribedAccountError();\n\n      if (options.onAccount && !this.rpcClient.hasAccessToAccount(options.onAccount)) {\n        throw new UnAuthorizedAccountError(options.onAccount);\n      }\n\n      const opt = { ...this.Ae.defaults,\n        ...options\n      };\n\n      if (!opt.walletBroadcast) {\n        const signed = await this.signTransaction(tx, {\n          onAccount: opt.onAccount\n        });\n        return this.sendTransaction(signed, opt);\n      }\n\n      return this.rpcClient.request(METHODS.sign, {\n        onAccount: opt.onAccount,\n        tx,\n        returnSigned: false,\n        networkId: this.getNetworkId()\n      });\n    },\n\n    isConnected() {\n      return this.rpcClient && this.rpcClient.isConnected();\n    },\n\n    isSubscribedAccount() {\n      return typeof this.rpcClient.currentAccount !== 'undefined';\n    }\n\n  }\n});\n//# sourceMappingURL=aepp-rpc.mjs.map","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Oracle module - routines to interact with the æternity oracle system\n *\n * The high-level description of the oracle system is\n * https://github.com/aeternity/protocol/blob/master/ORACLE.md in the protocol\n * repository.\n * @module @aeternity/aepp-sdk/es/ae/oracle\n * @export Oracle\n * @example import { Oracle } from '@aeternity/aepp-sdk'\n */\nimport Ae from \"./index.mjs\";\nimport { pause } from \"../utils/other.mjs\";\nimport { oracleQueryId, decode } from \"../tx/builder/helpers.mjs\";\nimport { unpackTx } from \"../tx/builder/index.mjs\";\nimport { ORACLE_TTL, QUERY_FEE, QUERY_TTL, RESPONSE_TTL } from \"../tx/builder/schema.mjs\";\nimport { RequestTimedOutError } from \"../utils/errors.mjs\";\n/**\n * Constructor for Oracle Object (helper object for using Oracle)\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @return {Promise<Object>} Oracle object\n */\n\nasync function getOracleObject(oracleId) {\n  const oracle = await this.api.getOracleByPubkey(oracleId);\n  const {\n    oracleQueries: queries\n  } = await this.api.getOracleQueriesByPubkey(oracleId);\n  return { ...oracle,\n    queries,\n    pollQueries: this.pollForQueries.bind(this, oracleId),\n    postQuery: this.postQueryToOracle.bind(this, oracleId),\n    respondToQuery: this.respondToQuery.bind(this, oracleId),\n    extendOracle: this.extendOracleTtl.bind(this, oracleId),\n    getQuery: this.getQueryObject.bind(this, oracleId)\n  };\n}\n/**\n * Poll for oracle queries\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @param {String} oracleId Oracle public key\n * @param {Function} onQuery OnQuery callback\n * @param {Object} [options] Options object\n * @param {Number} [options.interval] Poll interval(default: 5000)\n * @return {Function} stopPolling - Stop polling function\n */\n\n\nfunction pollForQueries(oracleId, onQuery) {\n  let {\n    interval = this._getPollInterval('microblock')\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const knownQueryIds = new Set();\n\n  const checkNewQueries = async () => {\n    const queries = ((await this.api.getOracleQueriesByPubkey(oracleId)).oracleQueries || []).filter(_ref => {\n      let {\n        id\n      } = _ref;\n      return !knownQueryIds.has(id);\n    });\n    queries.forEach(_ref2 => {\n      let {\n        id\n      } = _ref2;\n      return knownQueryIds.add(id);\n    });\n    if (queries.length) onQuery(queries);\n  };\n\n  let stopped;\n\n  (async () => {\n    while (!stopped) {\n      // eslint-disable-line no-unmodified-loop-condition\n      // TODO: allow to handle this error somehow\n      await checkNewQueries().catch(console.error);\n      await pause(interval);\n    }\n  })();\n\n  return () => {\n    stopped = true;\n  };\n}\n/**\n * Constructor for OracleQuery Object (helper object for using OracleQuery)\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} queryId Oracle Query id\n * @return {Promise<Object>} OracleQuery object\n */\n\n\nasync function getQueryObject(oracleId, queryId) {\n  const q = await this.api.getOracleQueryByPubkeyAndQueryId(oracleId, queryId);\n  return { ...q,\n    decodedQuery: decode(q.query).toString(),\n    decodedResponse: decode(q.response).toString(),\n    respond: this.respondToQuery.bind(this, oracleId, queryId),\n    pollForResponse: this.pollForQueryResponse.bind(this, oracleId, queryId),\n\n    /**\n     * @deprecated use TxBuilderHelper.decode instead\n     * @param data\n     * @returns {Buffer}\n     */\n    decode: data => decode(data)\n  };\n}\n/**\n * Poll for oracle query response\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} queryId Oracle Query id\n * @param {Object} [options] Options object\n * @param {Object} [options.attempts] Poll attempt's(default: 20)\n * @param {Object} [options.interval] Poll interval(default: 5000)\n * @return {Promise<Object>} OracleQuery object\n */\n\n\nexport async function pollForQueryResponse(oracleId, queryId) {\n  let {\n    attempts = 20,\n    interval = this._getPollInterval('microblock')\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  for (let i = 0; i < attempts; i++) {\n    if (i) await pause(interval);\n    const {\n      response\n    } = await this.api.getOracleQueryByPubkeyAndQueryId(oracleId, queryId);\n    const responseBuffer = decode(response, 'or');\n\n    if (responseBuffer.length) {\n      return String(responseBuffer);\n    }\n  }\n\n  throw new RequestTimedOutError((attempts - 1) * interval);\n}\n/**\n * Register oracle\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} queryFormat Format of query\n * @param {String} responseFormat Format of query response\n * @param {Object} [options={}] Options\n * @param {String|Number} [options.queryFee] Oracle query Fee\n * @param {Object} [options.oracleTtl] OracleTtl object {type: 'delta|block', value: 'number'}\n * @param {Number} [options.abiVersion] Always 0 (do not use virtual machine)\n * @param {Number|String} [options.fee] Transaction fee\n * @param {Number|String} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Oracle object\n */\n\nasync function registerOracle(queryFormat, responseFormat) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const opt = { ...this.Ae.defaults,\n    ...options\n  }; // Preset VmVersion for oracle\n\n  const accountId = await this.address(opt);\n  const oracleRegisterTx = await this.oracleRegisterTx({ ...opt,\n    accountId,\n    queryFormat,\n    responseFormat\n  });\n  return { ...(await this.send(oracleRegisterTx, opt)),\n    ...(await this.getOracleObject(`ok_${accountId.slice(3)}`))\n  };\n}\n/**\n * Post query to oracle\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} query Oracle query object\n * @param {Object} [options={}]\n * @param {String|Number} [options.queryTtl] queryTtl Oracle query time to leave\n * @param {String|Number} [options.responseTtl] queryFee Oracle query response time to leave\n * @param {String|Number} [options.queryFee] queryFee Oracle query fee\n * @param {Number} [options.fee] fee Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Query object\n */\n\n\nasync function postQueryToOracle(oracleId, query) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const queryFee = options.queryFee || (await this.api.getOracleByPubkey(oracleId)).queryFee;\n  const opt = { ...this.Ae.defaults,\n    queryFee,\n    ...options\n  };\n  const senderId = await this.address(opt);\n  const oracleRegisterTx = await this.oraclePostQueryTx({ ...opt,\n    oracleId,\n    senderId,\n    query\n  });\n  const queryId = oracleQueryId(senderId, unpackTx(oracleRegisterTx).tx.nonce, oracleId);\n  return { ...(await this.send(oracleRegisterTx, opt)),\n    ...(await this.getQueryObject(oracleId, queryId))\n  };\n}\n/**\n * Extend oracle ttl\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} oracleTtl Oracle time to leave for extend\n * @param {Object} [options={}]\n * @param {Number} [options.fee] fee Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Oracle object\n */\n\n\nasync function extendOracleTtl(oracleId, oracleTtl) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const opt = { ...this.Ae.defaults,\n    ...options\n  };\n  const callerId = await this.address(opt);\n  const oracleExtendTx = await this.oracleExtendTx({ ...opt,\n    oracleId,\n    callerId,\n    oracleTtl\n  });\n  return { ...(await this.send(oracleExtendTx, opt)),\n    ...(await this.getOracleObject(oracleId))\n  };\n}\n/**\n * Extend oracle ttl\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} queryId Oracle query id\n * @param {String} response Oracle query response\n * @param {Object} [options={}]\n * @param {Number} [options.responseTtl] responseTtl Query response time to leave\n * @param {Number} [options.fee] Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Oracle object\n */\n\n\nasync function respondToQuery(oracleId, queryId, response) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const opt = { ...this.Ae.defaults,\n    ...options\n  };\n  const callerId = await this.address(opt);\n  const oracleRespondTx = await this.oracleRespondTx({ ...opt,\n    oracleId,\n    queryId,\n    callerId,\n    response\n  });\n  return { ...(await this.send(oracleRespondTx, opt)),\n    ...(await this.getOracleObject(oracleId))\n  };\n}\n/**\n * Oracle Stamp\n *\n * Oracle provides oracle-system related methods atop\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Oracle instance\n */\n\n\nconst Oracle = Ae.compose({\n  methods: {\n    registerOracle,\n    respondToQuery,\n    extendOracleTtl,\n    postQueryToOracle,\n    pollForQueryResponse,\n    pollForQueries,\n    getOracleObject,\n    getQueryObject\n  },\n  deepProps: {\n    Ae: {\n      defaults: {\n        queryFee: QUERY_FEE,\n        oracleTtl: ORACLE_TTL,\n        queryTtl: QUERY_TTL,\n        responseTtl: RESPONSE_TTL\n      }\n    }\n  }\n});\nexport default Oracle;\n//# sourceMappingURL=oracle.mjs.map","/*\n * ISC License (ISC)\n * Copyright (c) 2021 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Aepp module\n * @module @aeternity/aepp-sdk/es/ae/aepp\n * @export Aepp\n * @example import { RpcAepp } from '@aeternity/aepp-sdk'\n */\nimport Ae from \"./index.mjs\";\nimport Aens from \"./aens.mjs\";\nimport Contract from \"./contract.mjs\";\nimport AeppRpc from \"../utils/aepp-wallet-communication/rpc/aepp-rpc.mjs\";\nimport Chain from \"../chain/node.mjs\";\nimport Tx from \"../tx/tx.mjs\";\nimport Oracle from \"./oracle.mjs\";\n/**\n * Aepp Stamp\n *\n * Aepp provides base functionality.\n * Expected to use this stamp with a Wallet.\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aepp\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Aepp instance\n */\n\nexport default Ae.compose(Tx, Oracle, Contract, Aens, Chain, AeppRpc);\n//# sourceMappingURL=aepp.mjs.map","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Wallet module\n * @module @aeternity/aepp-sdk/es/ae/wallet\n * @export Wallet\n * @example import { RpcWallet } from '@aeternity/aepp-sdk'\n */\nimport Ae from \"./index.mjs\";\nimport Chain from \"../chain/node.mjs\";\nimport Tx from \"../tx/tx.mjs\";\nimport Contract from \"./contract.mjs\";\nimport GeneralizedAccount from \"../contract/ga/index.mjs\";\nimport WalletRpc from \"../utils/aepp-wallet-communication/rpc/wallet-rpc.mjs\";\nimport Oracle from \"./oracle.mjs\";\nimport Aens from \"./aens.mjs\";\n/**\n * Wallet Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/wallet\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {String} options.url - Node instance to connect to\n * @param {Account[]} [options.accounts] - Accounts to initialize with\n * @param {String} [options.account] - Public key of account to preselect\n * @return {Object} Wallet instance\n * @example Wallet({\n  url: 'https://testnet.aeternity.io/',\n  accounts: [MemoryAccount({keypair})],\n  address: keypair.publicKey,\n})\n */\n\nexport default Ae.compose(WalletRpc, Tx, Contract, Oracle, Aens, GeneralizedAccount, Chain);\n//# sourceMappingURL=wallet.mjs.map","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport _websocket from 'websocket';\nconst {\n  w3cwebsocket: W3CWebSocket\n} = _websocket;\nimport _events from 'events';\nconst {\n  EventEmitter\n} = _events;\nimport JsonBig from \"../utils/json-big.mjs\";\nimport { pascalToSnake } from \"../utils/string.mjs\";\nimport { ChannelCallError, ChannelPingTimedOutError, UnknownChannelStateError } from \"../utils/errors.mjs\"; // Send ping message every 10 seconds\n\nconst PING_TIMEOUT_MS = 10000; // Close connection if pong message is not received within 5 seconds\n\nconst PONG_TIMEOUT_MS = 5000;\nexport const options = new WeakMap();\nexport const status = new WeakMap();\nexport const state = new WeakMap();\nconst fsm = new WeakMap();\nconst websockets = new WeakMap();\nexport const eventEmitters = new WeakMap();\nconst messageQueue = new WeakMap();\nconst messageQueueLocked = new WeakMap();\nconst actionQueue = new WeakMap();\nconst actionQueueLocked = new WeakMap();\nconst sequence = new WeakMap();\nexport const channelId = new WeakMap();\nconst rpcCallbacks = new WeakMap();\nconst pingTimeoutId = new WeakMap();\nconst pongTimeoutId = new WeakMap();\nexport const fsmId = new WeakMap();\nexport function emit(channel) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  eventEmitters.get(channel).emit(...args);\n}\n\nfunction enterState(channel, nextState) {\n  if (!nextState) {\n    throw new UnknownChannelStateError();\n  }\n\n  fsm.set(channel, nextState);\n\n  if (nextState.handler.enter) {\n    nextState.handler.enter(channel);\n  }\n\n  dequeueAction(channel);\n}\n\nexport function changeStatus(channel, newStatus) {\n  const prevStatus = status.get(channel);\n\n  if (newStatus !== prevStatus) {\n    status.set(channel, newStatus);\n    emit(channel, 'statusChanged', newStatus);\n  }\n}\nexport function changeState(channel, newState) {\n  state.set(channel, newState);\n  emit(channel, 'stateChanged', newState);\n}\nexport function send(channel, message) {\n  const {\n    debug = false\n  } = options.get(channel);\n  if (debug) console.log('Send message: ', message);\n  websockets.get(channel).send(JsonBig.stringify(message));\n}\nexport function enqueueAction(channel, guard, action) {\n  actionQueue.set(channel, [...(actionQueue.get(channel) || []), {\n    guard,\n    action\n  }]);\n  dequeueAction(channel);\n}\n\nasync function dequeueAction(channel) {\n  const locked = actionQueueLocked.get(channel);\n  const queue = actionQueue.get(channel) || [];\n\n  if (locked || !queue.length) {\n    return;\n  }\n\n  const state = fsm.get(channel);\n  const index = queue.findIndex(item => item.guard(channel, state));\n\n  if (index === -1) {\n    return;\n  }\n\n  actionQueue.set(channel, queue.filter((_, i) => index !== i));\n  actionQueueLocked.set(channel, true);\n  const nextState = await Promise.resolve(queue[index].action(channel, state));\n  actionQueueLocked.set(channel, false);\n  enterState(channel, nextState);\n}\n\nasync function handleMessage(channel, message) {\n  const {\n    handler,\n    state\n  } = fsm.get(channel);\n  enterState(channel, await Promise.resolve(handler(channel, message, state)));\n}\n\nasync function dequeueMessage(channel) {\n  if (messageQueueLocked.get(channel)) return;\n  const messages = messageQueue.get(channel);\n  if (!messages.length) return;\n  messageQueueLocked.set(channel, true);\n\n  while (messages.length) {\n    const message = messages.shift();\n\n    try {\n      await handleMessage(channel, message);\n    } catch (error) {\n      console.error('Error handling incoming message:');\n      console.error(message);\n      console.error(error);\n    }\n  }\n\n  messageQueueLocked.set(channel, false);\n}\n\nfunction ping(channel) {\n  clearTimeout(pingTimeoutId.get(channel));\n  clearTimeout(pongTimeoutId.get(channel));\n  pingTimeoutId.set(channel, setTimeout(() => {\n    send(channel, {\n      jsonrpc: '2.0',\n      method: 'channels.system',\n      params: {\n        action: 'ping'\n      }\n    });\n    pongTimeoutId.set(channel, setTimeout(() => {\n      disconnect(channel);\n      emit(channel, 'error', new ChannelPingTimedOutError());\n    }, PONG_TIMEOUT_MS));\n  }, PING_TIMEOUT_MS));\n}\n\nfunction onMessage(channel, data) {\n  const message = JsonBig.parse(data);\n  const {\n    debug = false\n  } = options.get(channel);\n  if (debug) console.log('Receive message: ', message);\n\n  if (message.id) {\n    const callback = rpcCallbacks.get(channel).get(message.id);\n\n    try {\n      callback(message);\n    } finally {\n      rpcCallbacks.get(channel).delete(message.id);\n    }\n\n    return;\n  }\n\n  if (message.method === 'channels.message') {\n    emit(channel, 'message', message.params.data.message);\n    return;\n  }\n\n  if (message.method === 'channels.system.pong') {\n    if (message.params.channel_id === channelId.get(channel) || // Skip channelId check if channelId is not known yet\n    channelId.get(channel) == null) {\n      ping(channel);\n    }\n\n    return;\n  }\n\n  messageQueue.get(channel).push(message);\n  dequeueMessage(channel);\n}\n\nexport function call(channel, method, params) {\n  return new Promise((resolve, reject) => {\n    const id = sequence.set(channel, sequence.get(channel) + 1).get(channel);\n    rpcCallbacks.get(channel).set(id, message => {\n      if (message.result) return resolve(message.result);\n\n      if (message.error) {\n        const [{\n          message: details\n        } = {}] = message.error.data || [];\n        return reject(new ChannelCallError(message.error.message + (details ? `: ${details}` : '')));\n      }\n    });\n    send(channel, {\n      jsonrpc: '2.0',\n      method,\n      id,\n      params\n    });\n  });\n}\nexport function disconnect(channel) {\n  websockets.get(channel).close();\n  clearTimeout(pingTimeoutId.get(channel));\n  clearTimeout(pongTimeoutId.get(channel));\n}\nexport async function initialize(channel, connectionHandler, openHandler, _ref) {\n  let {\n    url,\n    ...channelOptions\n  } = _ref;\n  options.set(channel, channelOptions);\n  fsm.set(channel, {\n    handler: connectionHandler\n  });\n  eventEmitters.set(channel, new EventEmitter());\n  sequence.set(channel, 0);\n  rpcCallbacks.set(channel, new Map());\n  messageQueue.set(channel, []);\n  const wsUrl = new URL(url);\n  Object.entries(channelOptions).filter(_ref2 => {\n    let [key] = _ref2;\n    return !['sign', 'debug'].includes(key);\n  }).forEach(_ref3 => {\n    let [key, value] = _ref3;\n    return wsUrl.searchParams.set(pascalToSnake(key), value);\n  });\n  wsUrl.searchParams.set('protocol', 'json-rpc');\n  changeStatus(channel, 'connecting');\n  const ws = new W3CWebSocket(wsUrl.toString());\n  await new Promise((resolve, reject) => Object.assign(ws, {\n    onerror: reject,\n    onopen: () => {\n      resolve();\n      changeStatus(channel, 'connected');\n\n      if (channelOptions.reconnectTx) {\n        enterState(channel, {\n          handler: openHandler\n        });\n        setTimeout(async () => changeState(channel, (await call(channel, 'channels.get.offchain_state', {})).signed_tx));\n      }\n\n      ping(channel);\n    },\n    onclose: () => {\n      changeStatus(channel, 'disconnected');\n      clearTimeout(pingTimeoutId.get(channel));\n      clearTimeout(pongTimeoutId.get(channel));\n    },\n    onmessage: _ref4 => {\n      let {\n        data\n      } = _ref4;\n      return onMessage(channel, data);\n    }\n  }));\n  websockets.set(channel, ws);\n}\n//# sourceMappingURL=internal.mjs.map","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport { generateKeyPair, encodeContractAddress } from \"../utils/crypto.mjs\";\nimport { options, changeStatus, changeState, call, send, emit, channelId, disconnect, fsmId } from \"./internal.mjs\";\nimport { unpackTx, buildTx } from \"../tx/builder/index.mjs\";\nimport { encode } from \"../tx/builder/helpers.mjs\";\nimport { IllegalArgumentError, InsufficientBalanceError, ChannelConnectionError, UnexpectedChannelMessageError } from \"../utils/errors.mjs\";\n\nasync function appendSignature(tx, signFn) {\n  const {\n    signatures,\n    encodedTx\n  } = unpackTx(tx).tx;\n  const result = await signFn(encode(encodedTx.rlpEncoded, 'tx'));\n\n  if (typeof result === 'string') {\n    const {\n      tx: signedTx,\n      txType\n    } = unpackTx(result);\n    return buildTx({\n      signatures: signatures.concat(signedTx.signatures),\n      encodedTx: signedTx.encodedTx.rlpEncoded\n    }, txType).tx;\n  }\n\n  return result;\n}\n\nfunction handleUnexpectedMessage(channel, message, state) {\n  if (state && state.reject) {\n    state.reject(Object.assign(new UnexpectedChannelMessageError(`Unexpected message received:\\n\\n${JSON.stringify(message)}`), {\n      wsMessage: message\n    }));\n  }\n\n  return {\n    handler: channelOpen\n  };\n}\n\nexport function awaitingConnection(channel, message, state) {\n  if (message.method === 'channels.info') {\n    if (['channel_accept', 'funding_created'].includes(message.params.data.event)) {\n      changeStatus(channel, {\n        channel_accept: 'accepted',\n        funding_created: 'halfSigned'\n      }[message.params.data.event]);\n      return {\n        handler: awaitingChannelCreateTx\n      };\n    }\n\n    if (message.params.data.event === 'channel_reestablished') {\n      return {\n        handler: awaitingOpenConfirmation\n      };\n    }\n\n    if (message.params.data.event === 'fsm_up') {\n      fsmId.set(channel, message.params.data.fsm_id);\n      return {\n        handler: awaitingConnection\n      };\n    }\n\n    return {\n      handler: awaitingConnection\n    };\n  }\n\n  if (message.method === 'channels.error') {\n    emit(channel, 'error', new ChannelConnectionError(message.payload.message));\n    return {\n      handler: channelClosed\n    };\n  }\n}\nexport async function awaitingReconnection(channel, message, state) {\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'fsm_up') {\n      fsmId.set(channel, message.params.data.fsm_id);\n      changeState(channel, (await call(channel, 'channels.get.offchain_state', {})).signed_tx);\n      return {\n        handler: channelOpen\n      };\n    }\n  }\n\n  return handleUnexpectedMessage(channel, message, state);\n}\nexport async function awaitingChannelCreateTx(channel, message, state) {\n  const tag = {\n    initiator: 'initiator_sign',\n    responder: 'responder_sign'\n  }[options.get(channel).role];\n\n  if (message.method === `channels.sign.${tag}`) {\n    if (message.params.data.tx) {\n      const signedTx = await options.get(channel).sign(tag, message.params.data.tx);\n      send(channel, {\n        jsonrpc: '2.0',\n        method: `channels.${tag}`,\n        params: {\n          tx: signedTx\n        }\n      });\n      return {\n        handler: awaitingOnChainTx\n      };\n    }\n\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => options.get(channel).sign(tag, tx));\n    send(channel, {\n      jsonrpc: '2.0',\n      method: `channels.${tag}`,\n      params: {\n        signed_tx: signedTx\n      }\n    });\n    return {\n      handler: awaitingOnChainTx\n    };\n  }\n}\nexport function awaitingOnChainTx(channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    if (message.params.data.info === 'funding_signed' && options.get(channel).role === 'initiator') {\n      return {\n        handler: awaitingBlockInclusion\n      };\n    }\n\n    if (message.params.data.info === 'funding_created' && options.get(channel).role === 'responder') {\n      return {\n        handler: awaitingBlockInclusion\n      };\n    }\n  }\n\n  if (message.method === 'channels.info' && message.params.data.event === 'funding_signed' && options.get(channel).role === 'initiator') {\n    channelId.set(channel, message.params.channel_id);\n    changeStatus(channel, 'signed');\n    return {\n      handler: awaitingOnChainTx\n    };\n  }\n}\nexport function awaitingBlockInclusion(channel, message, state) {\n  if (message.method === 'channels.info') {\n    const handler = {\n      funding_created: awaitingBlockInclusion,\n      own_funding_locked: awaitingBlockInclusion,\n      funding_locked: awaitingOpenConfirmation\n    }[message.params.data.event];\n\n    if (handler) {\n      return {\n        handler\n      };\n    }\n  }\n\n  if (message.method === 'channels.on_chain_tx') {\n    emit(channel, 'onChainTx', message.params.data.tx, {\n      info: message.params.data.info,\n      type: message.params.data.type\n    });\n    return {\n      handler: awaitingBlockInclusion\n    };\n  }\n}\nexport function awaitingOpenConfirmation(channel, message, state) {\n  if (message.method === 'channels.info' && message.params.data.event === 'open') {\n    channelId.set(channel, message.params.channel_id);\n    return {\n      handler: awaitingInitialState\n    };\n  }\n}\nexport function awaitingInitialState(channel, message, state) {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state);\n    return {\n      handler: channelOpen\n    };\n  }\n}\nexport async function channelOpen(channel, message, state) {\n  switch (message.method) {\n    case 'channels.info':\n      switch (message.params.data.event) {\n        case 'update':\n        case 'withdraw_created':\n        case 'deposit_created':\n          return {\n            handler: awaitingTxSignRequest\n          };\n\n        case 'own_withdraw_locked':\n        case 'withdraw_locked':\n        case 'own_deposit_locked':\n        case 'deposit_locked':\n        case 'peer_disconnected':\n        case 'channel_reestablished':\n        case 'open':\n          // TODO: Better handling of peer_disconnected event.\n          //\n          //       We should enter intermediate state where offchain transactions\n          //       are blocked until channel is reestablished.\n          emit(channel, message.params.data.event);\n          return {\n            handler: channelOpen\n          };\n\n        case 'fsm_up':\n          fsmId.set(channel, message.params.data.fsm_id);\n          return {\n            handler: channelOpen\n          };\n\n        case 'timeout':\n        case 'close_mutual':\n          return {\n            handler: channelOpen\n          };\n\n        case 'closing':\n          changeStatus(channel, 'closing');\n          return {\n            handler: channelOpen\n          };\n\n        case 'closed_confirmed':\n          changeStatus(channel, 'closed');\n          return {\n            handler: channelClosed\n          };\n\n        case 'died':\n          changeStatus(channel, 'died');\n          return {\n            handler: channelClosed\n          };\n\n        case 'shutdown':\n          return {\n            handler: channelOpen\n          };\n      }\n\n      break;\n\n    case 'channels.on_chain_tx':\n      emit(channel, 'onChainTx', message.params.data.tx, {\n        info: message.params.data.info,\n        type: message.params.data.type\n      });\n      return {\n        handler: channelOpen\n      };\n\n    case 'channels.leave':\n      // TODO: emit event\n      return {\n        handler: channelOpen\n      };\n\n    case 'channels.update':\n      changeState(channel, message.params.data.state);\n      return {\n        handler: channelOpen\n      };\n\n    case 'channels.sign.shutdown_sign_ack':\n      return awaitingTxSignRequest(channel, message, state);\n  }\n}\n\nchannelOpen.enter = channel => {\n  changeStatus(channel, 'open');\n};\n\nexport async function awaitingOffChainTx(channel, message, state) {\n  if (message.method === 'channels.sign.update') {\n    const {\n      sign\n    } = state;\n\n    if (message.params.data.tx) {\n      const signedTx = await sign(message.params.data.tx, {\n        updates: message.params.data.updates\n      });\n      send(channel, {\n        jsonrpc: '2.0',\n        method: 'channels.update',\n        params: {\n          tx: signedTx\n        }\n      });\n      return {\n        handler: awaitingOffChainUpdate,\n        state\n      };\n    }\n\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => sign(tx, {\n      updates: message.params.data.updates\n    }));\n\n    if (typeof signedTx === 'string') {\n      send(channel, {\n        jsonrpc: '2.0',\n        method: 'channels.update',\n        params: {\n          signed_tx: signedTx\n        }\n      });\n      return {\n        handler: awaitingOffChainUpdate,\n        state\n      };\n    }\n\n    if (typeof signedTx === 'number') {\n      send(channel, {\n        jsonrpc: '2.0',\n        method: 'channels.update',\n        params: {\n          error: signedTx\n        }\n      });\n      return {\n        handler: awaitingOffChainTx,\n        state\n      };\n    }\n  }\n\n  if (message.method === 'channels.error') {\n    state.reject(new ChannelConnectionError(message.data.message));\n    return {\n      handler: channelOpen\n    };\n  }\n\n  if (message.error) {\n    const {\n      data = []\n    } = message.error;\n\n    if (data.find(i => i.code === 1001)) {\n      state.reject(new InsufficientBalanceError('Insufficient balance'));\n    } else if (data.find(i => i.code === 1002)) {\n      state.reject(new IllegalArgumentError('Amount cannot be negative'));\n    } else {\n      state.reject(new ChannelConnectionError(message.error.message));\n    }\n\n    return {\n      handler: channelOpen\n    };\n  }\n\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg\n    });\n    return {\n      handler: channelOpen\n    };\n  }\n\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({\n        accepted: false\n      });\n      return {\n        handler: channelOpen\n      };\n    }\n  }\n\n  return handleUnexpectedMessage(channel, message, state);\n}\nexport function awaitingOffChainUpdate(channel, message, state) {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state);\n    state.resolve({\n      accepted: true,\n      signedTx: message.params.data.state\n    });\n    return {\n      handler: channelOpen\n    };\n  }\n\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg\n    });\n    return {\n      handler: channelOpen\n    };\n  }\n\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({\n        accepted: false\n      });\n      return {\n        handler: channelOpen\n      };\n    }\n  }\n\n  if (message.error) {\n    state.reject(new ChannelConnectionError(message.error.message));\n    return {\n      handler: channelOpen\n    };\n  }\n\n  return handleUnexpectedMessage(channel, message, state);\n}\nexport async function awaitingTxSignRequest(channel, message, state) {\n  const [, tag] = message.method.match(/^channels\\.sign\\.([^.]+)$/) || [];\n\n  if (tag) {\n    if (message.params.data.tx) {\n      const signedTx = await options.get(channel).sign(tag, message.params.data.tx, {\n        updates: message.params.data.updates\n      });\n\n      if (signedTx) {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: `channels.${tag}`,\n          params: {\n            tx: signedTx\n          }\n        });\n        return {\n          handler: channelOpen\n        };\n      }\n    } else {\n      const signedTx = await appendSignature(message.params.data.signed_tx, tx => options.get(channel).sign(tag, tx, {\n        updates: message.params.data.updates\n      }));\n\n      if (typeof signedTx === 'string') {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: `channels.${tag}`,\n          params: {\n            signed_tx: signedTx\n          }\n        });\n        return {\n          handler: channelOpen\n        };\n      }\n\n      if (typeof signedTx === 'number') {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: `channels.${tag}`,\n          params: {\n            error: signedTx\n          }\n        });\n        return {\n          handler: awaitingUpdateConflict,\n          state\n        };\n      }\n    } // soft-reject via competing update\n\n\n    send(channel, {\n      jsonrpc: '2.0',\n      method: 'channels.update.new',\n      params: {\n        from: generateKeyPair().publicKey,\n        to: generateKeyPair().publicKey,\n        amount: 1\n      }\n    });\n    return {\n      handler: awaitingUpdateConflict,\n      state\n    };\n  }\n\n  return handleUnexpectedMessage(channel, message, state);\n}\nexport function awaitingUpdateConflict(channel, message, state) {\n  if (message.error) {\n    return {\n      handler: awaitingUpdateConflict,\n      state\n    };\n  }\n\n  if (message.method === 'channels.conflict') {\n    return {\n      handler: channelOpen\n    };\n  }\n\n  return handleUnexpectedMessage(channel, message, state);\n}\nexport async function awaitingShutdownTx(channel, message, state) {\n  if (message.method === 'channels.sign.shutdown_sign') {\n    if (message.params.data.tx) {\n      const signedTx = await state.sign(message.params.data.tx);\n      send(channel, {\n        jsonrpc: '2.0',\n        method: 'channels.shutdown_sign',\n        params: {\n          tx: signedTx\n        }\n      });\n      return {\n        handler: awaitingShutdownOnChainTx,\n        state\n      };\n    }\n\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => state.sign(tx));\n    send(channel, {\n      jsonrpc: '2.0',\n      method: 'channels.shutdown_sign',\n      params: {\n        signed_tx: signedTx\n      }\n    });\n    return {\n      handler: awaitingShutdownOnChainTx,\n      state\n    };\n  }\n\n  return handleUnexpectedMessage(channel, message, state);\n}\nexport function awaitingShutdownOnChainTx(channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    // state.resolve(message.params.data.tx)\n    return {\n      handler: channelClosed,\n      state\n    };\n  }\n\n  return handleUnexpectedMessage(channel, message, state);\n}\nexport function awaitingLeave(channel, message, state) {\n  if (message.method === 'channels.leave') {\n    state.resolve({\n      channelId: message.params.channel_id,\n      signedTx: message.params.data.state\n    });\n    disconnect(channel);\n    return {\n      handler: channelClosed\n    };\n  }\n\n  if (message.method === 'channels.error') {\n    state.reject(new ChannelConnectionError(message.data.message));\n    return {\n      handler: channelOpen\n    };\n  }\n\n  return handleUnexpectedMessage(channel, message, state);\n}\nexport async function awaitingWithdrawTx(channel, message, state) {\n  if (message.method === 'channels.sign.withdraw_tx') {\n    const {\n      sign\n    } = state;\n\n    if (message.params.data.tx) {\n      const signedTx = await sign(message.params.data.tx, {\n        updates: message.params.data.updates\n      });\n      send(channel, {\n        jsonrpc: '2.0',\n        method: 'channels.withdraw_tx',\n        params: {\n          tx: signedTx\n        }\n      });\n      return {\n        handler: awaitingWithdrawCompletion,\n        state\n      };\n    }\n\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => sign(tx, {\n      updates: message.params.data.updates\n    }));\n\n    if (typeof signedTx === 'string') {\n      send(channel, {\n        jsonrpc: '2.0',\n        method: 'channels.withdraw_tx',\n        params: {\n          signed_tx: signedTx\n        }\n      });\n      return {\n        handler: awaitingWithdrawCompletion,\n        state\n      };\n    }\n\n    if (typeof signedTx === 'number') {\n      send(channel, {\n        jsonrpc: '2.0',\n        method: 'channels.withdraw_tx',\n        params: {\n          error: signedTx\n        }\n      });\n      return {\n        handler: awaitingWithdrawCompletion,\n        state\n      };\n    }\n  }\n\n  return handleUnexpectedMessage(channel, message, state);\n}\nexport function awaitingWithdrawCompletion(channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    if (state.onOnChainTx) {\n      state.onOnChainTx(message.params.data.tx);\n    }\n\n    return {\n      handler: awaitingWithdrawCompletion,\n      state\n    };\n  }\n\n  if (message.method === 'channels.info') {\n    if (['own_withdraw_locked', 'withdraw_locked'].includes(message.params.data.event)) {\n      const callback = {\n        own_withdraw_locked: state.onOwnWithdrawLocked,\n        withdraw_locked: state.onWithdrawLocked\n      }[message.params.data.event];\n\n      if (callback) {\n        callback();\n      }\n\n      return {\n        handler: awaitingWithdrawCompletion,\n        state\n      };\n    }\n  }\n\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state);\n    state.resolve({\n      accepted: true,\n      signedTx: message.params.data.state\n    });\n    return {\n      handler: channelOpen\n    };\n  }\n\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg\n    });\n    return {\n      handler: channelOpen\n    };\n  }\n\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({\n        accepted: false\n      });\n      return {\n        handler: channelOpen\n      };\n    }\n  }\n\n  return handleUnexpectedMessage(channel, message, state);\n}\nexport async function awaitingDepositTx(channel, message, state) {\n  if (message.method === 'channels.sign.deposit_tx') {\n    const {\n      sign\n    } = state;\n\n    if (message.params.data.tx) {\n      const signedTx = await sign(message.params.data.tx, {\n        updates: message.params.data.updates\n      });\n      send(channel, {\n        jsonrpc: '2.0',\n        method: 'channels.deposit_tx',\n        params: {\n          tx: signedTx\n        }\n      });\n      return {\n        handler: awaitingDepositCompletion,\n        state\n      };\n    }\n\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => sign(tx, {\n      updates: message.params.data.updates\n    }));\n\n    if (typeof signedTx === 'string') {\n      send(channel, {\n        jsonrpc: '2.0',\n        method: 'channels.deposit_tx',\n        params: {\n          signed_tx: signedTx\n        }\n      });\n      return {\n        handler: awaitingDepositCompletion,\n        state\n      };\n    }\n\n    if (typeof signedTx === 'number') {\n      send(channel, {\n        jsonrpc: '2.0',\n        method: 'channels.deposit_tx',\n        params: {\n          error: signedTx\n        }\n      });\n      return {\n        handler: awaitingDepositCompletion,\n        state\n      };\n    }\n  }\n\n  return handleUnexpectedMessage(channel, message, state);\n}\nexport function awaitingDepositCompletion(channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    if (state.onOnChainTx) {\n      state.onOnChainTx(message.params.data.tx);\n    }\n\n    return {\n      handler: awaitingDepositCompletion,\n      state\n    };\n  }\n\n  if (message.method === 'channels.info') {\n    if (['own_deposit_locked', 'deposit_locked'].includes(message.params.data.event)) {\n      const callback = {\n        own_deposit_locked: state.onOwnDepositLocked,\n        deposit_locked: state.onDepositLocked\n      }[message.params.data.event];\n\n      if (callback) {\n        callback();\n      }\n\n      return {\n        handler: awaitingDepositCompletion,\n        state\n      };\n    }\n  }\n\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state);\n    state.resolve({\n      accepted: true,\n      signedTx: message.params.data.state\n    });\n    return {\n      handler: channelOpen\n    };\n  }\n\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg\n    });\n    return {\n      handler: channelOpen\n    };\n  }\n\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({\n        accepted: false\n      });\n      return {\n        handler: channelOpen\n      };\n    }\n  }\n\n  return handleUnexpectedMessage(channel, message, state);\n}\nexport async function awaitingNewContractTx(channel, message, state) {\n  if (message.method === 'channels.sign.update') {\n    if (message.params.data.tx) {\n      const signedTx = await state.sign(message.params.data.tx);\n      send(channel, {\n        jsonrpc: '2.0',\n        method: 'channels.update',\n        params: {\n          tx: signedTx\n        }\n      });\n      return {\n        handler: awaitingNewContractCompletion,\n        state\n      };\n    }\n\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => state.sign(tx));\n\n    if (typeof signedTx === 'string') {\n      send(channel, {\n        jsonrpc: '2.0',\n        method: 'channels.update',\n        params: {\n          signed_tx: signedTx\n        }\n      });\n      return {\n        handler: awaitingNewContractCompletion,\n        state\n      };\n    }\n\n    if (typeof signedTx === 'number') {\n      send(channel, {\n        jsonrpc: '2.0',\n        method: 'channels.update',\n        params: {\n          error: signedTx\n        }\n      });\n      return {\n        handler: awaitingNewContractCompletion,\n        state\n      };\n    }\n  }\n\n  return handleUnexpectedMessage(channel, message, state);\n}\nexport function awaitingNewContractCompletion(channel, message, state) {\n  if (message.method === 'channels.update') {\n    const {\n      round\n    } = unpackTx(message.params.data.state).tx.encodedTx.tx;\n    const owner = options.get(channel)[{\n      initiator: 'initiatorId',\n      responder: 'responderId'\n    }[options.get(channel).role]];\n    changeState(channel, message.params.data.state);\n    state.resolve({\n      accepted: true,\n      address: encodeContractAddress(owner, round),\n      signedTx: message.params.data.state\n    });\n    return {\n      handler: channelOpen\n    };\n  }\n\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg\n    });\n    return {\n      handler: channelOpen\n    };\n  }\n\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({\n        accepted: false\n      });\n      return {\n        handler: channelOpen\n      };\n    }\n  }\n\n  return handleUnexpectedMessage(channel, message, state);\n}\nexport async function awaitingCallContractUpdateTx(channel, message, state) {\n  if (message.method === 'channels.sign.update') {\n    if (message.params.data.tx) {\n      const signedTx = await state.sign(message.params.data.tx, {\n        updates: message.params.data.updates\n      });\n      send(channel, {\n        jsonrpc: '2.0',\n        method: 'channels.update',\n        params: {\n          tx: signedTx\n        }\n      });\n      return {\n        handler: awaitingCallContractCompletion,\n        state\n      };\n    }\n\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => state.sign(tx, {\n      updates: message.params.data.updates\n    }));\n\n    if (typeof signedTx === 'string') {\n      send(channel, {\n        jsonrpc: '2.0',\n        method: 'channels.update',\n        params: {\n          signed_tx: signedTx\n        }\n      });\n      return {\n        handler: awaitingCallContractCompletion,\n        state\n      };\n    }\n\n    if (typeof signedTx === 'number') {\n      send(channel, {\n        jsonrpc: '2.0',\n        method: 'channels.update',\n        params: {\n          error: signedTx\n        }\n      });\n      return {\n        handler: awaitingCallContractCompletion,\n        state\n      };\n    }\n  }\n\n  return handleUnexpectedMessage(channel, message, state);\n}\nexport async function awaitingCallContractForceProgressUpdate(channel, message, state) {\n  if (message.method === 'channels.sign.force_progress_tx') {\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => state.sign(tx, {\n      updates: message.params.data.updates\n    }));\n    send(channel, {\n      jsonrpc: '2.0',\n      method: 'channels.force_progress_sign',\n      params: {\n        signed_tx: signedTx\n      }\n    });\n    return {\n      handler: awaitingForceProgressCompletion,\n      state\n    };\n  }\n\n  return handleUnexpectedMessage(channel, message, state);\n}\nexport function awaitingForceProgressCompletion(channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    if (state.onOnChainTx) {\n      state.onOnChainTx(message.params.data);\n    }\n\n    emit(channel, 'onChainTx', message.params.data.tx, {\n      info: message.params.data.info,\n      type: message.params.data.type\n    });\n    state.resolve({\n      accepted: true,\n      tx: message.params.data.tx\n    });\n  }\n\n  return handleUnexpectedMessage(channel, message, state);\n}\nexport function awaitingCallContractCompletion(channel, message, state) {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state);\n    state.resolve({\n      accepted: true,\n      signedTx: message.params.data.state\n    });\n    return {\n      handler: channelOpen\n    };\n  }\n\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg\n    });\n    return {\n      handler: channelOpen\n    };\n  }\n\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({\n        accepted: false\n      });\n      return {\n        handler: channelOpen\n      };\n    }\n  }\n\n  return handleUnexpectedMessage(channel, message, state);\n}\nexport function awaitingCallsPruned(channels, message, state) {\n  if (message.method === 'channels.calls_pruned.reply') {\n    state.resolve();\n    return {\n      handler: channelOpen\n    };\n  }\n\n  state.reject(new UnexpectedChannelMessageError('Unexpected message received'));\n  return {\n    handler: channelClosed\n  };\n}\nexport function channelClosed(channel, message, state) {\n  if (!state) return {\n    handler: channelClosed\n  };\n  if (message.params.data.event === 'closing') return {\n    handler: channelClosed,\n    state\n  };\n\n  if (message.params.data.info === 'channel_closed') {\n    state.closeTx = message.params.data.tx;\n    return {\n      handler: channelClosed,\n      state\n    };\n  }\n\n  if (message.params.data.event === 'closed_confirmed') {\n    state.resolve(state.closeTx);\n    return {\n      handler: channelClosed\n    };\n  }\n\n  return {\n    handler: channelClosed,\n    state\n  };\n}\n//# sourceMappingURL=handlers.mjs.map","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Channel module\n * @module @aeternity/aepp-sdk/es/channel/index\n * @export Channel\n * @example import { Channel } from '@aeternity/aepp-sdk'\n */\nimport AsyncInit from \"../utils/async-init.mjs\";\nimport { snakeToPascal } from \"../utils/string.mjs\";\nimport { buildTx, unpackTx } from \"../tx/builder/index.mjs\";\nimport { TX_TYPE } from \"../tx/builder/schema.mjs\";\nimport * as handlers from \"./handlers.mjs\";\nimport { eventEmitters, status as channelStatus, state as channelState, initialize, enqueueAction, send, channelId, call, disconnect as channelDisconnect, fsmId as channelFsmId } from \"./internal.mjs\";\n\nfunction snakeToPascalObjKeys(obj) {\n  return Object.entries(obj).reduce((result, _ref) => {\n    let [key, val] = _ref;\n    return { ...result,\n      [snakeToPascal(key)]: val\n    };\n  }, {});\n}\n/**\n * Register event listener function\n *\n * Possible events:\n *\n *   - \"error\"\n *   - \"onChainTx\"\n *   - \"ownWithdrawLocked\"\n *   - \"withdrawLocked\"\n *   - \"ownDepositLocked\"\n *   - \"depositLocked\"\n *\n * @param {String} event - Event name\n * @param {Function} callback - Callback function\n */\n\n\nfunction on(event, callback) {\n  eventEmitters.get(this).on(event, callback);\n}\n/**\n * Remove event listener function\n *\n * @param {String} event - Event name\n * @param {Function} callback - Callback function\n */\n\n\nfunction off(event, callback) {\n  eventEmitters.get(this).removeListener(event, callback);\n}\n/**\n * Close the connection\n */\n\n\nfunction disconnect() {\n  return channelDisconnect(this);\n}\n/**\n * Get current status\n *\n * @return {String}\n */\n\n\nfunction status() {\n  return channelStatus.get(this);\n}\n/**\n * Get current state\n *\n * @return {Promise<Object>}\n */\n\n\nasync function state() {\n  return snakeToPascalObjKeys(await call(this, 'channels.get.offchain_state', {}));\n}\n/**\n * Get current round\n *\n * If round cannot be determined (for example when channel has not been opened)\n * it will return `null`.\n *\n * @return {Number}\n */\n\n\nfunction round() {\n  const state = channelState.get(this);\n\n  if (!state) {\n    return null;\n  }\n\n  const {\n    txType,\n    tx\n  } = unpackTx(channelState.get(this)).tx.encodedTx;\n\n  switch (txType) {\n    case TX_TYPE.channelCreate:\n      return 1;\n\n    case TX_TYPE.channelOffChain:\n    case TX_TYPE.channelWithdraw:\n    case TX_TYPE.channelDeposit:\n      return parseInt(tx.round, 10);\n\n    default:\n      return null;\n  }\n}\n/**\n * Get channel id\n *\n * @return {String}\n */\n\n\nfunction id() {\n  return channelId.get(this);\n}\n/**\n * Get channel's fsm id\n *\n * @return {String}\n */\n\n\nfunction fsmId() {\n  return channelFsmId.get(this);\n}\n/**\n * Trigger a transfer update\n *\n * The transfer update is moving tokens from one channel account to another.\n * The update is a change to be applied on top of the latest state.\n *\n * Sender and receiver are the channel parties. Both the initiator and responder\n * can take those roles. Any public key outside of the channel is considered invalid.\n *\n * @param {String} from - Sender's public address\n * @param {String} to - Receiver's public address\n * @param {Number} amount - Transaction amount\n * @param {Function} sign - Function which verifies and signs offchain transaction\n * @param {Array<String>} metadata\n * @return {Promise<Object>}\n * @example channel.update(\n *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n *   10,\n *   async (tx) => await account.signTransaction(tx)\n * ).then(({ accepted, signedTx }) =>\n *   if (accepted) {\n *     console.log('Update has been accepted')\n *   }\n * )\n */\n\n\nfunction update(from, to, amount, sign, metadata) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(this, (channel, state) => state.handler === handlers.channelOpen, (channel, state) => {\n      send(channel, {\n        jsonrpc: '2.0',\n        method: 'channels.update.new',\n        params: {\n          from,\n          to,\n          amount,\n          meta: metadata\n        }\n      });\n      return {\n        handler: handlers.awaitingOffChainTx,\n        state: {\n          resolve,\n          reject,\n          sign\n        }\n      };\n    });\n  });\n}\n/**\n * Get proof of inclusion\n *\n * If a certain address of an account or a contract is not found\n * in the state tree - the response is an error.\n *\n * @param {Object} addresses\n * @param {Array<String>} [addresses.accounts] - List of account addresses to include in poi\n * @param {Array<String>} [addresses.contracts] - List of contract addresses to include in poi\n * @return {Promise<String>}\n * @example channel.poi({\n *   accounts: [\n *     'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *     'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n *   ],\n *   contracts: ['ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA']\n * }).then(poi => console.log(poi))\n */\n\n\nasync function poi(_ref2) {\n  let {\n    accounts,\n    contracts\n  } = _ref2;\n  return (await call(this, 'channels.get.poi', {\n    accounts,\n    contracts\n  })).poi;\n}\n/**\n * Get balances\n *\n * The accounts paramcontains a list of addresses to fetch balances of.\n * Those can be either account balances or a contract ones, encoded as an account addresses.\n *\n * If a certain account address had not being found in the state tree - it is simply\n * skipped in the response.\n *\n * @param {Array<String>} accounts - List of addresses to fetch balances from\n * @return {Promise<Object>}\n * @example channel.balances([\n *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n *   'ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA'\n * ]).then(balances =>\n *   console.log(balances['ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'])\n * )\n */\n\n\nasync function balances(accounts) {\n  return Object.fromEntries((await call(this, 'channels.get.balances', {\n    accounts\n  })).map(item => [item.account, item.balance]));\n}\n/**\n * Leave channel\n *\n * It is possible to leave a channel and then later reestablish the channel\n * off-chain state and continue operation. When a leave method is called,\n * the channel fsm passes it on to the peer fsm, reports the current mutually\n * signed state and then terminates.\n *\n * The channel can be reestablished by instantiating another Channel instance\n * with two extra params: existingChannelId and offchainTx (returned from leave\n * method as channelId and signedTx respectively).\n *\n * @return {Promise<Object>}\n * @example channel.leave().then(({ channelId, signedTx }) => {\n *   console.log(channelId)\n *   console.log(signedTx)\n * })\n */\n\n\nfunction leave() {\n  return new Promise((resolve, reject) => {\n    enqueueAction(this, (channel, state) => state.handler === handlers.channelOpen, (channel, state) => {\n      send(channel, {\n        jsonrpc: '2.0',\n        method: 'channels.leave',\n        params: {}\n      });\n      return {\n        handler: handlers.awaitingLeave,\n        state: {\n          resolve,\n          reject\n        }\n      };\n    });\n  });\n}\n/**\n * Trigger mutual close\n *\n * At any moment after the channel is opened, a closing procedure can be triggered.\n * This can be done by either of the parties. The process is similar to the off-chain updates.\n *\n * @param {Function} sign - Function which verifies and signs mutual close transaction\n * @return {Promise<String>}\n * @example channel.shutdown(\n *   async (tx) => await account.signTransaction(tx)\n * ).then(tx => console.log('on_chain_tx', tx))\n */\n\n\nfunction shutdown(sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(this, (channel, state) => state.handler === handlers.channelOpen, (channel, state) => {\n      send(channel, {\n        jsonrpc: '2.0',\n        method: 'channels.shutdown',\n        params: {}\n      });\n      return {\n        handler: handlers.awaitingShutdownTx,\n        state: {\n          sign,\n          resolve,\n          reject\n        }\n      };\n    });\n  });\n}\n/**\n * Withdraw tokens from the channel\n *\n * After the channel had been opened any of the participants can initiate a withdrawal.\n * The process closely resembles the update. The most notable difference is that the\n * transaction has been co-signed: it is channel_withdraw_tx and after the procedure\n * is finished - it is being posted on-chain.\n *\n * Any of the participants can initiate a withdrawal. The only requirements are:\n *\n *   - Channel is already opened\n *   - No off-chain update/deposit/withdrawal is currently being performed\n *   - Channel is not being closed or in a solo closing state\n *   - The withdrawal amount must be equal to or greater than zero, and cannot exceed\n *     the available balance on the channel (minus the channel_reserve)\n *\n * After the other party had signed the withdraw transaction, the transaction is posted\n * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n * After computing transaction hash it can be tracked on the chain: entering the mempool,\n * block inclusion and a number of confirmations.\n *\n * After the minimum_depth block confirmations onOwnWithdrawLocked callback is called\n * (without any arguments).\n *\n * When the other party had confirmed that the block height needed is reached\n * onWithdrawLocked callback is called (without any arguments).\n *\n * @param {Number} amount - Amount of tokens to withdraw\n * @param {Function} sign - Function which verifies and signs withdraw transaction\n * @param {Object} [callbacks]\n * @param {Function} [callbacks.onOnChainTx] - Called when withdraw transaction has been posted\n * on chain\n * @param {Function} [callbacks.onOwnWithdrawLocked]\n * @param {Function} [callbacks.onWithdrawLocked]\n * @return {Promise<Object>}\n * @example channel.withdraw(\n *   100,\n *   async (tx) => await account.signTransaction(tx),\n *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n * ).then(({ accepted, signedTx }) => {\n *   if (accepted) {\n *     console.log('Withdrawal has been accepted')\n *   } else {\n *     console.log('Withdrawal has been rejected')\n *   }\n * })\n */\n\n\nfunction withdraw(amount, sign) {\n  let {\n    onOnChainTx,\n    onOwnWithdrawLocked,\n    onWithdrawLocked\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return new Promise((resolve, reject) => {\n    enqueueAction(this, (channel, state) => state.handler === handlers.channelOpen, (channel, state) => {\n      send(channel, {\n        jsonrpc: '2.0',\n        method: 'channels.withdraw',\n        params: {\n          amount\n        }\n      });\n      return {\n        handler: handlers.awaitingWithdrawTx,\n        state: {\n          sign,\n          resolve,\n          reject,\n          onOnChainTx,\n          onOwnWithdrawLocked,\n          onWithdrawLocked\n        }\n      };\n    });\n  });\n}\n/**\n * Deposit tokens into the channel\n *\n * After the channel had been opened any of the participants can initiate a deposit.\n * The process closely resembles the update. The most notable difference is that the\n * transaction has been co-signed: it is channel_deposit_tx and after the procedure\n * is finished - it is being posted on-chain.\n *\n * Any of the participants can initiate a deposit. The only requirements are:\n *\n *   - Channel is already opened\n *   - No off-chain update/deposit/withdrawal is currently being performed\n *   - Channel is not being closed or in a solo closing state\n *   - The deposit amount must be equal to or greater than zero, and cannot exceed\n *     the available balance on the channel (minus the channel_reserve)\n *\n * After the other party had signed the deposit transaction, the transaction is posted\n * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n * After computing transaction hash it can be tracked on the chain: entering the mempool,\n * block inclusion and a number of confirmations.\n *\n * After the minimum_depth block confirmations onOwnDepositLocked callback is called\n * (without any arguments).\n *\n * When the other party had confirmed that the block height needed is reached\n * onDepositLocked callback is called (without any arguments).\n *\n * @param {Number} amount - Amount of tokens to deposit\n * @param {Function} sign - Function which verifies and signs deposit transaction\n * @param {Object} [callbacks]\n * @param {Function} [callbacks.onOnChainTx] - Called when deposit transaction has been posted\n * on chain\n * @param {Function} [callbacks.onOwnDepositLocked]\n * @param {Function} [callbacks.onDepositLocked]\n * @return {Promise<Object>}\n * @example channel.deposit(\n *   100,\n *   async (tx) => await account.signTransaction(tx),\n *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n * ).then(({ accepted, state }) => {\n *   if (accepted) {\n *     console.log('Deposit has been accepted')\n *     console.log('The new state is:', state)\n *   } else {\n *     console.log('Deposit has been rejected')\n *   }\n * })\n */\n\n\nfunction deposit(amount, sign) {\n  let {\n    onOnChainTx,\n    onOwnDepositLocked,\n    onDepositLocked\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return new Promise((resolve, reject) => {\n    enqueueAction(this, (channel, state) => state.handler === handlers.channelOpen, (channel, state) => {\n      send(channel, {\n        jsonrpc: '2.0',\n        method: 'channels.deposit',\n        params: {\n          amount\n        }\n      });\n      return {\n        handler: handlers.awaitingDepositTx,\n        state: {\n          sign,\n          resolve,\n          reject,\n          onOnChainTx,\n          onOwnDepositLocked,\n          onDepositLocked\n        }\n      };\n    });\n  });\n}\n/**\n * Trigger create contract update\n *\n * The create contract update is creating a contract inside the channel's internal state tree.\n * The update is a change to be applied on top of the latest state.\n *\n * That would create a contract with the poster being the owner of it. Poster commits initially\n * a deposit amount of tokens to the new contract.\n *\n * @param {Object} options\n * @param {String} options.code - Api encoded compiled AEVM byte code\n * @param {String} options.callData - Api encoded compiled AEVM call data for the code\n * @param {Number} options.deposit - Initial amount the owner of the contract commits to it\n * @param {Number} options.vmVersion - Version of the Virtual Machine\n * @param {Number} options.abiVersion - Version of the Application Binary Interface\n * @param {Function} sign - Function which verifies and signs create contract transaction\n * @return {Promise<Object>}\n * @example channel.createContract({\n *   code: 'cb_HKtpipK4aCgYb17wZ...',\n *   callData: 'cb_1111111111111111...',\n *   deposit: 10,\n *   vmVersion: 3,\n *   abiVersion: 1\n * }).then(({ accepted, signedTx, address }) => {\n *   if (accepted) {\n *     console.log('New contract has been created')\n *     console.log('Contract address:', address)\n *   } else {\n *     console.log('New contract has been rejected')\n *   }\n * })\n */\n\n\nfunction createContract(_ref3, sign) {\n  let {\n    code,\n    callData,\n    deposit,\n    vmVersion,\n    abiVersion\n  } = _ref3;\n  return new Promise((resolve, reject) => {\n    enqueueAction(this, (channel, state) => state.handler === handlers.channelOpen, (channel, state) => {\n      send(channel, {\n        jsonrpc: '2.0',\n        method: 'channels.update.new_contract',\n        params: {\n          code,\n          call_data: callData,\n          deposit,\n          vm_version: vmVersion,\n          abi_version: abiVersion\n        }\n      });\n      return {\n        handler: handlers.awaitingNewContractTx,\n        state: {\n          sign,\n          resolve,\n          reject\n        }\n      };\n    });\n  });\n}\n/**\n * Trigger call a contract update\n *\n * The call contract update is calling a preexisting contract inside the channel's\n * internal state tree. The update is a change to be applied on top of the latest state.\n *\n * That would call a contract with the poster being the caller of it. Poster commits\n * an amount of tokens to the contract.\n *\n * The call would also create a call object inside the channel state tree. It contains\n * the result of the contract call.\n *\n * It is worth mentioning that the gas is not consumed, because this is an off-chain\n * contract call. It would be consumed if it were a on-chain one. This could happen\n * if a call with a similar computation amount is to be forced on-chain.\n *\n * @param {Object} options\n * @param {String} [options.amount] - Amount the caller of the contract commits to it\n * @param {String} [options.callData] - ABI encoded compiled AEVM call data for the code\n * @param {Number} [options.contract] - Address of the contract to call\n * @param {Number} [options.abiVersion] - Version of the ABI\n * @param {Function} sign - Function which verifies and signs contract call transaction\n * @return {Promise<Object>}\n * @example channel.callContract({\n *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n *   callData: 'cb_1111111111111111...',\n *   amount: 0,\n *   abiVersion: 1\n * }).then(({ accepted, signedTx }) => {\n *   if (accepted) {\n *     console.log('Contract called succesfully')\n *   } else {\n *     console.log('Contract call has been rejected')\n *   }\n * })\n */\n\n\nfunction callContract(_ref4, sign) {\n  let {\n    amount,\n    callData,\n    contract,\n    abiVersion\n  } = _ref4;\n  return new Promise((resolve, reject) => {\n    enqueueAction(this, (channel, state) => state.handler === handlers.channelOpen, (channel, state) => {\n      send(channel, {\n        jsonrpc: '2.0',\n        method: 'channels.update.call_contract',\n        params: {\n          amount,\n          call_data: callData,\n          contract_id: contract,\n          abi_version: abiVersion\n        }\n      });\n      return {\n        handler: handlers.awaitingCallContractUpdateTx,\n        state: {\n          resolve,\n          reject,\n          sign\n        }\n      };\n    });\n  });\n}\n/**\n * Trigger a force progress contract call\n * This call is going on-chain\n * @param {Object} options\n * @param {String} [options.amount] - Amount the caller of the contract commits to it\n * @param {String} [options.callData] - ABI encoded compiled AEVM call data for the code\n * @param {Number} [options.contract] - Address of the contract to call\n * @param {Number} [options.abiVersion] - Version of the ABI\n * @param {Number} [options.gasPrice=1000000000] - Gas price\n * @param {Number} [options.gas=1000000] - Gas limit\n * @param {Function} sign - Function which verifies and signs contract force progress transaction\n * @param {{ onOnChainTxL: Function }} callbacks\n * @return {Promise<Object>}\n * @example channel.forceProgress({\n *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n *   callData: 'cb_1111111111111111...',\n *   amount: 0,\n *   abiVersion: 1,\n *   gasPrice: 1000005554\n * }).then(({ accepted, signedTx }) => {\n *   if (accepted) {\n *     console.log('Contract force progress call successful')\n *   } else {\n *     console.log('Contract force progress call has been rejected')\n *   }\n * })\n */\n\n\nfunction forceProgress(_ref5, sign) {\n  let {\n    amount,\n    callData,\n    contract,\n    abiVersion,\n    gas = 1000000,\n    gasPrice = 1000000000,\n    nonce\n  } = _ref5;\n  let {\n    onOnChainTx\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return new Promise((resolve, reject) => {\n    enqueueAction(this, (channel, state) => state.handler === handlers.channelOpen, (channel, state) => {\n      send(channel, {\n        jsonrpc: '2.0',\n        method: 'channels.force_progress',\n        params: {\n          amount,\n          call_data: callData,\n          contract_id: contract,\n          abi_version: abiVersion,\n          gas_price: gasPrice,\n          gas\n        }\n      });\n      return {\n        handler: handlers.awaitingCallContractForceProgressUpdate,\n        state: {\n          resolve,\n          reject,\n          sign,\n          onOnChainTx\n        }\n      };\n    });\n  });\n}\n/**\n * Call contract using dry-run\n *\n * In order to get the result of a potential contract call, one might need to\n * dry-run a contract call. It takes the exact same arguments as a call would\n * and returns the call object.\n *\n * The call is executed in the channel's state but it does not impact the state\n * whatsoever. It uses as an environment the latest channel's state and the current\n * top of the blockchain as seen by the node.\n *\n * @param {Object} options\n * @param {String} [options.amount] - Amount the caller of the contract commits to it\n * @param {String} [options.callData] - ABI encoded compiled AEVM call data for the code\n * @param {Number} [options.contract] - Address of the contract to call\n * @param {Number} [options.abiVersion] - Version of the ABI\n * @return {Promise<Object>}\n * @example channel.callContractStatic({\n  *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n  *   callData: 'cb_1111111111111111...',\n  *   amount: 0,\n  *   abiVersion: 1\n  * }).then(({ returnValue, gasUsed }) => {\n  *   console.log('Returned value:', returnValue)\n  *   console.log('Gas used:', gasUsed)\n  * })\n  */\n\n\nasync function callContractStatic(_ref6) {\n  let {\n    amount,\n    callData,\n    contract,\n    abiVersion\n  } = _ref6;\n  return snakeToPascalObjKeys(await call(this, 'channels.dry_run.call_contract', {\n    amount,\n    call_data: callData,\n    contract_id: contract,\n    abi_version: abiVersion\n  }));\n}\n/**\n * Get contract call result\n *\n * The combination of a caller, contract and a round of execution determines the\n * contract call. Providing an incorrect set of those results in an error response.\n *\n * @param {Object} options\n * @param {String} [options.caller] - Address of contract caller\n * @param {String} [options.contract] - Address of the contract\n * @param {Number} [options.round] - Round when contract was called\n * @return {Promise<Object>}\n * @example channel.getContractCall({\n *   caller: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n *   round: 3\n * }).then(({ returnType, returnValue }) => {\n *   if (returnType === 'ok') console.log(returnValue)\n * })\n */\n\n\nasync function getContractCall(_ref7) {\n  let {\n    caller,\n    contract,\n    round\n  } = _ref7;\n  return snakeToPascalObjKeys(await call(this, 'channels.get.contract_call', {\n    caller_id: caller,\n    contract_id: contract,\n    round\n  }));\n}\n/**\n * Get contract latest state\n *\n * @param {String} contract - Address of the contract\n * @return {Promise<Object>}\n * @example channel.getContractState(\n *   'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa'\n * ).then(({ contract }) => {\n *   console.log('deposit:', contract.deposit)\n * })\n */\n\n\nasync function getContractState(contract) {\n  const result = await call(this, 'channels.get.contract', {\n    pubkey: contract\n  });\n  return snakeToPascalObjKeys({ ...result,\n    contract: snakeToPascalObjKeys(result.contract)\n  });\n}\n/**\n * Clean up all locally stored contract calls\n *\n * Contract calls are kept locally in order for the participant to be able to look them up.\n * They consume memory and in order for the participant to free it - one can prune all messages.\n * This cleans up all locally stored contract calls and those will no longer be available for\n * fetching and inspection.\n *\n * @return {Promise}\n */\n\n\nfunction cleanContractCalls() {\n  return new Promise((resolve, reject) => {\n    enqueueAction(this, (channel, state) => state.handler === handlers.channelOpen, (channel, state) => {\n      send(channel, {\n        jsonrpc: '2.0',\n        method: 'channels.clean_contract_calls',\n        params: {}\n      });\n      return {\n        handler: handlers.awaitingCallsPruned,\n        state: {\n          resolve,\n          reject\n        }\n      };\n    });\n  });\n}\n/**\n * Send generic message\n *\n * If message is an object it will be serialized into JSON string\n * before sending.\n *\n * If there is ongoing update that has not yet been finished the message\n * will be sent after that update is finalized.\n *\n * @param {String|Object} message\n * @param {String} recipient - Address of the recipient\n * @example channel.sendMessage(\n *   'hello world',\n *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'\n * )\n */\n\n\nfunction sendMessage(message, recipient) {\n  let info = message;\n\n  if (typeof message === 'object') {\n    info = JSON.stringify(message);\n  }\n\n  const doSend = channel => send(channel, {\n    jsonrpc: '2.0',\n    method: 'channels.message',\n    params: {\n      info,\n      to: recipient\n    }\n  });\n\n  if (this.status() === 'connecting') {\n    const onStatusChanged = status => {\n      if (status !== 'connecting') {\n        // For some reason we can't immediately send a message when connection is\n        // established. Thus we wait 500ms which seems to work.\n        setTimeout(() => doSend(this), 500);\n        this.off('statusChanged', onStatusChanged);\n      }\n    };\n\n    this.on('statusChanged', onStatusChanged);\n  } else {\n    doSend(this);\n  }\n}\n\nasync function reconnect(options, txParams) {\n  const {\n    sign\n  } = options;\n  return Channel({ ...options,\n    reconnectTx: await sign('reconnect', buildTx(txParams, TX_TYPE.channelReconnect).tx)\n  });\n}\n/**\n * Channel\n *\n * @function\n * @alias module:@aeternity/aepp-sdk/es/channel/index\n * @rtype Channel\n * @param {Object} options - Channel params\n * @param {String} options.url - Channel url (for example: \"ws://localhost:3001\")\n * @param {String} options.role - Participant role (\"initiator\" or \"responder\")\n * @param {String} options.initiatorId - Initiator's public key\n * @param {String} options.responderId - Responder's public key\n * @param {Number} options.pushAmount - Initial deposit in favour of the responder by the initiator\n * @param {Number} options.initiatorAmount - Amount of tokens the initiator has committed to\n * the channel\n * @param {Number} options.responderAmount - Amount of tokens the responder has committed to\n * the channel\n * @param {Number} options.channelReserve - The minimum amount both peers need to maintain\n * @param {Number} [options.ttl] - Minimum block height to include the channel_create_tx\n * @param {String} options.host - Host of the responder's node\n * @param {Number} options.port - The port of the responders node\n * @param {Number} options.lockPeriod - Amount of blocks for disputing a solo close\n * @param {Number} [options.existingChannelId] - Existing channel id (required if reestablishing a\n * channel)\n * @param {Number} [options.offchainTx] - Offchain transaction (required if reestablishing\n * a channel)\n * @param {Number} [options.timeoutIdle] - The time waiting for a new event to be initiated\n * (default: 600000)\n * @param {Number} [options.timeoutFundingCreate] - The time waiting for the initiator to produce\n * the create channel transaction after the noise session had been established (default: 120000)\n * @param {Number} [options.timeoutFundingSign] - The time frame the other client has to sign an\n * off-chain update after our client had initiated and signed it. This applies only for double\n * signed on-chain intended updates: channel create transaction, deposit, withdrawal and etc.\n * (default: 120000)\n * @param {Number} [options.timeoutFundingLock] - The time frame the other client has to confirm an\n * on-chain transaction reaching maturity (passing minimum depth) after the local node has detected\n * this. This applies only for double signed on-chain intended updates: channel create transaction,\n * deposit, withdrawal and etc. (default: 360000)\n * @param {Number} [options.timeoutSign] - The time frame the client has to return a signed\n * off-chain update or to decline it. This applies for all off-chain updates (default: 500000)\n * @param {Number} [options.timeoutAccept] - The time frame the other client has to react to an\n * event. This applies for all off-chain updates that are not meant to land on-chain, as well as\n * some special cases: opening a noise connection, mutual closing acknowledgement and\n * reestablishing an existing channel (default: 120000)\n * @param {Number} [options.timeoutInitialized] - the time frame the responder has to accept an\n * incoming noise session. Applicable only for initiator (default: timeout_accept's value)\n * @param {Number} [options.timeoutAwaitingOpen] - The time frame the initiator has to start an\n * outgoing noise session to the responder's node. Applicable only for responder (default:\n * timeout_idle's value)\n * @param {Number} [options.debug=false] - Log websocket communication\n * @param {Function} options.sign - Function which verifies and signs transactions\n * @return {Promise<Object>} Channel instance\n * @example Channel({\n *   url: 'ws://localhost:3001',\n *   role: 'initiator'\n *   initiatorId: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   responderId: 'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n *   initiatorAmount: 1e18,\n *   responderAmount: 1e18,\n *   pushAmount: 0,\n *   channelReserve: 0,\n *   ttl: 1000,\n *   host: 'localhost',\n *   port: 3002,\n *   lockPeriod: 10,\n *   async sign (tag, tx) => await account.signTransaction(tx)\n * })\n */\n\n\nconst Channel = AsyncInit.compose({\n  async init(options) {\n    await initialize(this, options.existingFsmId ? handlers.awaitingReconnection : handlers.awaitingConnection, handlers.channelOpen, options);\n  },\n\n  methods: {\n    on,\n    off,\n    status,\n    state,\n    round,\n    id,\n    fsmId,\n    update,\n    poi,\n    balances,\n    leave,\n    shutdown,\n    sendMessage,\n    withdraw,\n    deposit,\n    createContract,\n    callContract,\n    callContractStatic,\n    getContractCall,\n    getContractState,\n    disconnect,\n    cleanContractCalls,\n    forceProgress\n  },\n  statics: {\n    reconnect\n  }\n});\nexport default Channel;\n//# sourceMappingURL=index.mjs.map","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Universal module\n * @module @aeternity/aepp-sdk/es/ae/universal\n * @export Universal\n * @example import { Universal } from '@aeternity/aepp-sdk'\n */\nimport Ae from \"./index.mjs\";\nimport Chain from \"../chain/node.mjs\";\nimport Aens from \"./aens.mjs\";\nimport Transaction from \"../tx/tx.mjs\";\nimport Oracle from \"./oracle.mjs\";\nimport GeneralizedAccount from \"../contract/ga/index.mjs\";\nimport AccountMultiple from \"../account/multiple.mjs\";\nimport Contract from \"./contract.mjs\";\n/**\n * Universal Stamp\n *\n * Universal provides Ae base functionality with Contract and Aens\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/universal\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Universal instance\n */\n\nexport default Ae.compose(AccountMultiple, Chain, Transaction, Aens, Contract, Oracle, GeneralizedAccount);\n//# sourceMappingURL=universal.mjs.map","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Content Script Bridge module\n *\n * @module @aeternity/aepp-sdk/es/utils/aepp-wallet-communication/content-script-bridge\n * @export ContentScriptBridge\n * @example\n * import ContentScriptBridge\n * from '@aeternity/aepp-sdk/es/utils/wallet-communication/content-script-bridge\n */\nimport stampit from '@stamp/it';\nimport { UnsupportedPlatformError, MissingParamError } from \"../errors.mjs\";\n/**\n * Start message proxy\n * @function run\n * @instance\n * @return {void}\n */\n\nfunction run() {\n  const allowCrossOrigin = this.allowCrossOrigin; // Connect to extension using runtime\n\n  this.extConnection.connect(msg => {\n    this.pageConnection.sendMessage(msg);\n  }); // Connect to page using window.postMessage\n\n  this.pageConnection.connect((msg, origin, source) => {\n    if (!allowCrossOrigin && source !== window) return;\n    this.extConnection.sendMessage(msg);\n  });\n}\n/**\n * Stop message proxy\n * @function stop\n * @instance\n * @return {void}\n */\n\n\nfunction stop() {\n  this.extConnection.disconnect();\n  this.pageConnection.disconnect();\n}\n/**\n * ContentScriptBridge stamp\n * Provide functionality to easly redirect messages from page to extension and from extension to\n * page through content script\n * Using Runtime(Extension) and WindowPostMessage(Web-Page) connections\n * @function\n * @alias module:@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/content-script-bridge\n * @rtype Stamp\n * @param {Object} params - Initializer object\n * @param {Object} params.pageConnection - Page connection object\n * (@link module:@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/connection/\n * browser-window-message)\n * @param {Object} params.extConnection - Extension connection object\n * (@link module:@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/connection/browser-runtime)\n * @return {Object}\n */\n\n\nexport default stampit({\n  init(_ref) {\n    let {\n      pageConnection,\n      extConnection,\n      allowCrossOrigin = false\n    } = _ref;\n    if (!window) throw new UnsupportedPlatformError('Window object not found, you can run bridge only in browser');\n    if (!pageConnection) throw new MissingParamError('pageConnection required');\n    if (!extConnection) throw new MissingParamError('extConnection required');\n    this.allowCrossOrigin = allowCrossOrigin;\n    this.pageConnection = pageConnection;\n    this.extConnection = extConnection;\n  },\n\n  methods: {\n    run,\n    stop\n  }\n});\n//# sourceMappingURL=content-script-bridge.mjs.map","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Wallet Detector\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/utils}.\n * @module @aeternity/aepp-sdk/es/utils/aepp-wallet-communication/wallet-detector\n * @export WalletDetector\n */\nimport stampit from '@stamp/it';\nimport BrowserWindowMessageConnection from \"./connection/browser-window-message.mjs\";\nimport { MESSAGE_DIRECTION, METHODS } from \"./schema.mjs\";\nimport { UnsupportedPlatformError } from \"../errors.mjs\";\n/**\n * WalletDetector stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/wallet-detector\n * @rtype Stamp\n * @param {Object} params={} - Initializer object\n * @param {WalletConnection} params.connection - Connection for listening for wallets\n * @return {WalletDetector}\n */\n\nexport default stampit({\n  init() {\n    let {\n      connection\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!window) throw new UnsupportedPlatformError('Window object not found, you can run wallet detector only in browser');\n    this.connection = connection || BrowserWindowMessageConnection({\n      connectionInfo: {\n        id: 'spy'\n      }\n    });\n    this.wallets = {};\n  },\n\n  methods: {\n    /**\n     * Start scanning\n     * @function scan\n     * @instance\n     * @param {Function} onDetected Call-back function which trigger on new wallet\n     * @return {void}\n     */\n    scan(onDetected) {\n      const {\n        wallets\n      } = this;\n      this.connection.connect((_ref, origin, source) => {\n        let {\n          method,\n          params\n        } = _ref;\n        if (!method || !params || method !== METHODS.readyToConnect || wallets[params.id]) return;\n        const wallet = { ...params,\n\n          async getConnection() {\n            // if detect extension wallet or page wallet\n            const isExtension = this.type === 'extension';\n            const origin = isExtension ? window.origin : this.origin;\n            return BrowserWindowMessageConnection({\n              connectionInfo: this,\n              sendDirection: isExtension ? MESSAGE_DIRECTION.to_waellet : undefined,\n              receiveDirection: isExtension ? MESSAGE_DIRECTION.to_aepp : undefined,\n              target: source,\n              origin\n            });\n          }\n\n        };\n        wallets[wallet.id] = wallet;\n        onDetected({\n          wallets,\n          newWallet: wallet\n        });\n      });\n      if (Object.keys(wallets).length) onDetected({\n        wallets\n      });\n    },\n\n    /**\n    * Stop scanning\n    * @function stopScan\n    * @instance\n    * @return {void}\n    */\n    stopScan() {\n      this.connection.disconnect();\n    }\n\n  }\n});\n//# sourceMappingURL=wallet-detector.mjs.map","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Browser runtime connector module\n *\n * This is the complement to\n * {@link module:@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/connection}.\n * @module @aeternity/aepp-sdk/es/utils/aepp-wallet-communication/connection/browser-runtime\n * @export BrowserRuntimeConnection\n * @example import { BrowserRuntimeConnection } from '@aeternity/aepp-sdk'\n */\nimport stampit from '@stamp/it';\nimport WalletConnection from \"./index.mjs\";\nimport { getBrowserAPI } from \"../helpers.mjs\";\nimport { RpcConnectionError, AlreadyConnectedError, NoWalletConnectedError } from \"../../errors.mjs\";\n/**\n * Disconnect\n * @function disconnect\n * @instance\n * @rtype () => void\n * @return {void}\n */\n\nfunction disconnect() {\n  try {\n    this.port.disconnect();\n  } catch (e) {\n    console.warning('From BrowserRuntimeConnection: ', e);\n  }\n}\n/**\n * Connect\n * @function connect\n * @instance\n * @rtype (onMessage: Function, onDisconnect: Function) => void\n * @param {Function} onMessage - Message handler\n * @param {Function} onDisconnect - trigger when runtime connection in closed\n * @return {void}\n */\n\n\nfunction connect(onMessage, onDisconnect) {\n  if (this.isConnected()) throw new AlreadyConnectedError('You already connected');\n\n  this.handler = (msg, source) => {\n    if (this.debug) console.log('Receive message: ', msg);\n    onMessage(msg, source);\n  };\n\n  this.port.onMessage.addListener(this.handler);\n  this.port.onDisconnect.addListener(() => {\n    typeof onDisconnect === 'function' && onDisconnect({}, this);\n    this.port.disconnect();\n  });\n}\n/**\n * Send message\n * @function sendMessage\n * @instance\n * @rtype (msg: Object) => void\n * @param {Object} msg - Message\n * @return {void}\n */\n\n\nfunction sendMessage(msg) {\n  if (!this.port) throw new NoWalletConnectedError('You dont have connection. Please connect before');\n  if (this.debug) console.log('Send message: ', msg);\n  this.port.postMessage(msg);\n}\n/**\n * Check if connected\n * @function isConnected\n * @instance\n * @rtype () => Boolean\n * @return {Boolean} Is connected\n */\n\n\nfunction isConnected() {\n  return typeof this.port.onMessage.hasListeners === 'function' ? this.port.onMessage.hasListeners() : this.port.onMessage.hasListener(this.handler);\n}\n/**\n * BrowserRuntimeConnection stamp\n * Handle browser runtime communication\n * @function\n * @alias module:@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/connection/browser-runtime\n * @rtype Stamp\n * @param {Object} params={} - Initializer object\n * @param {Object} params.port - Runtime `port` object\n * @param {Object} [params.connectionInfo={}] - Connection info object\n * @param {Boolean} [params.debug=false] - Debug flag\n * @return {Object}\n */\n\n\nexport default stampit({\n  init(_ref) {\n    let {\n      connectionInfo = {},\n      port,\n      debug = false\n    } = _ref;\n    if (!getBrowserAPI().runtime) throw new RpcConnectionError('Runtime is not accessible in your environment');\n    this.debug = debug;\n    this.connectionInfo = connectionInfo;\n    this.port = port || getBrowserAPI().runtime.connect(...[connectionInfo.id || undefined]);\n  },\n\n  methods: {\n    connect,\n    sendMessage,\n    disconnect,\n    isConnected\n  }\n}, WalletConnection);\n//# sourceMappingURL=browser-runtime.mjs.map","/*\n * ISC License (ISC)\n * Copyright (c) 2021 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport * as Crypto from \"./utils/crypto.mjs\";\nimport * as Keystore from \"./utils/keystore.mjs\";\nimport * as Bytes from \"./utils/bytes.mjs\";\nimport * as TxBuilder from \"./tx/builder/index.mjs\";\nimport * as TxBuilderHelper from \"./tx/builder/helpers.mjs\";\nimport * as SCHEMA from \"./tx/builder/schema.mjs\";\nimport * as AmountFormatter from \"./utils/amount-formatter.mjs\";\nimport * as HdWallet from \"./utils/hd-wallet.mjs\";\nimport Ae from \"./ae/index.mjs\";\nimport Chain from \"./chain/index.mjs\";\nimport ChainNode from \"./chain/node.mjs\";\nimport Node from \"./node.mjs\";\nimport NodePool from \"./node-pool/index.mjs\";\nimport Tx from \"./tx/index.mjs\";\nimport Transaction from \"./tx/tx.mjs\";\nimport verifyTransaction from \"./tx/validator.mjs\";\nimport AccountBase from \"./account/base.mjs\";\nimport AccountMultiple from \"./account/multiple.mjs\";\nimport MemoryAccount from \"./account/memory.mjs\";\nimport Aens from \"./ae/aens.mjs\";\nimport Contract from \"./ae/contract.mjs\";\nimport GeneralizedAccount from \"./contract/ga/index.mjs\";\nimport ContractCompilerHttp from \"./contract/compiler.mjs\";\nimport RpcAepp from \"./ae/aepp.mjs\";\nimport RpcWallet from \"./ae/wallet.mjs\";\nimport Oracle from \"./ae/oracle.mjs\";\nimport genSwaggerClient from \"./utils/swagger.mjs\";\nimport Channel from \"./channel/index.mjs\";\nimport Universal from \"./ae/universal.mjs\";\nexport { default as ContentScriptBridge } from \"./utils/aepp-wallet-communication/content-script-bridge.mjs\";\nimport * as _AeppWalletHelpers from \"./utils/aepp-wallet-communication/helpers.mjs\";\nexport { _AeppWalletHelpers as AeppWalletHelpers };\nimport * as _AeppWalletSchema from \"./utils/aepp-wallet-communication/schema.mjs\";\nexport { _AeppWalletSchema as AeppWalletSchema };\nexport { default as WalletDetector } from \"./utils/aepp-wallet-communication/wallet-detector.mjs\";\nexport { default as BrowserRuntimeConnection } from \"./utils/aepp-wallet-communication/connection/browser-runtime.mjs\";\nexport { default as BrowserWindowMessageConnection } from \"./utils/aepp-wallet-communication/connection/browser-window-message.mjs\";\nexport * from \"./utils/errors.mjs\";\nexport const getDefaultPointerKey = TxBuilderHelper.getDefaultPointerKey;\nexport { AmountFormatter, AccountBase, AccountMultiple, Ae, Aens, Bytes, Contract, ContractCompilerHttp, ChainNode, RpcAepp, RpcWallet, Channel, Crypto, Keystore, Chain, GeneralizedAccount, HdWallet, MemoryAccount, Node, NodePool, Oracle, genSwaggerClient, Transaction, verifyTransaction, Tx, TxBuilder, TxBuilderHelper, Universal, SCHEMA };\n//# sourceMappingURL=index.mjs.map","/**\n * RpcClient module\n *\n * @module @aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/rpc-client\n * @export { RpcClient, RpcClients }\n * @example\n * import RpcClient from '@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/rpc-client'\n */\nimport stampit from '@stamp/it';\nimport { METHODS, RPC_STATUS, SUBSCRIPTION_TYPES } from \"../schema.mjs\";\nimport { sendMessage, message, isValidAccounts } from \"../helpers.mjs\";\nimport { InvalidRpcMessageError, TypeError, DuplicateCallbackError, MissingCallbackError } from \"../../errors.mjs\";\n/**\n * Contain functionality for using RPC conection\n * @alias module:@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/rpc-client\n * @function\n * @rtype Stamp\n * @param {Object} param Init params object\n * @param {String} param.name Client name\n * @param {Object} param.connection Connection object\n * @param {Function[]} param.handlers Array with two function for message handling\n * @param {Function} param.handlers[0] Message handler\n * @param {Function} param.handlers[1] Disconnect callback\n * @return {Object}\n */\n\nexport default stampit({\n  init(_ref) {\n    let {\n      id,\n      name,\n      networkId,\n      icons,\n      connection,\n      handlers: [onMessage, onDisconnect]\n    } = _ref;\n    this.id = id;\n    this.connection = connection;\n    this.info = {\n      name,\n      networkId,\n      icons\n    }; // {\n    //    [msg.id]: { resolve, reject }\n    // }\n\n    this.callbacks = {}; // ['connected', 'current']\n\n    this.addressSubscription = []; // {\n    //    connected: { [pub]: {...meta} },\n    //    current: { [pub]: {...meta} }\n    // }\n\n    this.accounts = {};\n    this.sendMessage = sendMessage(this.connection);\n\n    const handleMessage = (msg, origin) => {\n      if (!msg || !msg.jsonrpc || msg.jsonrpc !== '2.0' || !msg.method) {\n        throw new InvalidRpcMessageError(msg);\n      }\n\n      onMessage(msg, origin);\n    };\n\n    const disconnect = (aepp, connection) => {\n      this.disconnect(true);\n      typeof onDisconnect === 'function' && onDisconnect(connection, this);\n    };\n\n    connection.connect(handleMessage, disconnect);\n  },\n\n  propertyDescriptors: {\n    currentAccount: {\n      enumerable: true,\n      configurable: false,\n\n      get() {\n        return this.isHasAccounts() ? Object.keys(this.accounts.current)[0] : undefined;\n      }\n\n    },\n    addresses: {\n      enumerable: true,\n      configurable: false,\n\n      get() {\n        return this.isHasAccounts() ? [...Object.keys(this.accounts.current), ...Object.keys(this.accounts.connected)] : [];\n      }\n\n    },\n    origin: {\n      enumerable: true,\n      configurable: false,\n\n      get() {\n        return this.connection;\n      }\n\n    }\n  },\n  methods: {\n    /**\n     * Update info\n     * @function updateInfo\n     * @instance\n     * @rtype (info: Object) => void\n     * @param {Object} info Info to update (will be merged with current info object)\n     * @return {void}\n     */\n    updateInfo(info) {\n      Object.assign(this.info, info);\n    },\n\n    isHasAccounts() {\n      return typeof this.accounts === 'object' && typeof this.accounts.connected === 'object' && typeof this.accounts.current === 'object';\n    },\n\n    isSubscribed() {\n      return this.addressSubscription.length && this.isHasAccounts();\n    },\n\n    /**\n     * Check if aepp has access to account\n     * @function hasAccessToAccount\n     * @instance\n     * @rtype (address: String) => Boolean\n     * @param {String} address Account address\n     * @return {Boolean} is connected\n     */\n    hasAccessToAccount(address) {\n      return !!address && this.addresses.find(a => a === address);\n    },\n\n    /**\n     * Check if is connected\n     * @function isConnected\n     * @instance\n     * @rtype () => Boolean\n     * @return {Boolean} is connected\n     */\n    isConnected() {\n      return this.connection.isConnected() && (this.info.status === RPC_STATUS.CONNECTED || this.info.status === RPC_STATUS.NODE_BINDED);\n    },\n\n    /**\n     * Get selected account\n     * @function getCurrentAccount\n     * @instance\n     * @rtype ({ onAccount } = {}) => String\n     * @param {Object} options Options\n     * @return {String}\n     */\n    getCurrentAccount() {\n      let {\n        onAccount\n      } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return onAccount || Object.keys(this.accounts.current)[0];\n    },\n\n    /**\n     * Disconnect\n     * @function disconnect\n     * @instance\n     * @rtype () => void\n     * @return {void}\n     */\n    disconnect() {\n      let forceConnectionClose = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.info.status = RPC_STATUS.DISCONNECTED;\n      this.addressSubscription = [];\n      this.accounts = {};\n      forceConnectionClose || this.connection.disconnect();\n    },\n\n    /**\n     * Update accounts and sent `update.address` notification to AEPP\n     * @param {{ current: Object, connected: Object }} accounts Current and connected accounts\n     * @param {Object} [options]\n     * @param {Boolean} [options.forceNotification] Don't sent update notification to AEPP\n     */\n    setAccounts(accounts) {\n      let {\n        forceNotification\n      } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!isValidAccounts(accounts)) {\n        throw new TypeError('Invalid accounts object. Should be object like: `{ connected: {}, selected: {} }`');\n      }\n\n      this.accounts = accounts;\n\n      if (!forceNotification) {\n        // Sent notification about account updates\n        this.sendMessage(message(METHODS.updateAddress, this.accounts), true);\n      }\n    },\n\n    /**\n     * Update subscription\n     * @function updateSubscription\n     * @instance\n     * @rtype (type: String, value: String) => void\n     * @param {String} type Subscription type\n     * @param {String} value Subscription value\n     * @return {String[]}\n     */\n    updateSubscription(type, value) {\n      if (type === SUBSCRIPTION_TYPES.subscribe && !this.addressSubscription.includes(value)) {\n        this.addressSubscription.push(value);\n      }\n\n      if (type === SUBSCRIPTION_TYPES.unsubscribe && this.addressSubscription.includes(value)) {\n        this.addressSubscription = this.addressSubscription.filter(s => s !== value);\n      }\n\n      return this.addressSubscription;\n    },\n\n    /**\n     * Make a request\n     * @function request\n     * @instance\n     * @rtype (name: String, params: Object) => Promise\n     * @param {String} name Method name\n     * @param {Object} params Method params\n     * @return {Promise} Promise which will be resolved after receiving response message\n     */\n    request(name, params) {\n      const msgId = this.sendMessage(message(name, params));\n\n      if (Object.prototype.hasOwnProperty.call(this.callbacks, msgId)) {\n        throw new DuplicateCallbackError();\n      }\n\n      return new Promise((resolve, reject) => {\n        this.callbacks[msgId] = {\n          resolve,\n          reject\n        };\n      });\n    },\n\n    /**\n     * Process response message\n     * @function processResponse\n     * @instance\n     * @rtype (msg: Object, transformResult: Function) => void\n     * @param {Object} msg Message object\n     * @param {Function=} transformResult Optional parser function for message\n     * @return {void}\n     */\n    processResponse(_ref2, transformResult) {\n      let {\n        id,\n        error,\n        result\n      } = _ref2;\n      if (!this.callbacks[id]) throw new MissingCallbackError(id);\n\n      if (result) {\n        this.callbacks[id].resolve(...(typeof transformResult === 'function' ? transformResult({\n          id,\n          result\n        }) : [result]));\n      } else {\n        this.callbacks[id].reject(error);\n      }\n\n      delete this.callbacks[id];\n    }\n\n  }\n});\n//# sourceMappingURL=rpc-client.mjs.map","/**\n * RPC handler for WAELLET side\n *\n * @module @aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/wallet-rpc\n * @export WalletRpc\n * @example\n * import WalletRpc from '@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/wallet-rpc'\n */\nimport { v4 as uuid } from '@aeternity/uuid';\nimport Ae from \"../../../ae/index.mjs\";\nimport verifyTransaction from \"../../../tx/validator.mjs\";\nimport AccountMultiple from \"../../../account/multiple.mjs\";\nimport TxObject from \"../../../tx/tx-object.mjs\";\nimport RpcClient from \"./rpc-client.mjs\";\nimport { getBrowserAPI, getHandler, isValidAccounts, message, sendResponseMessage } from \"../helpers.mjs\";\nimport { ERRORS, METHODS, RPC_STATUS, VERSION, WALLET_TYPE } from \"../schema.mjs\";\nimport { ArgumentError, TypeError, UnknownRpcClientError } from \"../../errors.mjs\";\nimport { isAccountBase } from \"../../../account/base.mjs\";\n\nconst resolveOnAccount = function (addresses, onAccount) {\n  let opt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (!addresses.find(a => a === onAccount)) {\n    if (typeof opt.onAccount !== 'object' || !isAccountBase(opt.onAccount)) throw new TypeError('Provided onAccount should be an AccountBase');\n    onAccount = opt.onAccount;\n  }\n\n  return onAccount;\n};\n\nconst NOTIFICATIONS = {\n  [METHODS.closeConnection]: (instance, _ref) => {\n    let {\n      client\n    } = _ref;\n    return async msg => {\n      client.disconnect(true);\n      instance.onDisconnect(msg.params, client);\n    };\n  }\n};\nconst RESPONSES = {};\nconst REQUESTS = {\n  // Store client info and prepare two fn for each client `connect` and `denyConnection`\n  // which automatically prepare and send response for that client\n  [METHODS.connect](callInstance, instance, client, _ref2) {\n    let {\n      name,\n      networkId,\n      version,\n      icons,\n      connectNode\n    } = _ref2;\n    // Check if protocol and network is compatible with wallet\n    if (version !== VERSION) return {\n      error: ERRORS.unsupportedProtocol()\n    }; // Store new AEPP and wait for connection approve\n\n    client.updateInfo({\n      status: RPC_STATUS.WAITING_FOR_CONNECTION_APPROVE,\n      name,\n      networkId,\n      icons,\n      version,\n      origin: window.location.origin,\n      connectNode\n    }); // Call onConnection callBack to notice Wallet about new AEPP\n\n    return callInstance('onConnection', {\n      name,\n      networkId,\n      version\n    }, function () {\n      let {\n        shareNode\n      } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      client.updateInfo({\n        status: shareNode ? RPC_STATUS.NODE_BINDED : RPC_STATUS.CONNECTED\n      });\n      return {\n        result: { ...instance.getWalletInfo(),\n          ...(shareNode && {\n            node: instance.selectedNode\n          })\n        }\n      };\n    }, error => {\n      client.updateInfo({\n        status: RPC_STATUS.CONNECTION_REJECTED\n      });\n      return {\n        error: ERRORS.connectionDeny(error)\n      };\n    });\n  },\n\n  [METHODS.subscribeAddress](callInstance, instance, client, _ref3) {\n    let {\n      type,\n      value\n    } = _ref3;\n    // Authorization check\n    if (!client.isConnected()) return {\n      error: ERRORS.notAuthorize()\n    };\n    return callInstance('onSubscription', {\n      type,\n      value\n    }, async function () {\n      let {\n        accounts\n      } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      try {\n        const clientAccounts = accounts || instance.getAccounts();\n\n        if (!isValidAccounts(clientAccounts)) {\n          throw new TypeError('Invalid provided accounts object');\n        }\n\n        const subscription = client.updateSubscription(type, value);\n        client.setAccounts(clientAccounts, {\n          forceNotification: true\n        });\n        return {\n          result: {\n            subscription,\n            address: clientAccounts\n          }\n        };\n      } catch (e) {\n        if (instance.debug) console.error(e);\n        return {\n          error: ERRORS.internalError(e.message)\n        };\n      }\n    }, error => ({\n      error: ERRORS.rejectedByUser(error)\n    }));\n  },\n\n  [METHODS.address](callInstance, instance, client) {\n    // Authorization check\n    if (!client.isConnected()) return {\n      error: ERRORS.notAuthorize()\n    };\n    if (!client.isSubscribed()) return {\n      error: ERRORS.notAuthorize()\n    };\n    return callInstance('onAskAccounts', {}, function () {\n      let {\n        accounts\n      } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return {\n        result: accounts || [...Object.keys(client.accounts.current), ...Object.keys(client.accounts.connected)]\n      };\n    }, error => ({\n      error: ERRORS.rejectedByUser(error)\n    }));\n  },\n\n  [METHODS.sign](callInstance, instance, client, options) {\n    const {\n      tx,\n      onAccount,\n      networkId,\n      returnSigned = false\n    } = options;\n    const address = onAccount || client.currentAccount; // Update client with new networkId\n\n    networkId && client.updateInfo({\n      networkId\n    }); // Authorization check\n\n    if (!client.isConnected()) return {\n      error: ERRORS.notAuthorize()\n    }; // Account permission check\n\n    if (!client.hasAccessToAccount(address)) {\n      return {\n        error: ERRORS.permissionDeny(address)\n      };\n    } // NetworkId check\n\n\n    if (!networkId || networkId !== instance.getNetworkId()) {\n      return {\n        error: ERRORS.unsupportedNetwork()\n      };\n    }\n\n    return callInstance('onSign', {\n      tx,\n      returnSigned,\n      onAccount: address,\n      txObject: TxObject.fromString(tx)\n    }, async function (rawTx) {\n      let opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      let onAcc;\n\n      try {\n        onAcc = resolveOnAccount(instance.addresses(), address, opt);\n      } catch (e) {\n        if (instance.debug) console.error(e);\n        return {\n          error: ERRORS.internalError(e.message)\n        };\n      }\n\n      try {\n        const t = rawTx || tx;\n        const result = returnSigned ? {\n          signedTransaction: await instance.signTransaction(t, {\n            onAccount: onAcc\n          })\n        } : {\n          transactionHash: await instance.send(t, {\n            onAccount: onAcc,\n            verify: false\n          })\n        };\n        return {\n          result\n        };\n      } catch (e) {\n        if (!returnSigned) {\n          // Validate transaction\n          const validation = await verifyTransaction(rawTx || tx, instance.selectedNode.instance);\n          if (validation.length) return {\n            error: ERRORS.invalidTransaction(validation)\n          }; // Send broadcast failed error to aepp\n\n          return {\n            error: ERRORS.broadcastFailed(e.message)\n          };\n        }\n\n        throw e;\n      }\n    }, error => ({\n      error: ERRORS.rejectedByUser(error)\n    }));\n  },\n\n  [METHODS.signMessage](callInstance, instance, client, _ref4) {\n    let {\n      message,\n      onAccount\n    } = _ref4;\n    // Authorization check\n    if (!client.isConnected()) return {\n      error: ERRORS.notAuthorize()\n    };\n    const address = onAccount || client.currentAccount;\n\n    if (!client.hasAccessToAccount(address)) {\n      return {\n        error: ERRORS.permissionDeny(address)\n      };\n    }\n\n    return callInstance('onMessageSign', {\n      message,\n      onAccount: address\n    }, async function () {\n      let opt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      try {\n        const onAcc = resolveOnAccount(instance.addresses(), address, opt);\n        return {\n          result: {\n            signature: await instance.signMessage(message, {\n              onAccount: onAcc,\n              returnHex: true\n            })\n          }\n        };\n      } catch (e) {\n        if (instance.debug) console.error(e);\n        return {\n          error: ERRORS.internalError(e.message)\n        };\n      }\n    }, error => ({\n      error: ERRORS.rejectedByUser(error)\n    }));\n  }\n\n};\n\nconst handleMessage = (instance, id) => async (msg, origin) => {\n  const client = instance.rpcClients[id];\n\n  if (!msg.id) {\n    return getHandler(NOTIFICATIONS, msg, {\n      debug: instance.debug\n    })(instance, {\n      client\n    })(msg, origin);\n  }\n\n  if (Object.prototype.hasOwnProperty.call(client.callbacks, msg.id)) {\n    return getHandler(RESPONSES, msg, {\n      debug: instance.debug\n    })(instance, {\n      client\n    })(msg, origin);\n  } else {\n    const {\n      id,\n      method\n    } = msg;\n\n    const callInstance = (methodName, params, accept, deny) => () => new Promise(resolve => {\n      instance[methodName](client, {\n        id,\n        method,\n        params,\n        accept: function () {\n          return resolve(accept(...arguments));\n        },\n        deny: function () {\n          return resolve(deny(...arguments));\n        }\n      }, origin);\n    }); // TODO make one structure for handler functions\n\n\n    const errorObjectOrHandler = getHandler(REQUESTS, msg, {\n      debug: instance.debug\n    })(callInstance, instance, client, msg.params);\n    const response = typeof errorObjectOrHandler === 'function' ? await errorObjectOrHandler() : errorObjectOrHandler;\n    sendResponseMessage(client)(id, method, response);\n  }\n};\n/**\n * Contain functionality for aepp interaction and managing multiple aepps\n * @alias module:@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/wallet-rpc\n * @function\n * @rtype Stamp\n * @param {Object} param Init params object\n * @param {String=} [param.name] Wallet name\n * @param {Function} onConnection Call-back function for incoming AEPP connection\n * @param {Function} onSubscription Call-back function for incoming AEPP account subscription\n * @param {Function} onSign Call-back function for incoming AEPP sign request\n * @param {Function} onAskAccounts Call-back function for incoming AEPP get address request\n * @param {Function} onMessageSign Call-back function for incoming AEPP sign message request\n   * Second argument of incoming call-backs contain function for accept/deny request\n * @param {Function} onDisconnect Call-back function for disconnect event\n * @return {Object}\n */\n\n\nexport default Ae.compose(AccountMultiple, {\n  init() {\n    var _this = this;\n\n    let {\n      name,\n      debug = false,\n      ...other\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    ['onConnection', 'onSubscription', 'onSign', 'onDisconnect', 'onAskAccounts', 'onMessageSign'].forEach(event => {\n      const handler = other[event];\n      if (typeof handler !== 'function') throw new ArgumentError(event, 'a function', handler);\n      this[event] = handler;\n    });\n    this.debug = debug;\n    this.rpcClients = {};\n    this.name = name;\n    this.id = uuid();\n\n    const _selectAccount = this.selectAccount.bind(this);\n\n    const _addAccount = this.addAccount.bind(this);\n\n    const _selectNode = this.selectNode.bind(this); // Overwrite AE methods\n\n\n    this.selectAccount = function (address) {\n      let {\n        condition = () => true\n      } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _selectAccount(address);\n\n      Object.values(_this.rpcClients).filter(client => client.isConnected() && client.isSubscribed() && client.hasAccessToAccount(address) && condition(client)).forEach(client => client.setAccounts({\n        current: {\n          [address]: {}\n        },\n        connected: { ...client.accounts.current,\n          ...Object.entries(client.accounts.connected).filter(_ref5 => {\n            let [k, v] = _ref5;\n            return k !== address;\n          }).reduce((acc, _ref6) => {\n            let [k, v] = _ref6;\n            return { ...acc,\n              [k]: v\n            };\n          }, {})\n        }\n      }));\n    };\n\n    this.addAccount = async function (account) {\n      let {\n        select,\n        meta = {},\n        condition = () => true\n      } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      await _addAccount(account, {\n        select\n      });\n      const address = await account.address(); // Send notification 'update.address' to all Aepp which are subscribed for connected accounts\n\n      Object.values(_this.rpcClients).filter(client => client.isConnected() && client.isSubscribed() && condition(client)).forEach(client => client.setAccounts({\n        current: { ...(select ? {\n            [address]: meta\n          } : client.accounts.current)\n        },\n        connected: { ...(select ? client.accounts.current : {\n            [address]: meta\n          }),\n          ...client.accounts.connected\n        }\n      }));\n    };\n\n    this.selectNode = name => {\n      _selectNode(name); // Send notification 'update.network' to all Aepp which connected\n\n\n      Object.values(this.rpcClients).filter(client => client.isConnected()).forEach(client => {\n        client.sendMessage(message(METHODS.updateNetwork, {\n          networkId: this.getNetworkId(),\n          ...(client.info.status === RPC_STATUS.NODE_BINDED && {\n            node: this.selectedNode\n          })\n        }), true);\n      });\n    };\n  },\n\n  methods: {\n    /**\n     * Remove specific RpcClient by ID\n     * @function removeRpcClient\n     * @instance\n     * @rtype (id: string) => void\n     * @param {String} id Client ID\n     * @param {Object} [opt = {}]\n     * @return {void}\n     */\n    removeRpcClient(id) {\n      let {\n        forceConnectionClose = false\n      } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      const client = this.rpcClients[id];\n      if (!client) throw new UnknownRpcClientError(id);\n      client.disconnect(forceConnectionClose);\n      delete this.rpcClients[id];\n    },\n\n    /**\n     * Add new client by AEPP connection\n     * @function addRpcClient\n     * @instance\n     * @rtype (clientConnection: Object) => Object\n     * @param {Object} clientConnection AEPP connection object\n     * @return {String} Client ID\n     */\n    addRpcClient(clientConnection) {\n      // @TODO  detect if aepp has some history based on origin????\n      // if yes use this instance for connection\n      const id = uuid();\n      this.rpcClients[id] = RpcClient({\n        id,\n        info: {\n          status: RPC_STATUS.WAITING_FOR_CONNECTION_REQUEST\n        },\n        connection: clientConnection,\n        handlers: [handleMessage(this, id), this.onDisconnect]\n      });\n      return id;\n    },\n\n    /**\n     * Share wallet info\n     * Send shareWalletInfo message to notify AEPP about wallet\n     * @function shareWalletInfo\n     * @instance\n     * @rtype (postFn: Function) => void\n     * @param {Function} postFn Send message function like `(msg) => void`\n     * @return {void}\n     */\n    shareWalletInfo(postFn) {\n      postFn({\n        jsonrpc: '2.0',\n        ...message(METHODS.readyToConnect, this.getWalletInfo())\n      });\n    },\n\n    /**\n     * Get Wallet info object\n     * @function getWalletInfo\n     * @instance\n     * @rtype () => Object\n     * @return {Object} Object with wallet information(id, name, network, ...)\n     */\n    getWalletInfo() {\n      const runtime = getBrowserAPI(true).runtime;\n      return {\n        id: runtime && runtime.id ? runtime.id : this.id,\n        name: this.name,\n        networkId: this.getNetworkId(),\n        origin: window.location.origin,\n        type: runtime && runtime.id ? WALLET_TYPE.extension : WALLET_TYPE.window\n      };\n    },\n\n    /**\n     * Get Wallet accounts\n     * @function getAccounts\n     * @instance\n     * @rtype () => Object\n     * @return {Object} Object with accounts information({ connected: Object, current: Object })\n     */\n    getAccounts() {\n      return {\n        current: this.selectedAddress ? {\n          [this.selectedAddress]: {}\n        } : {},\n        connected: this.addresses().filter(a => a !== this.selectedAddress).reduce((acc, a) => ({ ...acc,\n          [a]: {}\n        }), {})\n      };\n    }\n\n  }\n});\n//# sourceMappingURL=wallet-rpc.mjs.map"],"names":["FateByteArray","FateTuple","symbolIdentifier","Calldata","funName","argTypes","argsData","functionId","funcBytes","argsTuple","type","module","exports","BaseDataFactory","constructor","valueFactory","this","_valueFactory","supports","_name","_valueTypes","create","_type","_value","Error","assert","PrimitiveDataFactory","ListDataFactory","MapDataFactory","TupleDataFactory","RecordDataFactory","VariantDataFactory","EventDataFactory","zip","arr","arrs","map","val","i","reduce","a","curr","CompositeDataFactory","variantFactory","_factories","createMultiple","types","values","length","el","value","factory","find","f","JSON","stringify","hash","ByteArray2Int","TypeResolveError","DATA_TYPES","super","_variantFactory","name","variantType","data","topics","nameHash","args","idx","variants","v","Object","keys","findIndex","variant","variantName","resolvedArgs","t","_isData","shift","includes","size","FateList","FateTypeError","Array","isArray","resolvedValues","valuesType","FateMap","item","push","keyType","valueType","FateInt","FateBool","FateString","FateHash","FateSignature","FateBytes","FateBits","FateAccountAddress","FateContractAddress","FateChannelAddress","FateOracleAddress","FateOracleQueryAddress","TYPES","valueTypes","resolvedValue","key","FateVariant","isValid","variantCtor","variantArgs","entries","arities","e","tag","_","variantTypes","variantValue","base64check","Serializer","TypeResolver","ExternalDataFactory","CanonicalMapper","InternalMapper","FateTypeString","EncoderError","FormatError","Encoder","aci","_aci","_serializer","_dataFactory","_externalDataFactory","_typeResolver","_internalMapper","_canonicalMapper","encode","contract","required","getCallTypes","undefined","calldata","serialized","serialize","Uint8Array","flat","Infinity","decode","getReturnType","binData","decodeString","deserialized","deserialize","accept","startsWith","substring","decodeFateString","decodeEvent","encodedData","getEventType","event","message","FatePrefixError","prefix","toString","padStart","InternalError","SerializerError","mapper","_mapper","internalValue","toInternal","FateTypeTuple","FateTypeInt","listComparator","b","cmp","FateComparator","itemsType","items","diff","tupleComparator","sizeDiff","valTypeA","variantComparator","aDiff","aList","aritiesType","bList","aComparator","lDiff","tDiff","elementsComparator","mapItemComparator","keyComparator","mapComparator","aItems","bItems","sort","valueComparator","aItem","bItem","kDiff","vDiff","bytesComparator","valueOf","intComparator","Number","BigInt","stringComparator","localeCompare","boolComparator","bitsComparator","comparators","hasOwnProperty","freeze","SMALL_INT","LONG_STRING","SHORT_STRING","SHORT_LIST","LONG_TUPLE","SHORT_TUPLE","LONG_LIST","MAP","EMPTY_TUPLE","POS_BITS","EMPTY_STRING","POS_BIG_INT","FALSE","OBJECT","VARIANT","MAP_ID","NEG_BITS","EMPTY_MAP","NEG_BIG_INT","TRUE","OTYPE_ADDRESS","OTYPE_BYTES","OTYPE_CONTRACT","OTYPE_ORACLE","OTYPE_ORACLE_QUERY","OTYPE_CHANNEL","FateTypeVoid","FateTypeBool","FateTypeBits","FateTypeBytes","FateTypeHash","FateTypeSignature","FateTypeAccountAddress","FateTypeContractAddress","FateTypeOracleAddress","questionType","answerType","FateTypeOracleQueryAddress","FateTypeByteArray","FateTypeList","FateTypeRecord","FateTypeMap","FateTypeVariant","FateTypeOption","None","Some","FateTypeChainTTL","RelativeTTL","FixedTTL","FateTypeChainGAMetaTx","FateTypeChainPayingForTx","FateTypeChainBaseTx","FateTypeAENSPointee","FateTypeAENSName","FateTypeEvent","base58check","visitData","acceptor","visitAddress","visitList","visitMap","Map","iterator","set","visitTuple","prepareItems","visitVariant","ADDRESS_PREFIX_MAP","account_address","contract_address","channel_address","oracle_address","oracle_query_address","toAddress","toVariant","toMap","asString","isOptionVariant","some","TypeFactory","FateData","BaseSerializer","AddressSerializer","BitsSerializer","BoolSerializer","ByteArraySerializer","BytesSerializer","ChannelSerializer","ContractSerializer","IntSerializer","VoidSerializer","ListSerializer","MapSerializer","OracleQuerySerializer","OracleSerializer","StringSerializer","TupleSerializer","VariantSerializer","typeFactory","_serializers","_getSerializer","typeName","deserializeStream","typeInfo","createType","RLP","FateTag","buffer","decoded","slice","remainder","globalSerializer","_data","_rest","_typeInfo","RLPInt","abs","sign","rest","intSerializer","stream","fateLen","len","offset","byteArraySerializer","bytes","SMALL_INT_MASK","bigValue","absVal","small","list","serializedElements","elements","sortedItems","elA","elB","serializedItems","keyRest","valueRest","firstEl","encoder","TextEncoder","decoder","TextDecoder","tuple","valueTuple","els","FateVoid","OBJECT_TYPES","obj","isObject","isOption","funcAci","getNamespaceAci","functions","arguments","resolveType","options","filter","returns","isCustomType","namespace","_localType","split","namespaceData","vars","resolvedTypes","typeDef","typeVars","resolveTypeDef","resolveRecord","resolveVariant","params","localType","def","type_defs","state","typedef","forEach","k","FateAddress","_prefix","visitor","Int2ByteArray","HexStringToByteArray","toByteArray","ArrayBuffer","isView","isInteger","fixedSize","byteLength","_size","_itemsType","from","arrayToItem","_keyType","_valueType","Symbol","zipObject","reducer","acc","_items","callback","_tag","str","match","parseInt","bigInt","hex","h","join","condition","bs58","addChecksum","getPayload","input","shajs","Buffer","sha256hash","update","digest","checkSumFn","payload","checksum","concat","payloadWithChecksum","newChecksum","equals","blake","HASH_BYTES","blake2b","A","I","g","B","assign","Q","C","E","window","importScripts","o","self","location","href","document","currentScript","src","indexOf","substr","replace","lastIndexOf","XMLHttpRequest","open","responseType","send","response","onload","status","onerror","print","console","log","bind","D","n","printErr","warn","thisProgram","quit","wasmBinary","noExitRuntime","WebAssembly","M","F","w","r","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","INITIAL_MEMORY","y","s","c","N","G","U","R","S","onAbort","RuntimeError","H","Y","func","arg","d","get","J","grow","preloadedImages","preloadedAudios","locateFile","u","L","copyWithin","Math","min","max","K","asm","unshift","monitorRunDependencies","clearInterval","instance","fetch","credentials","then","ok","arrayBuffer","catch","Promise","resolve","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","apply","_argon2_hash","_malloc","l","_free","_argon2_verify","_argon2_error_message","_argon2_encodedlen","j","_argon2_hash_ext","_argon2_verify_ext","m","stackAlloc","p","calledRun","onRuntimeInitialized","postRun","preRun","setStatus","setTimeout","allocate","subarray","UTF8ToString","String","fromCharCode","ALLOC_NORMAL","run","preInit","pop","unloadRuntime","Module","jsModule","call","__esModule","default","defineProperty","enumerable","prototype","toStringTag","ArgonType","verify","Argon2d","Argon2i","Argon2id","_promise","_module","loadArgon2WasmBinary","atob","charCodeAt","argon2WasmPath","wasmMemory","ceil","Memory","initial","maximum","mem","time","parallelism","pass","salt","hashLen","secret","ad","code","hashHex","encoded","naiveFallback","globalThis","configurable","error","__global__","_globalThis","NativeWebSocket","WebSocket","MozWebSocket","websocket_version","W3CWebSocket","uri","protocols","native_instance","prop","_Buffer","secrets","WeakMap","init","_ref","keypair","gaId","isGa","publicKey","secretKey","isBuffer","pubBuffer","isValidKeypair","props","methods","address","async","accounts","fromEntries","all","selectAccount","deepProps","selectedAddress","onAccount","_resolveAccount","addresses","account","select","removeAccount","DEFAULTS","crypto","secret_type","symmetric_alg","kdf","kdf_params","memlimit_kib","opslimit","DERIVED_KEY_FUNCTIONS","argon2id","deriveKeyUsingArgon2id","result","CRYPTO_FUNCTIONS","encrypt","encryptXsalsa20Poly1305","decrypt","decryptXsalsa20Poly1305","plaintext","nonce","_ref2","ciphertext","res","algo","deriveKey","password","marshal","derivedKey","privateKey","opt","version","public_key","getAddressFromPriv","id","cipher_params","str2buf","publicBuffer","recover","keyObject","validateKeyObj","kdfParams","dump","root","cryptoKeys","missingRootKeys","missingCryptoKeys","full","hmac","fromString","ED25519_CURVE","HARDENED_OFFSET","toHex","derivePathFromKey","path","segments","toPathArray","segment","parentKey","deriveChild","derivePathFromSeed","seed","masterKey","getMasterKeyFromSeed","formatAccount","getKeyPair","IL","IR","chainCode","index","indexBuffer","allocUnsafe","writeUInt32BE","alloc","generateSaveHDWalletFromSeed","walletKey","encryptKey","getSaveHDWalletAccounts","saveHDWallet","accountCount","decryptKey","fill","getHdWalletAccountFromSeed","accountIdx","derived","keyPair","revoke","ensureNameValid","Ae","defaults","nameRevokeTx","nameId","accountId","pointers","allPointers","extendPointers","getName","nameUpdateTx","transfer","nameTransferTx","recipientId","query","_this","aensUpdate","aensQuery","aensTransfer","aensRevoke","extendTtl","nameTtl","claim","claimTx","nameClaimTx","nameSalt","isAuctionName","nameInter","waitMined","nameFee","preclaim","_salt","height","commitmentId","commitmentHash","preclaimTx","namePreclaimTx","aensClaim","bid","vsn","Aens","aensPreclaim","aensBid","clientTtl","compilerUrl","ignoreVersion","setCompilerUrl","client","disableBigNumbers","disableCaseConversion","responseInterceptor","URL","url","pathname","body","reason","parameter","info","pos","line","col","context","trim","statusText","compilerVersion","spec","compilerApi","api","fn","filesystem","file_system","COMPILER_GE_VERSION","COMPILER_LT_VERSION","getContractInstance","source","bytecode","contractAddress","validateBytecode","otherOptions","generateACI","resolveName","resolveByNode","getContract","active","encoded_aci","external_encoded_aci","deployInfo","callStatic","onChanBytecode","getContractByteCode","validateByteCode","compile","compileContract","sendAndProcess","tx","txData","rawTx","callInfo","getTransactionInfoByHash","handleCallError","returnType","returnValue","getFunctionACI","payable","getContractNameByEvent","contractAddressToName","addressToName","matchedEvents","_ref3","_ref4","_ref5","events","_ref6","eventName","_estimateGas","gasUsed","floor","deploy","_opt$gas","ownerId","contractId","contractCreateTx","gas","callData","owner","transaction","fnACI","amount","callerId","DRY_RUN_ACCOUNT","_opt$gas2","_opt$nonce","top","getKeyBlock","txOpt","GAS_MAX","getAccount","contractCallTx","callObj","dryRunOther","txDryRun","_opt$gas3","decodedResult","decodedEvents","decodeEvents","omitUnknown","contractName","_ref7","aciArgs","stateful","genHandler","_len","_key","delegateSignatureCommon","ids","signature","getNetworkId","createAensDelegationSignature","produceNameId","createOracleDelegationSignature","queryId","gasPrice","MIN_GAS_PRICE","AMOUNT","prepareGaParams","ins","authData","authFnName","gt","MAX_AUTH_FUN_GAS","authCallData","GeneralizedAccount","createGeneralizedAccount","createMetaTx","isGA","gaAttachTx","authFun","gaContractId","wrapInEmptySignedTx","buildTx","encodedTx","signatures","TX_TYPE","rawTransaction","abiVersion","getVmVersion","wrappedTx","unpackTx","txObject","fee","prepareTxParams","rlpEncoded","metaTxRlp","NOTIFICATIONS","METHODS","rpcClient","onAddressChange","networkId","node","addNode","onNetworkChange","msg","disconnectWallet","onDisconnect","RESPONSES","processResponse","RPC_STATUS","subscription","addressSubscription","signedTransaction","transactionHash","REQUESTS","handleMessage","callbacks","getHandler","debug","connection","other","_other$event","handler","connectToWallet","walletBroadcast","isSubscribedAccount","currentAccount","connected","connectNode","isConnected","force","connectionInfo","handlers","walletInfo","sendConnectRequest","sendDisconnect","sendMessage","disconnect","current","hasAccessToAccount","request","returnSigned","VERSION","signed","signTransaction","sendTransaction","getOracleObject","oracleId","oracle","getOracleByPubkey","oracleQueries","queries","getOracleQueriesByPubkey","pollQueries","pollForQueries","postQuery","postQueryToOracle","respondToQuery","extendOracle","extendOracleTtl","getQuery","getQueryObject","onQuery","interval","_getPollInterval","knownQueryIds","Set","checkNewQueries","has","add","stopped","q","getOracleQueryByPubkeyAndQueryId","decodedQuery","decodedResponse","respond","pollForResponse","pollForQueryResponse","attempts","responseBuffer","registerOracle","queryFormat","responseFormat","oracleRegisterTx","queryFee","senderId","oraclePostQueryTx","oracleQueryId","oracleTtl","oracleExtendTx","oracleRespondTx","Oracle","QUERY_FEE","ORACLE_TTL","queryTtl","QUERY_TTL","responseTtl","RESPONSE_TTL","w3cwebsocket","EventEmitter","PING_TIMEOUT_MS","PONG_TIMEOUT_MS","fsm","websockets","eventEmitters","messageQueue","messageQueueLocked","actionQueue","actionQueueLocked","sequence","channelId","rpcCallbacks","pingTimeoutId","pongTimeoutId","fsmId","emit","channel","enterState","nextState","enter","dequeueAction","changeStatus","newStatus","prevStatus","changeState","newState","enqueueAction","guard","action","locked","queue","dequeueMessage","messages","ping","clearTimeout","jsonrpc","method","onMessage","delete","channel_id","reject","details","close","initialize","connectionHandler","openHandler","channelOptions","wsUrl","searchParams","ws","onopen","reconnectTx","signed_tx","onclose","onmessage","appendSignature","signFn","signedTx","txType","handleUnexpectedMessage","wsMessage","channelOpen","awaitingConnection","channel_accept","funding_created","awaitingChannelCreateTx","awaitingOpenConfirmation","fsm_id","channelClosed","awaitingReconnection","initiator","responder","role","awaitingOnChainTx","awaitingBlockInclusion","own_funding_locked","funding_locked","awaitingInitialState","awaitingTxSignRequest","awaitingOffChainTx","updates","awaitingOffChainUpdate","accepted","errorCode","error_code","errorMessage","error_msg","awaitingUpdateConflict","generateKeyPair","to","awaitingShutdownTx","awaitingShutdownOnChainTx","awaitingLeave","awaitingWithdrawTx","awaitingWithdrawCompletion","onOnChainTx","own_withdraw_locked","onOwnWithdrawLocked","withdraw_locked","onWithdrawLocked","awaitingDepositTx","awaitingDepositCompletion","own_deposit_locked","onOwnDepositLocked","deposit_locked","onDepositLocked","awaitingNewContractTx","awaitingNewContractCompletion","round","encodeContractAddress","awaitingCallContractUpdateTx","awaitingCallContractCompletion","awaitingCallContractForceProgressUpdate","awaitingForceProgressCompletion","awaitingCallsPruned","channels","closeTx","snakeToPascalObjKeys","on","off","removeListener","metadata","meta","poi","contracts","balances","balance","leave","shutdown","withdraw","deposit","createContract","vmVersion","call_data","vm_version","abi_version","callContract","contract_id","forceProgress","gas_price","callContractStatic","getContractCall","caller","caller_id","getContractState","pubkey","cleanContractCalls","recipient","doSend","onStatusChanged","reconnect","txParams","Channel","existingFsmId","statics","allowCrossOrigin","extConnection","connect","pageConnection","origin","stop","wallets","scan","onDetected","wallet","isExtension","sendDirection","MESSAGE_DIRECTION","receiveDirection","target","newWallet","stopScan","port","warning","addListener","postMessage","hasListeners","hasListener","getBrowserAPI","runtime","getDefaultPointerKey","icons","aepp","propertyDescriptors","isHasAccounts","updateInfo","isSubscribed","getCurrentAccount","forceConnectionClose","setAccounts","forceNotification","isValidAccounts","updateSubscription","SUBSCRIPTION_TYPES","msgId","transformResult","resolveOnAccount","callInstance","ERRORS","shareNode","getWalletInfo","selectedNode","clientAccounts","getAccounts","onAcc","validation","signMessage","returnHex","rpcClients","methodName","deny","errorObjectOrHandler","sendResponseMessage","_selectAccount","_addAccount","addAccount","_selectNode","selectNode","removeRpcClient","addRpcClient","clientConnection","shareWalletInfo","postFn","WALLET_TYPE"],"sourceRoot":""}